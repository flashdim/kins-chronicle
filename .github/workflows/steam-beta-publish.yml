name: Deploy published release to Steam
on: 
  release:
    types: [published]

permissions:
  contents: write

env:
  REPO_ROOT: kins-chronicle
  REPO_DEPOT1: kins-chronicle
  REPO_DEPOT2: kins-chronicle-linux-x64
  REPO_DEPOT3: kins-chronicle-win-x64
  REPO_DEPOT4: kins-chronicle-osx-x64
  LINUX_NODEJS_VER: v0.80.0
  WIN_NODEJS_VER: v0.76.0
  OSX_NODEJS_VER: v0.80.0
  BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
  BUTLER_API_GAME: flashdim/kins-chronicle

jobs:
  deployToAll:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code at version just published
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.release.name }}

    - name: Cleanup build environment
      run: |
        rm -Rf ~/work/$REPO_ROOT/$REPO_DEPOT1/.git*
        ls -la ~/work/$REPO_ROOT/$REPO_DEPOT1

    - name: Set new version in game code
      run: >
        sed -i "s/GAME_VERSION/${{ github.event.release.name }}/g" 
        ~/work/$REPO_ROOT/$REPO_DEPOT1/js/plugins/KC_0_CleanBattleIntro.js

    - name: Verify new version in game code
      run: grep "gameVersion" ~/work/$REPO_ROOT/$REPO_DEPOT1/js/plugins/KC_0_CleanBattleIntro.js

    - name: Add linux build dependencies
      run: |
        pwd; mkdir -p ~/work/$REPO_ROOT/$REPO_DEPOT2; cd ~/work/$REPO_ROOT/$REPO_DEPOT2
        wget https://dl.nwjs.io/${LINUX_NODEJS_VER}/nwjs-sdk-${LINUX_NODEJS_VER}-linux-x64.tar.gz
        tar xvzf nwjs-sdk-${LINUX_NODEJS_VER}-linux-x64.tar.gz
        rm ./nwjs-sdk-${LINUX_NODEJS_VER}-linux-x64/chromedriver
        rm ./nwjs-sdk-${LINUX_NODEJS_VER}-linux-x64.tar.gz
        cp -R ./nwjs-sdk-${LINUX_NODEJS_VER}-linux-x64/* ./
        rm -Rf ./nwjs-sdk-${LINUX_NODEJS_VER}-linux-x64
        mv ./nw ./Game
        ls -l ~/work/$REPO_ROOT/$REPO_DEPOT2

    - name: Add windows build dependencies
      run: |
        pwd; mkdir -p ~/work/$REPO_ROOT/$REPO_DEPOT3; cd ~/work/$REPO_ROOT/$REPO_DEPOT3
        wget https://dl.nwjs.io/${WIN_NODEJS_VER}/nwjs-sdk-${WIN_NODEJS_VER}-win-x64.zip
        unzip nwjs-sdk-${WIN_NODEJS_VER}-win-x64.zip
        rm ./nwjs-sdk-${WIN_NODEJS_VER}-win-x64/chromedriver.exe
        rm ./nwjs-sdk-${WIN_NODEJS_VER}-win-x64.zip
        mv ./nwjs-sdk-${WIN_NODEJS_VER}-win-x64/* ./
        rmdir ./nwjs-sdk-${WIN_NODEJS_VER}-win-x64
        mv ./nw.exe ./Game.exe
        ls -l ~/work/$REPO_ROOT/$REPO_DEPOT3

    - name: Add osx build dependencies
      run: |
        pwd; mkdir -p ~/work/$REPO_ROOT/$REPO_DEPOT4; cd ~/work/$REPO_ROOT/$REPO_DEPOT4
        wget https://dl.nwjs.io/${OSX_NODEJS_VER}/nwjs-sdk-${OSX_NODEJS_VER}-osx-x64.zip
        unzip nwjs-sdk-${OSX_NODEJS_VER}-osx-x64.zip
        rm ./nwjs-sdk-${OSX_NODEJS_VER}-osx-x64/chromedriver
        rm ./nwjs-sdk-${OSX_NODEJS_VER}-osx-x64.zip
        mv ./nwjs-sdk-${OSX_NODEJS_VER}-osx-x64/* ./
        rmdir ./nwjs-sdk-${OSX_NODEJS_VER}-osx-x64
        mv ./nwjs.app ./Game.app
        mkdir -p ~/work/$REPO_ROOT/$REPO_DEPOT4/Game.app/Contents/Resources/app.nw
        cp -pr ~/work/$REPO_ROOT/$REPO_DEPOT1/* ./Game.app/Contents/Resources/app.nw/
        ls -l ~/work/$REPO_ROOT/$REPO_DEPOT4

    - name: Create Release Attachments
      run: |
        cd ~/work
        tar czf ~/work/$REPO_DEPOT2-${{ github.event.release.name }}.tar.gz -C ~/work/$REPO_ROOT/$REPO_DEPOT1/ . -C ~/work/$REPO_ROOT/$REPO_DEPOT2/ .
        ls ~/work/$REPO_ROOT/$REPO_DEPOT3/*
        cd ~/work/$REPO_ROOT/$REPO_DEPOT1/ && zip -r ~/work/$REPO_DEPOT3-${{ github.event.release.name }}.zip ./*
        cd ~/work/$REPO_ROOT/$REPO_DEPOT3/ && zip -ur ~/work/$REPO_DEPOT3-${{ github.event.release.name }}.zip ./*
        ls ~/work/$REPO_ROOT/$REPO_DEPOT4/*
        cd ~/work/$REPO_ROOT/$REPO_DEPOT4/ && zip -r ~/work/$REPO_DEPOT4-${{ github.event.release.name }}.zip ./*
        cd ~/work
        
    - name: Attach Artifacts to Release
      run: |
        gh release upload ${{ github.event.release.name }} ~/work/$REPO_DEPOT2-${{ github.event.release.name }}.tar.gz --repo $GITHUB_REPOSITORY
        gh release upload ${{ github.event.release.name }} ~/work/$REPO_DEPOT3-${{ github.event.release.name }}.zip --repo $GITHUB_REPOSITORY
        gh release upload ${{ github.event.release.name }} ~/work/$REPO_DEPOT4-${{ github.event.release.name }}.zip --repo $GITHUB_REPOSITORY
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Steam AppBuild manifest
      run: |
        cd ~/work
        echo "\"AppBuild\""                                     > ~/work/manifest.vdf
        echo "{"                                               >> ~/work/manifest.vdf
        echo "  \"AppID\" \"1617800\""                         >> ~/work/manifest.vdf
        echo "  \"Desc\" \"${{ github.event.release.name }}\"" >> ~/work/manifest.vdf
        echo "  \"BuildOutput\" \"~/work/BuildOutput\""        >> ~/work/manifest.vdf
        echo "  \"ContentRoot\" \"$REPO_ROOT\""                >> ~/work/manifest.vdf
        echo "  \"SetLive\" \"beta\""                          >> ~/work/manifest.vdf
        echo ""                                                >> ~/work/manifest.vdf
        echo "  \"Depots\""                                    >> ~/work/manifest.vdf
        echo "  {"                                             >> ~/work/manifest.vdf
        echo "    \"1617801\""                                 >> ~/work/manifest.vdf
        echo "    {"                                           >> ~/work/manifest.vdf
        echo "      \"FileMapping\""                           >> ~/work/manifest.vdf
        echo "      {"                                         >> ~/work/manifest.vdf
        echo "        \"LocalPath\" \"./$REPO_DEPOT1/*\""      >> ~/work/manifest.vdf
        echo "        \"DepotPath\" \".\""                     >> ~/work/manifest.vdf
        echo "        \"recursive\" \"1\""                     >> ~/work/manifest.vdf
        echo "      }"                                         >> ~/work/manifest.vdf
        echo "    }"                                           >> ~/work/manifest.vdf
        echo "    \"1617802\""                                 >> ~/work/manifest.vdf
        echo "    {"                                           >> ~/work/manifest.vdf
        echo "      \"FileMapping\""                           >> ~/work/manifest.vdf
        echo "      {"                                         >> ~/work/manifest.vdf
        echo "        \"LocalPath\" \"./$REPO_DEPOT2/*\""      >> ~/work/manifest.vdf
        echo "        \"DepotPath\" \".\""                     >> ~/work/manifest.vdf
        echo "        \"recursive\" \"1\""                     >> ~/work/manifest.vdf
        echo "      }"                                         >> ~/work/manifest.vdf
        echo "    }"                                           >> ~/work/manifest.vdf
        echo "    \"1617803\""                                 >> ~/work/manifest.vdf
        echo "    {"                                           >> ~/work/manifest.vdf
        echo "      \"FileMapping\""                           >> ~/work/manifest.vdf
        echo "      {"                                         >> ~/work/manifest.vdf
        echo "        \"LocalPath\" \"./$REPO_DEPOT3/*\""      >> ~/work/manifest.vdf
        echo "        \"DepotPath\" \".\""                     >> ~/work/manifest.vdf
        echo "        \"recursive\" \"1\""                     >> ~/work/manifest.vdf
        echo "      }"                                         >> ~/work/manifest.vdf
        echo "    }"                                           >> ~/work/manifest.vdf
        echo "    \"1617804\""                                 >> ~/work/manifest.vdf
        echo "    {"                                           >> ~/work/manifest.vdf
        echo "      \"FileMapping\""                           >> ~/work/manifest.vdf
        echo "      {"                                         >> ~/work/manifest.vdf
        echo "        \"LocalPath\" \"./$REPO_DEPOT4/*\""      >> ~/work/manifest.vdf
        echo "        \"DepotPath\" \".\""                     >> ~/work/manifest.vdf
        echo "        \"recursive\" \"1\""                     >> ~/work/manifest.vdf
        echo "      }"                                         >> ~/work/manifest.vdf
        echo "    }"                                           >> ~/work/manifest.vdf
        echo "  }"                                             >> ~/work/manifest.vdf
        echo "}"                                               >> ~/work/manifest.vdf
        cat ~/work/manifest.vdf
    
    
    - name: Setup steamcmd
      uses: CyberAndrii/setup-steamcmd@v1

    - name: Create steam config dir
      run: mkdir -p ~/Steam/config; ls -l ~/Steam/config

    - name: Create steam build output folder
      run: mkdir -p ~/work/BuildOutput; ls -l ~/work/BuildOutput
    
    - name: Create VDF file for login
      run: |
        echo "${{ secrets.STEAM_CONFIG_VDF }}" | base64 -d > ~/Steam/config/config.vdf
        chmod 777 ~/Steam/config/config.vdf
        ls -l ~/Steam/config

    - name: Test steamcmd login
      run: steamcmd 
        +set_steam_guard_code "INVALID" 
        +login ${{ secrets.STEAM_USERNAME }} 
        +quit

    - name: Upload beta branch via steamcmd
      run: steamcmd 
        +set_steam_guard_code "INVALID" 
        +login ${{ secrets.STEAM_USERNAME }} 
        +run_app_build ~/work/manifest.vdf 
        +quit
    
    - name: Set up butler for itch.io
      run: |
        cd ~/work && curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
        unzip ./butler.zip
        ./butler --version
        ./butler login 
      
    - name: Push build using butler
      run: |
        cd ~/work
        ./butler push ~/work/$REPO_DEPOT2-${{ github.event.release.name }}.tar.gz $BUTLER_API_GAME:linux-x64 --userversion ${{ github.event.release.name }}
        ./butler push ~/work/$REPO_DEPOT3-${{ github.event.release.name }}.zip $BUTLER_API_GAME:win-x64 --userversion ${{ github.event.release.name }}
        ./butler push ~/work/$REPO_DEPOT4-${{ github.event.release.name }}.zip $BUTLER_API_GAME:osx-x64 --userversion ${{ github.event.release.name }}
