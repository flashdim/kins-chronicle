//=============================================================================
// VisuStella MZ - Core Engine
// VisuMZ_0_CoreEngine.js
//=============================================================================

var Imported = Imported || {};
Imported.VisuMZ_0_CoreEngine = true;

var VisuMZ = VisuMZ || {};
VisuMZ.CoreEngine = VisuMZ.CoreEngine || {};
VisuMZ.CoreEngine.version = 1.38;

//=============================================================================
 /*:
 * @target MZ
 * @plugindesc [RPG Maker MZ] [Tier 0] [Version 1.38] [CoreEngine]
 * @author VisuStella
 * @url http://www.yanfly.moe/wiki/Core_Engine_VisuStella_MZ
 *
 * @help
 * ============================================================================
 * Introduction
 * ============================================================================
 *
 * The Core Engine plugin is designed to fix any bugs that may have slipped
 * past RPG Maker MZ's source code and to give game devs more control over
 * RPG Maker MZ's various features, ranging from mechanics to aesthetics to
 * quality of life improvements.
 *
 * Features include all (but not limited to) the following:
 *
 * * Bug fixes for the problems existing in the RPG Maker MZ base code.
 * * Failsafes added for Script Call related event commands.
 * * Lots of Quality of Life Settings that can be activated through the
 *   Plugin Parameters.
 * * Control over the various Text Colors used throughout the game.
 * * Change up the maximum amount of gold carried, give it an icon attached to
 *   the label, and include text for overlap specifics.
 * * Preload images as the game boots up.
 * * Add specific background images for menus found throughout the game.
 * * A button assist window will appear at the top or bottom of the screen,
 *   detailing which buttons do what when inside a menu. This feature can be
 *   turned off.
 * * Choose which in-game battler parameters to display inside menus (ie ATK,
 *   DEF, AGI, etc.) and determine their maximum values, along with plenty of
 *   notetags to give more control over parameter, x-parameter, s-parameter
 *   bonuses through equipment, states, and other trait objects.
 * * Control over how the UI objects appear (such as the menu button, cancel
 *   button, left/right actor switch buttons).
 * * Reposition actors and enemies if the battle resolution is larger.
 * * Allow class names and nicknames to support text codes when displayed.
 * * Determine how windows behave in the game, if they will mask other windows,
 *   their line height properties, and more.
 *
 * ============================================================================
 * Requirements
 * ============================================================================
 *
 * This plugin is made for RPG Maker MZ. This will not work in other iterations
 * of RPG Maker.
 *
 * ------ Tier 0 ------
 *
 * This plugin is a Tier 0 plugin. Place it under other plugins of lower tier
 * value on your Plugin Manager list (ie: 0, 1, 2, 3, 4, 5). This is to ensure
 * that your plugins will have the best compatibility with the rest of the
 * VisuStella MZ Plugin library.
 *
 * ============================================================================
 * Important Changes: Bug Fixes
 * ============================================================================
 *
 * This plugin also serves to fix various bugs found in RPG Maker MZ that have
 * been unaddressed or not yet taken care of. The following is a list of bugs
 * that have been fixed by this plugin:
 *
 * ---
 *
 * Attack Skill Trait
 *
 * Enemies are unaffected by the Attack Skill Trait. This means if they have
 * an Attack action, they will always use Attack over and over even if their
 * Attack Skill Trait has been changed. This plugin will change it up so that
 * the Attack skill will comply with whatever their Attack Skill Trait's skill
 * is set to.
 *
 * ---
 *
 * Auto Battle Actor Skill Usage
 *
 * If an actor with Auto Battle has access to a skill but not have any access
 * to that skill's type, that actor will still be able to use the skill during
 * Auto Battle despite the fact that the actor cannot use that skill during
 * manual input.
 *
 * ---
 * 
 * Auto Battle Lock Up
 * 
 * If an auto battle Actor fights against an enemy whose DEF/MDF is too high,
 * they will not use any actions at all. This can cause potential game freezing
 * and softlocks. This plugin will change that and have them default to a
 * regular Attack.
 * 
 * ---
 * 
 * Gamepad Repeat Input
 * 
 * Cleared inputs on gamepads do not have a downtime and will trigger the
 * following input frame. The causes problems with certain RPG Maker MZ menus
 * where the inputs have to be cleared as the next immediate frame will have
 * them inputted again. This plugin changes it so that whenever inputs are
 * cleared, there is a downtime equal to the keyboard clear frames before the
 * gamepad input is registered once more.
 * 
 * ---
 * 
 * Invisible Battle Sprites
 * 
 * If you removed a party member during battle and added that exact party
 * member back into the same slot, their sprite would appear invisible. The
 * VisuStella Core Engine will fix this problem and prevent it from happening.
 * 
 * ---
 *
 * Move Picture, Origin Differences
 *
 * If a Show Picture event command is made with an Origin setting of
 * "Upper Left" and a Move Picture event command is made afterwards with an
 * Origin setting of "Center", RPG Maker MZ would originally have it instantly
 * jump into the new origin setting without making a clean transition between
 * them. This plugin will create that clean transition between origins.
 *
 * ---
 * 
 * Timer Sprite
 * 
 * By default, RPG Maker MZ adds Sprite_Timer into its spriteset, either for
 * maps or for battles. There is one major problem with this: when spritesets
 * are affected by filters, zooms, and/or blurs, this hinders how readable the
 * timer sprite is, making the information perceived by the player to be much
 * harder than it needs to be. The Core Engine adds the sprite to the parent
 * scene instead of the spriteset to ensure it's unobscured by anything else.
 * 
 * ---
 * 
 * Unusable Battle Items
 * 
 * If any party member is able to use an item in battle, then all party members
 * are able to use said item, even if that party member is supposed to be
 * unable to use that item. This is now changed so that battle items are
 * checked on an individual basis and not on a party-wide basis.
 * 
 * ---
 * 
 * Window Arrows Sprite Tearing
 * 
 * If a window object in RPG Maker MZ were to have an odd number for width size
 * then the arrow elements found for the window would be positioned on a half
 * pixel, giving it a blurry look and also have sprite tearing issues. This is
 * now fixed by rounding the number to the nearest whole number.
 * 
 * ---
 * 
 * Window Client Area Scaling Bug
 * 
 * If the window has a scale value different from 1.0, the client area (the
 * interactable parts) will not scale properly and appear clipped out. This
 * is now fixed by adjusting the client area to the window's scale values and
 * rounding upward to the nearest whole number.
 * 
 * ---
 * 
 * Window Skin Bleeding
 * 
 * Since the v1.2.0 update, Window.prototype._refreshBack's frame value has
 * been set from 96 to 95. This results in the window skin bleeding past the
 * window's intended borders. The Core Engine now reverts this change to
 * prevent the bleeding effect from happening.
 * 
 * ---
 *
 * ============================================================================
 * Major Changes: New Hard-Coded Features
 * ============================================================================
 *
 * This plugin adds some new hard-coded features to RPG Maker MZ's functions.
 * The following is a list of them.
 *
 * ---
 *
 * Scroll-Linked Pictures
 *
 * - If a Parallax has a ! at the start of its filename, it is bound to the map
 * scrolling. The same thing now happens with pictures. If a Picture has a ! at
 * the start of its filename, it is bound to the map's scrolling as well.
 *
 * ---
 *
 * Movement Route Scripts
 *
 * - If code in a Movement Route Script command fails, instead of crashing the
 * game, it will now act as if nothing happened except to display the cause of
 * the error inside the console.
 *
 * ---
 * 
 * Script Call Failsafes
 * 
 * - If code found in Conditional Branches, Control Variables, and/or Script
 * Calls fail to activate, instead of crashing the game, it will now act as if
 * nothing happened except to display the cause of the error inside the
 * console.
 * 
 * ---
 * 
 * Digit Grouping
 * 
 * - There exists an option to change how numbers are displayed and converted
 * in your game. This option can be enabled or disabled by going into the
 * Plugin Manager > VisuMZ_0_OptionsCore > Quality of Life Settings >
 * Digit Grouping and toggling on/off whichever ones you want.
 * 
 * - Digit Grouping will follow the rules of whatever country/locale the Plugin
 * Parameters are set to. If it's to default 'en-US', then 1234567.123456 will
 * become 1,234,567.123456. Set it to 'es-ES' and it becomes 1.234.567,123456
 * instead.
 * 
 * - This uses JavaScript's Number.toLocaleString() function and will therefore
 * follow whatever rules it has. This means if there are trailing zeroes at the
 * end of a decimal, it will cut them off. Numbers like 123.45000 will become
 * 123.45 instead. Excess numbers past 6 decimal places will be rounded. A
 * number like 0.123456789 will become 0.123457 instead.
 * 
 * - Numbers in between [ and ], < and > will be excluded from digit grouping
 * in order for text codes to be preserved accurately. \I[1234] will remain as
 * \I[1234].
 * 
 * - If you would like to enter in a number without digit grouping, surround it
 * with {{ and }}. Typing in {{1234567890}} will yield 1234567890.
 * 
 * ---
 * 
 * Show Scrolling Text, additional functionality
 * 
 * The event command "Show Scrolling Text" now has additional functionality as
 * long as the VisuStella MZ Core Engine is installed. If the game dev inserts
 * "// Script Call" (without the quotes) inside the scrolling text, then the
 * entirity of the Show Scrolling Text event command will be ran as a giant
 * script call event command.
 * 
 * The reason why this functionality is added is because the "Script..." event
 * command contains only 12 lines maximum. This means for any script call
 * larger than 12 lines of code cannot be done by normal means as each script
 * call is ran as a separate instance.
 * 
 * By repurposing the "Show Scrolling Text" event command to be able to
 * function as an extended "Script..." event command, such a thing is now
 * possible with less hassle and more lines to code with.
 * 
 * This effect does not occur if the Show Scrolling Text event command does not
 * have "// Script Call" in its contents.
 * 
 * ---
 *
 * ============================================================================
 * Notetags
 * ============================================================================
 *
 * The following are notetags that have been added through this plugin. These
 * notetags will not work with your game if this plugin is OFF or not present.
 *
 * === Actors ===
 *
 * Parameter limits can be adjusted in the Plugin Parameters, but this won't
 * lift the ability to change the values of an actor's initial or max level
 * past the editor's limits. Instead, this must be done through the usage of
 * notetags to accomplish the feat.
 *
 * ---
 *
 * <Max Level: x>
 *
 * - Used for: Actor Notetags
 * - Replace 'x' with an integer to determine the actor's max level.
 * - This allows you to go over the database limit of 99.
 * - If this notetag isn't used, default to the actor's database value.
 *
 * ---
 *
 * <Initial Level: x>
 *
 * - Used for: Actor Notetags
 * - Replace 'x' with an integer to determine the actor's initial level.
 * - This allows you to go over the database limit of 99.
 * - If this notetag isn't used, default to the actor's database value.
 *
 * ---
 *
 * === Classes ===
 *
 * As actor levels can now surpass 99 due to the notetag system, there may be
 * some skills you wish certain classes can learn upon reaching higher levels
 * past 99, too.
 *
 * ---
 * 
 * <Learn At Level: x>
 *
 * - Used for: Class Skill Learn Notetags
 * - Replace 'x' with an integer to determine the level this class will learn
 *   the associated skill at.
 * - This allows you to go over the database limit of 99.
 * - If this notetag isn't used, default to the class's database value.
 *
 * ---
 *
 * === Enemies ===
 *
 * Enemies are now given levels. The levels don't do anything except to serve
 * as a container for a number value. This way, levels can be used in damage
 * formulas (ie. a.atk - b.level) without causing any errors. To give enemies
 * levels, use the notetags below. These notetags also allow you to adjust the
 * base parameters, EXP, and Gold past the database limitations.
 *
 * ---
 *
 * <Level: x>
 *
 * - Used for: Enemy Notetags
 * - Replace 'x' with an integer to determine the enemy's level.
 * - If no level is declared, the level will default to 1.
 *
 * ---
 *
 * <param: x>
 *
 * - Used for: Enemy Notetags
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to alter.
 *   - This notetag does NOT work with X Parameters, S Parameters, or any
 *     custom parameters. This notetag ONLY works with the base parameters.
 * - Replace 'x' with an integer to set an enemy's 'param' base value.
 * - This will overwrite the enemy's database value and can exceed the original
 *   value limitation in the database.
 * - If these notetags aren't used, default to the enemy's database value.
 *
 * ---
 *
 * <EXP: x>
 * <Gold: x>
 *
 * - Used for: Enemy Notetags
 * - Replace 'x' with an integer to determine the enemy's EXP or Gold values.
 * - This will overwrite the enemy's database value and can exceed the original
 *   value limitation in the database.
 * - If these notetags aren't used, default to the enemy's database value.
 *
 * ---
 * 
 * === Animations ===
 * 
 * Animations in RPG Maker MZ are done by Effekseer and the animation system
 * has been revamped. However, the animations are only centered on the targets
 * now, and cannot be attached to the head or foot. Insert these tags into
 * the names of the animations in the database to adjust their positions.
 * 
 * ---
 * 
 * <Head>
 * <Foot>
 * 
 * - Used for: Animation Name Tags
 * - Will set the animation to anchor on top of the sprite (if <Head> is used)
 *   or at the bottom of the sprite (if <Foot> is used).
 * 
 * ---
 * 
 * <Anchor X: x>
 * <Anchor Y: y>
 * 
 * <Anchor: x, y>
 * 
 * - Used for: Animation Name Tags
 * - Will anchor the animation at a specific point within the sprite based on
 *   the 'x' and 'y' values.
 * - Replace 'x' and 'y' with numeric values representing their positions based
 *   on a rate where 0.0 is the furthest left/up (x, y respectively) to 1.0 for
 *   the furthest right/down (x, y respectively).
 * 
 * Examples:
 * 
 * <Anchor X: 0.4>
 * <Anchor Y: 0.8>
 * 
 * <Anchor: 0.2, 0.9>
 * 
 * ---
 * 
 * <Offset X: +x>
 * <Offset X: -x>
 * <Offset Y: +y>
 * <Offset Y: -y>
 * 
 * <Offset: +x, +y>
 * <Offset: -x, -y>
 * 
 * - Used for: Animation Name Tags
 * - Will anchor the animation to be offset by an exact number of pixels.
 * - This does the same the editor does, except it lets you input values
 *   greater than 999 and lower than -999.
 * - Replace 'x' and 'y' with numeric values the exact number of pixels to
 *   offset the animation's x and y coordinates by.
 * 
 * Examples:
 * 
 * <Offset X: +20>
 * <Offset Y: -50>
 * 
 * <Offset: +10, -30>
 * 
 * ---
 * 
 * <Mirror Offset X>
 * <No Mirror Offset X>
 * 
 * - Used for: Animation Name Tags
 * - If an animation is mirrored, you can choose to have the animation's Offset
 *   X value be mirrored, too (or not at all).
 * - If no name tag is discovered, this will use the setting found in the
 *   Plugin Parameters > QoL Settings > Misc > Ani: Mirror Offset X setting.
 * 
 * ---
 *
 * === Quality of Life ===
 *
 * By default, RPG Maker MZ does not offer an encounter step minimum after a
 * random encounter has finished. This means that one step immediately after
 * finishing a battle, the player can immediately enter another battle. The
 * Quality of Life improvement: Minimum Encounter Steps allows you to set a
 * buffer range between battles for the player to have some breathing room.
 *
 * ---
 *
 * <Minimum Encounter Steps: x>
 *
 * - Used for: Map Notetags
 * - Replace 'x' with the minimum number of steps before the player enters a
 *   random encounter on that map.
 * - If this notetag is not used, then the minimum encounter steps for the map
 *   will default to Quality of Life Settings => Encounter Rate Min.
 *
 * ---
 *
 * Tile shadows are automatically added to certain tiles in the map editor.
 * These tile shadows may or may not fit some types of maps. You can turn them
 * on/off with the Quality of Life Plugin Parameters or you can override the
 * settings with the following notetags:
 *
 * ---
 *
 * <Show Tile Shadows>
 * <Hide Tile Shadows>
 *
 * - Used for: Map Notetags
 * - Use the respective notetag for the function you wish to achieve.
 * - If this notetag is not used, then the minimum encounter steps for the map
 *   will default to Quality of Life Settings => No Tile Shadows.
 *
 * ---
 *
 * === Basic, X, and S Parameters ===
 *
 * A battler's parameters, or stats as some devs know them as, are the values
 * that determine how a battler performs. These settings allow you to alter
 * behaviors and give boosts to trait objects in a more controlled manner.
 *
 * ---
 *
 * <param Plus: +x>
 * <param Plus: -x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Adds or subtracts 'x' to 'param' plus value when calculating totals.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'x' with an integer on how much to adjust the parameter by.
 * - This is used to calculate the 'plus' portion in the Parameter Settings =>
 *   Basic Parameter => Formula.
 *
 * ---
 *
 * <param Rate: x%>
 * <param Rate: x.x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Changes 'param' rate to 'x' to alter the total 'param' value.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'x' with a percentage (ie. 150%) or a rate (ie. 1.5).
 * - This is used to calculate the 'paramRate' portion in Parameter Settings =>
 *   Basic Parameter => Formula.
 *
 * ---
 *
 * <param Flat: +x>
 * <param Flat: -x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Adds or subtracts 'x' to 'param' plus value when calculating totals.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'x' with an integer on how much to adjust the parameter by.
 * - This is used to calculate the 'flatBonus' portion in Parameter Settings =>
 *   Basic Parameter => Formula.
 *
 * ---
 *
 * <param Max: x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Sets max caps for the 'param' to be 'x'. If there are multiple max caps
 *   available to the unit, then the highest will be selected.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'x' with an integer to determine what the max cap should be.
 *
 * ---
 *
 * <xparam Plus: +x%>
 * <xparam Plus: -x%>
 *
 * <xparam Plus: +x.x>
 * <xparam Plus: -x.x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Adds or subtracts 'x' to 'xparam' plus value when calculating totals.
 * - Replace 'xparam' with 'HIT', 'EVA', 'CRI', 'CEV', 'MEV', 'MRF', 'CNT',
 *   'HRG', 'MRG', 'TRG' to determine which X parameter to modify.
 * - Replace 'x' with a percentage (ie. 150%) or a rate (ie. 1.5).
 * - This is used to calculate the 'plus' portion in the Parameter Settings =>
 *   X Parameter => Formula.
 *
 * ---
 *
 * <xparam Rate: x%>
 * <xparam Rate: x.x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Changes 'param' rate to 'x' to alter the total 'xparam' value.
 * - Replace 'xparam' with 'HIT', 'EVA', 'CRI', 'CEV', 'MEV', 'MRF', 'CNT',
 *   'HRG', 'MRG', 'TRG' to determine which X parameter to modify.
 * - Replace 'x' with a percentage (ie. 150%) or a rate (ie. 1.5).
 * - This is used to calculate the 'paramRate' portion in Parameter Settings =>
 *   X Parameter => Formula.
 *
 * ---
 *
 * <xparam Flat: +x%>
 * <xparam Flat: -x%>
 *
 * <xparam Flat: +x.x>
 * <xparam Flat: -x.x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Adds or subtracts 'x' to 'xparam' plus value when calculating totals.
 * - Replace 'xparam' with 'HIT', 'EVA', 'CRI', 'CEV', 'MEV', 'MRF', 'CNT',
 *   'HRG', 'MRG', 'TRG' to determine which X parameter to modify.
 * - Replace 'x' with a percentage (ie. 150%) or a rate (ie. 1.5).
 * - This is used to calculate the 'flatBonus' portion in Parameter Settings =>
 *   X Parameter => Formula.
 *
 * ---
 *
 * <sparam Plus: +x%>
 * <sparam Plus: -x%>
 *
 * <sparam Plus: +x.x>
 * <sparam Plus: -x.x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Adds or subtracts 'x' to 'sparam' plus value when calculating totals.
 * - Replace 'sparam' with 'TGR', 'GRD', 'REC', 'PHA', 'MCR', 'TCR', 'PDR',
 *   'MDR', 'FDR', 'EXR' to determine which S parameter to modify.
 * - Replace 'x' with a percentage (ie. 150%) or a rate (ie. 1.5).
 * - This is used to calculate the 'plus' portion in the Parameter Settings =>
 *   S Parameter => Formula.
 *
 * ---
 *
 * <sparam Rate: x%>
 * <sparam Rate: x.x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Changes 'param' rate to 'x' to alter the total 'sparam' value.
 * - Replace 'sparam' with 'TGR', 'GRD', 'REC', 'PHA', 'MCR', 'TCR', 'PDR',
 *   'MDR', 'FDR', 'EXR' to determine which S parameter to modify.
 * - Replace 'x' with a percentage (ie. 150%) or a rate (ie. 1.5).
 * - This is used to calculate the 'paramRate' portion in Parameter Settings =>
 *   S Parameter => Formula.
 *
 * ---
 *
 * <sparam Flat: +x%>
 * <sparam Flat: -x%>
 *
 * <sparam Flat: +x.x>
 * <sparam Flat: -x.x>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Adds or subtracts 'x' to 'sparam' plus value when calculating totals.
 * - Replace 'sparam' with 'TGR', 'GRD', 'REC', 'PHA', 'MCR', 'TCR', 'PDR',
 *   'MDR', 'FDR', 'EXR' to determine which S parameter to modify.
 * - Replace 'x' with a percentage (ie. 150%) or a rate (ie. 1.5).
 * - This is used to calculate the 'flatBonus' portion in Parameter Settings =>
 *   S Parameter => Formula.
 *
 * === JavaScript Notetags: Basic, X, and S Parameters ===
 *
 * The following are notetags made for users with JavaScript knowledge. These
 * notetags are primarily aimed at Basic, X, and S Parameters.
 *
 * ---
 *
 * <JS param Plus: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'param' plus value.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   plus amount for the parameter's total calculation.
 * - This is used to calculate the 'plus' portion in the Parameter Settings =>
 *   Basic Parameter => Formula.
 *
 * ---
 *
 * <JS param Rate: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'param' rate value.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   param rate amount for the parameter's total calculation.
 * - This is used to calculate the 'paramRate' portion in Parameter Settings =>
 *   Basic Parameter => Formula.
 *
 * ---
 *
 * <JS param Flat: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'param' flat value.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   flat bonus amount for the parameter's total calculation.
 * - This is used to calculate the 'flatBonus' portion in Parameter Settings =>
 *   Basic Parameter => Formula.
 *
 * ---
 *
 * <JS param Max: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to determine what the max cap for 'param' should be. If there
 *   are multiple max caps available to the unit, then the highest is selected.
 * - Replace 'param' with 'MaxHP', 'MaxMP', 'ATK', 'DEF', 'MAT', 'MDF', 'AGI',
 *   or 'LUK' to determine which parameter to modify.
 * - Replace 'code' with JavaScript code to determine the max cap for the
 *   desired parameter.
 *
 * ---
 *
 * <JS xparam Plus: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'xparam' plus value.
 * - Replace 'xparam' with 'HIT', 'EVA', 'CRI', 'CEV', 'MEV', 'MRF', 'CNT',
 *   'HRG', 'MRG', 'TRG' to determine which X parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   plus amount for the X parameter's total calculation.
 * - This is used to calculate the 'plus' portion in the Parameter Settings =>
 *   X Parameter => Formula.
 *
 * ---
 *
 * <JS xparam Rate: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'xparam' rate value.
 * - Replace 'xparam' with 'HIT', 'EVA', 'CRI', 'CEV', 'MEV', 'MRF', 'CNT',
 *   'HRG', 'MRG', 'TRG' to determine which X parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   param rate amount for the X parameter's total calculation.
 * - This is used to calculate the 'paramRate' portion in Parameter Settings =>
 *   X Parameter => Formula.
 *
 * ---
 *
 * <JS xparam Flat: code>
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'xparam' flat value.
 * - Replace 'xparam' with 'HIT', 'EVA', 'CRI', 'CEV', 'MEV', 'MRF', 'CNT',
 *   'HRG', 'MRG', 'TRG' to determine which X parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   flat bonus amount for the X parameter's total calculation.
 * - This is used to calculate the 'flatBonus' portion in Parameter Settings =>
 *   X Parameter => Formula.
 *
 * ---
 *
 * <JS sparam Plus: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'sparam' plus value.
 * - Replace 'sparam' with 'TGR', 'GRD', 'REC', 'PHA', 'MCR', 'TCR', 'PDR',
 *   'MDR', 'FDR', 'EXR' to determine which S parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   plus amount for the S parameter's total calculation.
 * - This is used to calculate the 'plus' portion in the Parameter Settings =>
 *   S Parameter => Formula.
 *
 * ---
 *
 * <JS sparam Rate: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'sparam' rate value.
 * - Replace 'sparam' with 'TGR', 'GRD', 'REC', 'PHA', 'MCR', 'TCR', 'PDR',
 *   'MDR', 'FDR', 'EXR' to determine which S parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   param rate amount for the S parameter's total calculation.
 * - This is used to calculate the 'paramRate' portion in Parameter Settings =>
 *   S Parameter => Formula.
 *
 * ---
 *
 * <JS sparam Flat: code>
 *
 * - Used for: Actor, Class, Weapon, Armor, Enemy, State Notetags
 * - Runs 'code' to change the 'sparam' flat value.
 * - Replace 'sparam' with 'TGR', 'GRD', 'REC', 'PHA', 'MCR', 'TCR', 'PDR',
 *   'MDR', 'FDR', 'EXR' to determine which S parameter to modify.
 * - Replace 'code' with JavaScript code to determine how much to change the
 *   flat bonus amount for the S parameter's total calculation.
 * - This is used to calculate the 'flatBonus' portion in Parameter Settings =>
 *   S Parameter => Formula.
 *
 * ---
 * 
 * === Battle Setting-Related Notetags ===
 * 
 * These tags will change the settings for battle regardless of how the battle
 * system is set up normally. Insert these tags in either the noteboxes of maps
 * or the names of troops for them to take effect. If both are present for a
 * specific battle, then priority goes to the setting found in the troop name.
 * 
 * ---
 * 
 * <FV>
 * <Front View>
 * <Battle View: FV>
 * <Battle View: Front View>
 * 
 * - Used for: Map Notetags and Troop Name Tags
 * - Changes the perspective of battle to front view for this specific map or
 *   battle.
 * - Make sure you have the enemy image files available in the img/enemies/
 *   folder as they will used instead of the "sv_enemies" graphics.
 * 
 * ---
 * 
 * <SV>
 * <Side View>
 * <Battle View: SV>
 * <Battle View: Side View>
 * 
 * - Used for: Map Notetags and Troop Name Tags
 * - Changes the perspective of battle to side view for this specific map or
 *   battle.
 * - Make sure you have the enemy image files available in the img/sv_enemies/
 *   folder as they will used instead of the "enemies" graphics.
 * - Make sure your actors have "sv_actor" graphics attached to them.
 * 
 * ---
 * 
 * <DTB>
 * <Battle System: DTB>
 * 
 * - Used for: Map Notetags and Troop Name Tags
 * - Changes the battle system to the default battle system (DTB).
 * 
 * ---
 * 
 * <TPB Active>
 * <ATB Active>
 * <Battle System: TPB Active>
 * <Battle System: ATB Active>
 * 
 * <TPB Wait>
 * <ATB Wait>
 * <Battle System: TPB Wait>
 * <Battle System: ATB Wait>
 * 
 * - Used for: Map Notetags and Troop Name Tags
 * - Changes the battle system to the time progress battle system (TPB) or
 *   active turn battle system (ATB) if you have VisuMZ_2_BattleSystemATB
 *   installed for the game project.
 * 
 * ---
 * 
 * <BTB>
 * <Battle System: BTB>
 * 
 * <CTB>
 * <Battle System: CTB>
 * 
 * <FTB>
 * <Battle System: FTB>
 * 
 * <OTB>
 * <Battle System: OTB>
 * 
 * <STB>
 * <Battle System: STB>
 * 
 * - Used for: Map Notetags and Troop Name Tags
 * - Changes the battle system to the respective battle system as long as you
 *   have those plugins installed in the current project.
 * 
 * ---
 *
 * ============================================================================
 * Plugin Commands
 * ============================================================================
 *
 * The following are Plugin Commands that come with this plugin. They can be
 * accessed through the Plugin Command event command.
 *
 * ---
 * 
 * === Export Plugin Commands ===
 * 
 * ---
 * 
 * Export: All Maps Text
 * - PLAY TEST ONLY. Exports all of the text from all maps,
 *   their events, event pages, and any associated Common Events.
 * 
 *   - Exports 'Show Text' event commands.
 *   - Exports 'Show Choices' event commands.
 *   - Exports 'Show Scrolling Text' event commands.
 *   - Exports 'Comments' event commands.
 *   - Only the raw text will be exported.
 *   - Only usable during Play Test.
 * 
 * ---
 * 
 * Export: All Troops Text
 * - PLAY TEST ONLY. Exports all of the text from all troops,
 *   their event pages, and any associated Common Events.
 * 
 *   - Exports 'Show Text' event commands.
 *   - Exports 'Show Choices' event commands.
 *   - Exports 'Show Scrolling Text' event commands.
 *   - Exports 'Comments' event commands.
 *   - Only the raw text will be exported.
 *   - Only usable during Play Test.
 * 
 * ---
 * 
 * Export: Current Map Text
 * - PLAY TEST ONLY. Exports all of the text on the current map,
 *   its events, the event pages, and any associated Common Events.
 * 
 *   - Exports 'Show Text' event commands.
 *   - Exports 'Show Choices' event commands.
 *   - Exports 'Show Scrolling Text' event commands.
 *   - Exports 'Comments' event commands.
 *   - Only the raw text will be exported.
 *   - Only usable during Play Test.
 *   - If not in battle, this Plugin Command will not work.
 * 
 * ---
 * 
 * Export: Current Troop Text
 * - PLAY TEST ONLY. Exports all of the text on the current troop,
 *   the troop's event pages, and any associated Common Events.
 * 
 *   - Exports 'Show Text' event commands.
 *   - Exports 'Show Choices' event commands.
 *   - Exports 'Show Scrolling Text' event commands.
 *   - Exports 'Comments' event commands.
 *   - Only the raw text will be exported.
 *   - Only usable during Play Test.
 *   - If not in battle, this Plugin Command will not work.
 * 
 * ---
 * 
 * === Game Plugin Commands ===
 * 
 * ---
 *
 * Game: Open URL
 * - Opens a website URL from the game.
 *
 *   URL:
 *   - Where do you want to take the player?
 *
 * ---
 * 
 * === Gold Plugin Commands ===
 * 
 * ---
 *
 * Gold: Gain/Lose
 * - Allows you to give/take more gold than the event editor limit.
 *
 *   Value:
 *   - How much gold should the player gain/lose?
 *   - Use negative values to remove gold.
 *
 * ---
 * 
 * === Picture Plugin Commands ===
 * 
 * ---
 *
 * Picture: Easing Type
 * - Changes the easing type to a number of options.
 *
 *   Picture ID:
 *   - Which picture do you wish to apply this easing to?
 *
 *   Easing Type:
 *   - Select which easing type you wish to apply.
 *
 *   Instructions:
 *   - Insert this Plugin Command after a "Move Picture" event command.
 *   - Turn off "Wait for Completion" in the "Move Picture" event.
 *   - You may have to add in your own "Wait" event command after.
 *
 * ---
 * 
 * Picture: Erase All
 * - Erases all pictures on the screen because it's extremely tedious to do it
 *   one by one.
 * 
 * ---
 * 
 * Picture: Erase Range
 * - Erases all pictures within a range of numbers because it's extremely
 *   tedious to do it one by one.
 * 
 *   Starting ID:
 *   - The starting ID of the pictures to erase.
 * 
 *   Ending ID:
 *   - The ending ID of the pictures to erase.
 * 
 * ---
 * 
 * Picture: Show Icon
 * - Shows an icon instead of a picture image.
 * - The picture icon can be controlled like any other picture.
 * 
 *   General:
 *
 *     Picture ID Number:
 *     - What is the ID of the picture you wish to show at?
 *     - Use a number between 1 and 100.
 *     - You may use JavaScript code.
 *
 *     Icon Index:
 *     - Select the icon index to use for this picture.
 *     - You may use JavaScript code.
 *
 *     Smooth Icon?:
 *     - This will make the icon smoothed out or pixelated.
 * 
 *   Picture Settings:
 * 
 *     Position:
 *
 *       Origin:
 *       - What is the origin of this picture icon?
 *         - Upper Left
 *         - Center
 *
 *       Position X:
 *       - X coordinate of the picture.
 *       - You may use JavaScript code.
 *
 *       Position Y:
 *       - Y coordinate of the picture.
 *       - You may use JavaScript code.
 * 
 *     Scale:
 *
 *       Width %:
 *       - Horizontal scale of the picture.
 *       - You may use JavaScript code.
 *       - 100 is 100%
 *
 *       Height %:
 *       - Vertical scale of the picture.
 *       - You may use JavaScript code.
 *       - 100 is 100%
 * 
 *     Blend:
 *
 *       Opacity:
 *       - Insert a number to determine opacity level.
 *       - Use a number between 0 and 255.
 *       - You may use JavaScript code.
 *
 *       Blend Mode:
 *       - What kind of blend mode do you wish to apply to the picture?
 * 
 * ---
 * 
 * === Screen Shake Plugin Commands ===
 * 
 * ---
 * 
 * Screen Shake: Custom:
 * - Creates a custom screen shake effect and also sets the following uses of
 *   screen shake to this style.
 * 
 *   Shake Style:
 *   - Select shake style type.
 *   - Original
 *   - Random
 *   - Horizontal
 *   - Vertical
 * 
 *   Power:
 *   - Power level for screen shake.
 * 
 *   Speed:
 *   - Speed level for screen shake.
 * 
 *   Duration:
 *   - Duration of screenshake.
 *   - You can use code as well.
 * 
 *   Wait for Completion:
 *   - Wait until completion before moving onto the next event?
 * 
 * ---
 * 
 * === Switch Plugin Commands ===
 * 
 * ---
 * 
 * Switches: Randomize ID(s)
 * - Select specific Switch ID's to randomize ON/OFF.
 * 
 *   Switch ID(s):
 *   - Select which Switch ID(s) to toggle.
 * 
 *   Chance for ON:
 *   - Chance out of 100 that determines the switches to be ON.
 * 
 * ---
 *
 * Switches: Randomize Range
 * - Select specific Switch ID Range to randomize ON/OFF.
 * - The ratio determines the ON/OFF distribution.
 *
 *   Starting ID:
 *   - The starting ID of the Switch to toggle.
 *
 *   Ending ID:
 *   - The ending ID of the Switch to toggle.
 *
 *   Chance for ON:
 *   - Chance out of 100 that determines the switches to be ON.
 *
 * ---
 *
 * Switches: Toggle ID(s)
 * - Select specific Switch ID's to toggle ON/OFF.
 * - ON becomes OFF. OFF becomes ON.
 *
 *   Switch ID(s):
 *   - Select which Switch ID(s) to toggle.
 *
 * ---
 *
 * Switches: Toggle Range
 * - Select specific Switch ID Range to toggle ON/OFF.
 * - ON becomes OFF. OFF becomes ON.
 *
 *   Starting ID:
 *   - The starting ID of the Switch to toggle.
 *
 *   Ending ID:
 *   - The ending ID of the Switch to toggle.
 *
 * ---
 * 
 * === System Plugin Commands ===
 * 
 * ---
 *
 * System: Battle System Change
 * - Switch to a different battle system in-game.
 *
 *   Change To:
 *   - Choose which battle system to switch to.
 *     - Database Default (Use game database setting)
 *     - -
 *     - DTB: Default Turn Battle
 *     - TPB Active: Time Progress Battle (Active)
 *     - TPB Wait: Time Progress Battle (Wait)
 *     - -
 *     - BTB: Brave Turn Battle (Req VisuMZ_2_BattleSystemBTB)
 *     - CTB: Charge Turn Battle (Req VisuMZ_2_BattleSystemCTB)
 *     - OTB: Order Turn Battle (Req VisuMZ_2_BattleSystemOTB)
 *     - STB: Standard Turn Battle (Req VisuMZ_2_BattleSystemSTB)
 *
 * ---
 * 
 * System: Load Images
 * - Allows you to (pre) load up images ahead of time.
 *
 *   img/animations/:
 *   img/battlebacks1/:
 *   img/battlebacks2/:
 *   img/enemies/:
 *   img/faces/:
 *   img/parallaxes/:
 *   img/pictures/:
 *   img/sv_actors/:
 *   img/sv_enemies/:
 *   img/system/:
 *   img/tilesets/:
 *   img/titles1/:
 *   img/titles2/:
 *   - Which files do you wish to load from this directory?
 * 
 * ---
 *
 * System: Main Font Size
 * - Set the game's main font size.
 *
 *   Change To:
 *   - Change the font size to this number.
 *
 * ---
 *
 * System: Side View Battle
 * - Switch between Front View or Side View for battle.
 *
 *   Change To:
 *   - Choose which view type to switch to.
 *
 * ---
 *
 * System: Window Padding
 * - Change the game's window padding amount.
 *
 *   Change To:
 *   - Change the game's standard window padding to this value.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Quality of Life Settings
 * ============================================================================
 *
 * A variety of (optional) settings and changes are added with the Core Engine
 * to improve the quality of life for both the game devs and players alike.
 *
 * ---
 *
 * Play Test
 * 
 *   New Game on Boot:
 *   - Automatically start a new game on Play Test?
 *   - Only enabled during Play Test.
 *
 *   No Play Test Mode:
 *   - Force the game to be out of Play Test mode when play testing.
 * 
 *   Open Console on Boot:
 *   - Open the Debug Console upon booting up your game?
 *   - Only enabled during Play Test.
 *
 *   F6: Toggle Sound:
 *   - F6 Key Function: Turn on all sound to 100% or to 0%, toggling between
 *     the two.
 *   - Only enabled during Play Test.
 *
 *   F7: Toggle Fast Mode:
 *   - F7 Key Function: Toggle fast mode.
 *   - Only enabled during Play Test.
 *
 *   New Game > Common Event:
 *   - Runs a common event each time a new game is started.
 *   - Only enabled during Play Test.
 *
 * ---
 * 
 * Battle Test
 * 
 *   Add Item Type:
 *   Add Weapon Type:
 *   Add Armor Type:
 *   - Add copies of each database item, weapon, and/or armor?
 *   - Effective only during battle test.
 * 
 *   Added Quantity:
 *   - Determines how many items are added during a battle test instead of
 *     the maximum amount.
 * 
 * ---
 *
 * Digit Grouping
 *
 *   Standard Text:
 *   - Make numbers like 1234567 appear like 1,234,567 for standard text
 *     inside windows?
 *
 *   Ex Text:
 *   - Make numbers like 1234567 appear like 1,234,567 for ex text,
 *     written through drawTextEx (like messages)?
 *
 *   Damage Sprites:
 *   - Make numbers like 1234567 appear like 1,234,567 for in-battle
 *     damage sprites?
 *
 *   Gauge Sprites:
 *   - Make numbers like 1234567 appear like 1,234,567 for visible gauge
 *     sprites such as HP, MP, and TP gauges?
 * 
 *   Country/Locale
 *   - Base the digit grouping on which country/locale?
 *   - This will follow all of the digit grouping rules found here:
 *     https://www.w3schools.com/JSREF/jsref_tolocalestring_number.asp
 *
 * ---
 *
 * Player Benefit
 *
 *   Encounter Rate Min:
 *   - Minimum number of steps the player can take without any
 *     random encounters.
 *
 *   Escape Always:
 *   - If the player wants to escape a battle, let them escape the battle
 *     with 100% chance.
 *
 *   Accuracy Formula:
 *   - Accuracy formula calculation change to
 *     Skill Hit% * (User HIT - Target EVA) for better results.
 *
 *   Accuracy Boost:
 *   - Boost HIT and EVA rates in favor of the player.
 *
 *   Level Up -> Full HP:
 *   Level Up -> Full MP:
 *   - Recovers full HP or MP when an actor levels up.
 *
 * ---
 *
 * Misc
 * 
 *   Animation: Mirror Offset X:
 *   - When animations are mirrored, mirror their Offset X values, too.
 *   - The animation name tags <Mirror Offset X> and <No Mirror Offset X> will
 *     override this effect for that specific animation.
 * 
 *   Anti-Zoom Pictures:
 *   - If on, prevents pictures from being affected by zoom.
 *
 *   Font Shadows:
 *   - If on, text uses shadows instead of outlines.
 *
 *   Font Smoothing:
 *   - If on, smoothes fonts shown in-game.
 *
 *   Key Item Protection:
 *   - If on, prevents Key Items from being able to be sold and from being
 *     able to be consumed.
 *
 *   Modern Controls:
 *   - If on, allows usage of the Home/End buttons.
 *   - Home would scroll to the first item on a list.
 *   - End would scroll to the last item on a list.
 *   - Shift + Up would page up.
 *   - Shift + Down would page down.
 * 
 *   NewGame > CommonEvent:
 *   - Runs a common event each time a new game during any session is started.
 *   - Applies to all types of sessions, play test or not.
 *
 *   No Tile Shadows:
 *   - Removes tile shadows from being displayed in-game.
 *
 *   Pixel Image Rendering:
 *   - If on, pixelates the image rendering (for pixel games).
 *
 *   Require Focus?
 *   - Requires the game to be focused? If the game isn't focused, it will
 *     pause if it's not the active window.
 *
 *   Smart Event Collision:
 *   - Makes events only able to collide with one another if they're
 *    'Same as characters' priority.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Battle System
 * ============================================================================
 * 
 * Choose which battle system to use for your game.
 * 
 * ---
 * 
 *   Database Default (Use game database setting)
 * 
 *   -
 * 
 *   DTB: Default Turn Battle
 *   TPB Active: Time Progress Battle (Active)
 *   TPB Wait: Time Progress Battle (Wait)
 * 
 *   -
 * 
 *   BTB: Brave Turn Battle (Req VisuMZ_2_BattleSystemBTB)
 *   CTB: Charge Turn Battle (Req VisuMZ_2_BattleSystemCTB)
 *   OTB: Order Turn Battle (Req VisuMZ_2_BattleSystemOTB)
 *   STB: Standard Turn Battle (Req VisuMZ_2_BattleSystemSTB)
 * 
 *   -
 * 
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Color Settings
 * ============================================================================
 *
 * These settings allow you, the game dev, to have more control over which
 * colors appear for what conditions found in the game. You can use regular
 * numbers to use the colors predetermined by the game's Window Skin or you
 * can use the #rrggbb format for a hex color code.
 *
 * You can find out what hex codes belong to which color from this website:
 * https://htmlcolorcodes.com/
 *
 * ---
 *
 * Basic Colors
 * - These are colors that almost never change and are used globally throughout
 *   the in-game engine.
 *
 *   Normal:
 *   System:
 *   Crisis:
 *   Death:
 *   Gauge Back:
 *   HP Gauge:
 *   MP Gauge:
 *   MP Cost:
 *   Power Up:
 *   Power Down:
 *   CT Gauge:
 *   TP Gauge:
 *   Pending Color:
 *   EXP Gauge:
 *   MaxLv Gauge:
 *   - Use #rrggbb for custom colors or regular numbers
 *   for text colors from the Window Skin.
 *
 * ---
 *
 * Alpha Colors:
 * - These are colors that have a bit of transparency to them and are specified
 *   by the 'rgba(red, green, blue, alpha)' format.
 * - Replace 'red' with a number between 0-255 (integer).
 * - Replace 'green' with a number between 0-255 (integer).
 * - Replace 'blue' with a number between 0-255 (integer).
 * - Replace 'alpha' with a number between 0 and 1 (decimal).
 * 
 *   Window Font Outline:
 *   Gauge Number Outline:
 *   Dim Color:
 *   Item Back Color:
 *   - Colors with a bit of alpha settings.
 *   - Format rgba(0-255, 0-255, 0-255, 0-1)
 *
 * ---
 *
 * Conditional Colors:
 * - These require a bit of JavaScript knowledge. These determine what colors
 *   to use under which situations and uses such as different values of HP, MP,
 *   TP, for comparing equipment, and determine damage popup colors.
 * 
 *   JS: Actor HP Color:
 *   JS: Actor MP Color:
 *   JS: Actor TP Color:
 *   - Code used for determining what HP, MP, or TP color to use for actors.
 *
 *   JS: Parameter Change:
 *   - Code used for determining whatcolor to use for parameter changes.
 *
 *   JS: Damage Colors:
 *   - Code used for determining what color to use for damage types.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Gold Settings
 * ============================================================================
 *
 * Gold is the main currency in RPG Maker MZ. The settings provided here will
 * determine how Gold appears in the game and certain behaviors Gold has.
 *
 * ---
 *
 * Gold Settings
 *
 *   Gold Max:
 *   - Maximum amount of Gold the party can hold.
 *   - Default 99999999
 *
 *   Gold Font Size:
 *   - Font size used for displaying Gold inside Gold Windows.
 *   - Default: 26
 *
 *   Gold Icon:
 *   - Icon used to represent Gold.
 *   - Use 0 for no icon.
 *
 *   Gold Overlap:
 *   - Text used too much Gold to fit in the window.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Image Loading
 * ============================================================================
 *
 * Not all images are loaded at once in-game. RPG Maker MZ uses asynchronous
 * loading which means images are loaded when needed. This may cause delays in
 * when you want certain images to appear. However, if an image is loaded
 * beforehand, they can be used immediately provided they aren't removed from
 * the image cache.
 *
 * ---
 *
 * Image Loading
 *
 *   img/animations/:
 *   img/battlebacks1/:
 *   img/battlebacks2/:
 *   img/enemies/:
 *   img/faces/:
 *   img/parallaxes/:
 *   img/pictures/:
 *   img/sv_actors/:
 *   img/sv_enemies/:
 *   img/system/:
 *   img/tilesets/:
 *   img/titles1/:
 *   img/titles2/:
 *   - Which files do you wish to load from this directory upon starting
 *     up the game?
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Keyboard Input Settings
 * ============================================================================
 *
 * Settings for the game that utilize keyboard input. These are primarily for
 * the name input scene (Scene_Name) and the number input event command. These
 * settings have only been tested on English keyboards and may or may not be
 * compatible with other languages, so please disable these features if they do
 * not fit in with your game.
 * 
 * If a controller is connected upon entering the name change scene, it will
 * use the default manual-entry mode instead of the keyboard-entry mode. If a
 * controller button is pressed during the keyboard-entry mode, it will
 * automatically switch to the manual-entry mode.
 * 
 * This plugin does not provide support for controllers that are undetected by
 * RPG Maker MZ's default controller support.
 *
 * ---
 * 
 * Controls
 * 
 *   WASD Movement:
 *   - Enables or disables WASD movement for your game project.
 *   - Moves the W page down button to E.
 * 
 *   R Button: Dash Toggle:
 *   - Enables or disables R button as an Always Dash option toggle.
 * 
 * ---
 *
 * Name Input
 * 
 *   Enable?:
 *   - Enables keyboard input for name entry.
 *   - Only tested with English keyboards.
 * 
 *   Default Mode:
 *   - Select default mode when entering the scene.
 *     - Default - Uses Arrow Keys to select letters.
 *     - Keyboard - Uses Keyboard to type in letters.
 * 
 *   QWERTY Layout:
 *   - Uses the QWERTY layout for manual entry.
 * 
 *   Keyboard Message:
 *   - The message displayed when allowing keyboard entry.
 *   - You may use text codes here.
 * 
 *   Banned Words:
 *   - Players cannot use these words for names.
 *   - These include words inside the names.
 *   - If a banned word is used, a buzzer sound will play.
 *
 * ---
 *
 * Number Input
 * 
 *   Enable?:
 *   - Enables keyboard input for number entry.
 *   - Only tested with English keyboards.
 *
 * ---
 * 
 * Button Assist
 * 
 *   Switch to Keyboard:
 *   - Text used to describe the keyboard switch.
 * 
 *   Switch To Manual:
 *   - Text used to describe the manual entry switch.
 * 
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Menu Background Settings
 * ============================================================================
 *
 * These settings in the Plugin Parameters allow you to adjust the background
 * images used for each of the scenes. The images will be taken from the game
 * project folders img/titles1/ and img/titles2/ to load into the game.
 *
 * These settings are only available to scenes found within the Main Menu, the
 * Shop scene, and the Actor Naming scene.
 *
 * ---
 *
 * Menu Background Settings:
 *
 *   Scene_Menu:
 *   Scene_Item:
 *   Scene_Skill:
 *   Scene_Equip:
 *   Scene_Status:
 *   Scene_Options:
 *   Scene_Save:
 *   Scene_Load:
 *   Scene_GameEnd:
 *   Scene_Shop:
 *   Scene_Name:
 *   - Individual background settings for the scene.
 *
 *   Scene_Unlisted
 *   - Individual background settings for any scenes that aren't listed above.
 *
 * ---
 *
 * Background Settings
 *
 *   Snapshop Opacity:
 *   - Snapshot opacity for the scene.
 *
 *   Background 1:
 *   - Filename used for the bottom background image.
 *   - Leave empty if you don't wish to use one.
 *
 *   Background 2:
 *   - Filename used for the upper background image.
 *   - Leave empty if you don't wish to use one.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Menu Button Assist Window
 * ============================================================================
 *
 * In most modern RPG's, there exist small windows on the screen which tell the
 * player what the control schemes are for that scene. This plugin gives you
 * the option to add that window to the menu scenes in the form of a Button
 * Assist Window.
 *
 * ---
 *
 * General
 * 
 *   Enable:
 *   - Enable the Menu Button Assist Window.
 * 
 *   Location:
 *   - Determine the location of the Button Assist Window.
 *   - Requires Plugin Parameters => UI => Side Buttons ON.
 *
 *   Background Type:
 *   - Select background type for this window.
 *
 * ---
 *
 * Text
 * 
 *   Text Format:
 *   - Format on how the buttons are displayed.
 *   - Text codes allowed. %1 - Key, %2 - Text
 * 
 *   Multi-Key Format:
 *   - Format for actions with multiple keys.
 *   - Text codes allowed. %1 - Key 1, %2 - Key 2
 * 
 *   OK Text:
 *   Cancel Text:
 *   Switch Actor Text:
 *   - Default text used to display these various actions.
 *
 * ---
 *
 * Keys
 * 
 *   Key: Unlisted Format:
 *   - If a key is not listed below, use this format.
 *   - Text codes allowed. %1 - Key
 * 
 *   Key: Up:
 *   Key: Down:
 *   Key: Left:
 *   Key: Right:
 *   Key: Shift:
 *   Key: Tab:
 *   Key: A through Z:
 *   - How this key is shown in-game.
 *   - Text codes allowed.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Menu Layout Settings
 * ============================================================================
 *
 * These settings allow you to rearrange the positions of the scenes accessible
 * from the Main Menu, the Shop scene, and the Actor Naming scene. This will
 * require you to have some JavaScript knowledge to make the windows work the
 * way you would like.
 *
 * ---
 *
 * Menu Layout Settings
 *
 *   Scene_Title:
 *   Scene_Menu:
 *   Scene_Item:
 *   Scene_Skill:
 *   Scene_Equip:
 *   Scene_Status:
 *   Scene_Options:
 *   Scene_Save:
 *   Scene_Load:
 *   Scene_GameEnd:
 *   Scene_Shop:
 *   Scene_Name:
 *   - Various options on adjusting the selected scene.
 *
 * ---
 *
 * Scene Window Settings
 *
 *   Background Type:
 *   - Selects the background type for the selected window.
 *   - Window
 *   - Dim
 *   - Transparent
 *
 *   JS: X, Y, W, H
 *   - Code used to determine the dimensions for the selected window.
 *
 * ---
 *
 * Scene_Title Settings
 * - The following are settings unique to Scene_Title.
 *
 * Title Screen
 *
 *   Document Title Format:
 *   - Format to display text in document title.
 *   - %1 - Main Title, %2 - Subtitle, %3 - Version
 *
 *   Subtitle:
 *   - Subtitle to be displayed under the title name.
 *   
 *   Version:
 *   - Version to be display in the title screen corner.
 *   
 *   JS: Draw Title:
 *   - Code used to draw the game title.
 *   
 *   JS: Draw Subtitle:
 *   - Code used to draw the game subtitle.
 *   
 *   JS: Draw Version:
 *   - Code used to draw the game version.
 *   
 *   Button Fade Speed:
 *   - Speed at which the buttons fade in at (1-255).
 *
 * ---
 *
 * Scene_GameEnd Settings
 * - The following are settings unique to Scene_GameEnd.
 *   
 *   Command Window List:
 *   - Window commands used by the title screen.
 *   - Add new commands here.
 *
 * ---
 *
 * Command Window List
 * - This is found under Scene_Title and Scene_GameEnd settings.
 *
 *   Symbol:
 *   - The symbol used for this command.
 * 
 *   STR: Text:
 *   - Displayed text used for this title command.
 *   - If this has a value, ignore the JS: Text version.
 * 
 *   JS: Text:
 *   - JavaScript code used to determine string used for the displayed name.
 * 
 *   JS: Show:
 *   - JavaScript code used to determine if the item is shown or not.
 * 
 *   JS: Enable:
 *   - JavaScript code used to determine if the item is enabled or not.
 * 
 *   JS: Ext:
 *   - JavaScript code used to determine any ext data that should be added.
 * 
 *   JS: Run Code:
 *   - JavaScript code that runs once this command is selected.
 * 
 * ---
 *
 * Title Picture Buttons:
 * - This is found under Scene_Title settings.
 * 
 *   Picture's Filename:
 *   - Filename used for the picture.
 *
 *   Button URL:
 *   - URL for the button to go to upon being clicked.
 *
 *   JS: Position:
 *   - JavaScript code that helps determine the button's Position.
 *
 *   JS: On Load:
 *   - JavaScript code that runs once this button bitmap is loaded.
 *
 *   JS: Run Code:
 *   - JavaScript code that runs once this button is pressed.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Parameter Settings
 * ============================================================================
 *
 * A battler's parameters, or stats as some devs know them as, are the values
 * that determine how a battler performs. These settings allow you to alter
 * their behaviors and give boosts to trait objects in a controlled manner.
 *
 * ---
 *
 * Parameter Settings
 *
 *   Displayed Parameters
 *   - A list of the parameters that will be displayed in-game.
 *   - Shown in the Equip Menu.
 *   - Shown in the Status Menu.
 *
 *   Extended Parameters
 *   - The list shown in extended scenes (for other VisuStella plugins).
 *
 * ---
 *
 * === Basic Parameters ===
 *
 * MHP - MaxHP
 * - This is the maximum health points value. The amount of health points (HP)
 * a battler has determines whether or not the battler is in a living state or
 * a dead state. If the HP value is above 0, then the battler is living. If it
 * is 0 or below, the battler is in a dead state unless the battler has a way
 * to counteract death (usually through immortality). When the battler takes
 * damage, it is usually dealt to the HP value and reduces it. If the battler
 * is healed, then the HP value is increased. The MaxHP value determines what's
 * the maximum amount the HP value can be held at, meaning the battler cannot
 * be healed past that point.
 *
 * MMP - MaxMP
 * - This is the maximum magic points value. Magic points (MP) are typically
 * used for the cost of skills and spells in battle. If the battler has enough
 * MP to fit the cost of the said skill, the battler is able to use the said
 * skill provided that all of the skill's other conditions are met. If not, the
 * battler is then unable to use the skill. Upon using a skill that costs MP,
 * the battler's MP is reduced. However, the battler's MP can be recovered and
 * results in a gain of MP. The MaxMP value determines what is the maximum
 * amount the MP value can be held at, meaning the battler cannot recover MP
 * past the MaxMP value.
 *
 * ATK - Attack
 * - This is the attack value of the battler. By default, this stat is used for
 * the purpose of damage calculations only, and is typically used to represent
 * the battler's physical attack power. Given normal damage formulas, higher
 * values mean higher damage output for physical attacks.
 *
 * DEF - Defense
 * - This is the defense value of the battler. By default, this stat is used
 * for the purpose of damage calculations only, and is typically used to
 * represent the battler's physical defense. Given normal damage formulas,
 * higher values mean less damage received from physical attacks.
 *
 * MAT - Magic Attack
 * - This is the magic attack value of the battler. By default, this stat is
 * used for the purpose of damage calculations only, and is typically used to
 * represent the battler's magical attack power. Given normal damage formulas,
 * higher values mean higher damage output for magical attacks.
 *
 * MDF - Magic Defense
 * - This is the magic defense value of the battler. By default, this stat is
 * used for the purpose of damage calculations only, and is typically used to
 * represent the battler's magical defense. Given normal damage formulas,
 * higher values mean less damage received from magical attacks.
 *
 * AGI - Agility
 * - This is the agility value of the battler. By default, this stat is used to
 * determine battler's position in the battle turn's order. Given a normal turn
 * calculation formula, the higher the value, the faster the battler is, and
 * the more likely the battler will have its turn earlier in a turn.
 *
 * LUK - Luck
 * - This is the luck value of the battler. By default, this stat is used to
 * affect the success rate of states, buffs, and debuffs applied by the battler
 * and received by the battler. If the user has a higher LUK value, the state,
 * buff, or debuff is more likely to succeed. If the target has a higher LUK
 * value, then the state, buff, or debuff is less likely to succeed.
 *
 * ---
 *
 * Basic Parameters
 *
 *   HP Crisis Rate:
 *   - HP Ratio at which a battler can be considered in crisis mode.
 *
 *   JS: Formula:
 *   - Formula used to determine the total value all 8 basic parameters:
 *   - MaxHP, MaxMP, ATK, DEF, MAT, MDF, AGI, LUK.
 *
 * Parameter Caps:
 *
 *   MaxHP Cap:
 *   MaxMP Cap:
 *   ATK Cap:
 *   DEF Cap:
 *   MAT Cap:
 *   MDF Cap:
 *   AGI Cap:
 *   LUK Cap:
 *   - Formula used to determine the selected parameter's cap.
 *   - These settings DO NOT raise the editor's maximum values. If you want to
 *     raise an enemy's maximum parameter value past their default cap, use the
 *     associated notetag for them instead.
 *
 * ---
 *
 * === X Parameters ===
 *
 * HIT - Hit Rate%
 * - This determines the physical hit success rate of the any physical action.
 * All physical attacks make a check through the HIT rate to see if the attack
 * will connect. If the HIT value passes the randomizer check, the attack will
 * connect. If the HIT value fails to pass the randomizer check, the attack
 * will be considered a MISS.
 *
 * EVA - Evasion Rate%
 * - This determines the physical evasion rate against any incoming physical
 * actions. If the HIT value passes, the action is then passed to the EVA check
 * through a randomizer check. If the randomizer check passes, the physical
 * attack is evaded and will fail to connect. If the randomizer check passes,
 * the attempt to evade the action will fail and the action connects.
 *
 * CRI - Critical Hit Rate%
 * - Any actions that enable Critical Hits will make a randomizer check with
 * this number. If the randomizer check passes, extra damage will be carried
 * out by the initiated action. If the randomizer check fails, no extra damage
 * will be added upon the action.
 *
 * CEV - Critical Evasion Rate%
 * - This value is put against the Critical Hit Rate% in a multiplicative rate.
 * If the Critical Hit Rate is 90% and the Critical Evasion Rate is
 * 20%, then the randomizer check will make a check against 72% as the values
 * are calculated by the source code as CRI * (1 - CEV), therefore, with values
 * as 0.90 * (1 - 0.20) === 0.72.
 *
 * MEV - Magic Evasion Rate%
 * - Where EVA is the evasion rate against physical actions, MEV is the evasion
 * rate against magical actions. As there is not magical version of HIT, the
 * MEV value will always be bit against when a magical action is initiated. If
 * the randomizer check passes for MEV, the magical action will not connect. If
 * the randomizer check fails for MEV, the magical action will connect.
 *
 * MRF - Magic Reflect Rate%
 * - If a magical action connects and passes, there is a chance the magical
 * action can be bounced back to the caster. That chance is the Magic Reflect
 * Rate. If the randomizer check for the Magic Reflect Rate passes, then the
 * magical action is bounced back to the caster, ignoring the caster's Magic
 * Evasion Rate. If the randomizer check for the Magic Reflect Rate fails, then
 * the magical action will connect with its target.
 *
 * CNT - Counter Attack Rate%
 * - If a physical action connects and passes, there is a chance the physical
 * action can be avoided and a counter attack made by the user will land on the
 * attacking unit. This is the Counter Attack Rate. If the randomizer check for
 * the Counter Attack Rate passes, the physical action is evaded and the target
 * will counter attack the user. If the randomizer check fails, the physical
 * action will connect to the target.
 *
 * HRG - HP% Regeneration
 * - During a battler's regeneration phase, the battler will regenerate this
 * percentage of its MaxHP as gained HP with a 100% success rate.
 *
 * MRG - MP% Regeneration
 * - During a battler's regeneration phase, the battler will regenerate this
 * percentage of its MaxMP as gained MP with a 100% success rate.
 *
 * TRG - TP% Regeneration
 * - During a battler's regeneration phase, the battler will regenerate this
 * percentage of its MaxTP as gained TP with a 100% success rate.
 *
 * ---
 *
 * X Parameters
 *
 *   JS: Formula:
 *   - Formula used to determine the total value all 10 X parameters:
 *   - HIT, EVA, CRI, CEV, MEV, MRF, CNT, HRG, MRG, TRG.
 *
 * Vocabulary
 *
 *   HIT:
 *   EVA:
 *   CRI:
 *   CEV:
 *   MEV:
 *   MRF:
 *   CNT:
 *   HRG:
 *   MRG:
 *   TRG:
 *   - In-game vocabulary used for the selected X Parameter.
 *
 * ---
 *
 * === S Parameters ===
 *
 * TGR - Target Rate
 * - Against the standard enemy, the Target Rate value determines the odds of
 * an enemy specifically targeting the user for a single target attack. At 0%,
 * the enemy will almost never target the user. At 100%, it will have normal
 * targeting opportunity. At 100%+, the user will have an increased chance of
 * being targeted.
 * *NOTE: For those using the Battle A.I. Core, any actions that have specific
 * target conditions will bypass the TGR rate.
 *
 * GRD - Guard Effect
 * - This is the effectiveness of guarding. This affects the guard divisor
 * value of 2. At 100% GRD, damage will become 'damage / (2 * 1.00)'. At 50%
 * GRD, damage will become 'damage / (2 * 0.50)'. At 200% GRD, damage will
 * become 'damage / (2 * 2.00)' and so forth.
 *
 * REC - Recovery Effect
 * - This is how effective heals are towards the user. The higher the REC rate,
 * the more the user is healed. If a spell were to heal for 100 and the user
 * has 300% REC, then the user is healed for 300 instead.
 *
 * PHA - Pharmacology
 * - This is how effective items are when used by the user. The higher the PHA
 * rate, the more effective the item effect. If the user is using a Potion that
 * recovers 100% on a target ally and the user has 300% PHA, then the target
 * ally will receive healing for 300 instead.
 *
 * MCR - MP Cost Rate
 * - This rate affects how much MP skills with an MP Cost will require to use.
 * If the user has 100% MCR, then the MP Cost will be standard. If the user has
 * 50% MCR, then all skills that cost MP will cost only half the required MP.
 * If the user has 200% MCR, then all skills will cost 200% their MP cost.
 *
 * TCR - TP Charge Rate
 * - This rate affects how much TP skills with an TP will charge when gaining
 * TP through various actions. At 100%, TP will charge normally. At 50%, TP
 * will charge at half speed. At 200%, TP will charge twice as fast.
 *
 * PDR - Physical Damage Rate
 * - This rate affects how much damage the user will take from physical damage.
 * If the user has 100% PDR, then the user takes the normal amount. If the user
 * has 50% PDR, then all physical damage dealt to the user is halved. If the
 * user has 200% PDR, then all physical damage dealt to the user is doubled.
 *
 * MDR - Magical Damage Rate
 * - This rate affects how much damage the user will take from magical damage.
 * If the user has 100% MDR, then the user takes the normal amount. If the user
 * has 50% MDR, then all magical damage dealt to the user is halved. If the
 * user has 200% MDR, then all magical damage dealt to the user is doubled.
 *
 * FDR - Floor Damage Rate
 * - On the field map, this alters how much damage the user will take when the
 * player walks over a tile that damages the party. The FDR value only affects
 * the damage dealt to the particular actor and not the whole party. If FDR is
 * at 100%, then the user takes the full damage. If FDR is at 50%, then only
 * half of the damage goes through. If FDR is at 200%, then floor damage is
 * doubled for that actor.
 *
 * EXR - Experience Rate
 * - This determines the amount of experience gain the user whenever the user
 * gains any kind of EXP. At 100% EXR, the rate of experience gain is normal.
 * At 50%, the experience gain is halved. At 200%, the experience gain for the
 * user is doubled.
 *
 * ---
 *
 * S Parameters
 *
 *   JS: Formula
 *   - Formula used to determine the total value all 10 S parameters:
 *   - TGR, GRD, REC, PHA, MCR, TCR, PDR, MDR, FDR, EXR.
 *
 * Vocabulary
 *
 *   TGR:
 *   GRD:
 *   REC:
 *   PHA:
 *   MCR:
 *   TCR:
 *   PDR:
 *   MDR:
 *   FDR:
 *   EXR:
 *   - In-game vocabulary used for the selected S Parameter.
 *
 * ---
 *
 * Icons
 * 
 *   Draw Icons?
 *   - Draw icons next to parameter names?
 *
 *   MaxHP, MaxMP, ATK, DEF, MAT, MDF, AGI, LUK:
 *   HIT, EVA, CRI, CEV, MEV, MRF, CNT, HRG, MRG, TRG:
 *   TGR, GRD, REC, PHA, MCR, TCR, PDR, MDR, FDR, EXR:
 *   - Icon used for the selected parameter.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Custom Parameters Settings
 * ============================================================================
 *
 * As of version 1.07, you can add Custom Parameters to your game if RPG Maker
 * MZ's default set of parameters isn't enough for you. These parameters can
 * have variable functionality depending on how you code it. More importantly,
 * these are compatible with the VisuStella MZ menus and the VisuStella Core
 * Engine's Parameters settings.
 * 
 * For clarification, these settings do NOT create brand-new parameters for you
 * to use and add to your game nor are the bonuses supported by other plugins
 * in the VisuStella MZ library. These settings exist to function as a bridge
 * for non-VisuStella MZ plugins that have created their own parameter values
 * and to show them inside VisuStella menus.
 *
 * ---
 *
 * Custom Parameter
 * 
 *   Parameter Name:
 *   - What's the parameter's name?
 *   - Used for VisuStella MZ menus.
 * 
 *   Abbreviation:
 *   - What abbreviation do you want to use for the parameter?
 *   - Do not use special characters. Avoid numbers if possible.
 * 
 *   Icon:
 *   - What icon do you want to use to represent this parameter?
 *   - Used for VisuStella MZ menus.
 * 
 *   Type:
 *   - What kind of number value will be returned with this parameter?
 *     - Integer (Whole Numbers Only)
 *     - Float (Decimals are Allowed)
 * 
 *   JS: Value:
 *   - Run this code when this parameter is to be returned.
 *
 * ---
 * 
 * Instructions on Adding Custom Parameters to VisuStella Menus
 * 
 * In the Core Engine and Elements and Status Menu Core plugins, there are
 * plugin parameter fields for you to insert the parameters you want displayed
 * and visible to the player.
 * 
 * Insert in those the abbreviation of the custom parameter. For example, if
 * you want to add the "Strength" custom parameter and the abbreviation is
 * "str", then add "str" to the Core Engine/Elements and Status Menu Core's
 * plugin parameter field for "Strength" to appear in-game. Case does not
 * matter here so you can insert "str" or "STR" and it will register all the
 * same to make them appear in-game.
 * 
 * ---
 * 
 * Instructions on Using Custom Parameters as Mechanics
 * 
 * If you want to use a custom parameter in, say, a damage formula, refer to
 * the abbreviation you have set for the custom parameter. For example, if you
 * want to call upon the "Strength" custom parameter's value and its set
 * abbreviation is "str", then refer to it as such. This is case sensitive.
 * 
 * An example damage formula would be something like the following if using
 * "str" for "Strength" and "con" for "Constitution":
 * 
 *   a.str - b.con
 * 
 * These values are attached to the Game_Battlerbase prototype class.
 * 
 * ---
 * 
 * Instructions on Setting Custom Parameter Values
 * 
 * This requires JavaScript knowledge. There is no way around it. Whatever code
 * you insert into the "JS: Value" field will return the value desired. The
 * 'user' variable will refer to the Game_Battlerbase prototype object in which
 * the information is to be drawn from.
 * 
 * Depending on the "type" you've set for the Custom Parameter, the returned
 * value will be rounded using Math.round for integers and left alone if set as
 * a float number.
 * 
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Screen Shake Settings
 * ============================================================================
 *
 * Get more screen shake effects into your game!
 * 
 * These effects have been added by Aries of Sheratan!
 *
 * ---
 *
 * Settings
 * 
 *   Default Style:
 *   - The default style used for screen shakes.
 *   - Original
 *   - Random
 *   - Horizontal
 *   - Vertical
 * 
 *   JS: Original Style:
 *   JS: Random Style
 *   JS: Horizontal Style
 *   JS: Vertical Style
 *   - This code gives you control over screen shake for this screen
 *     shake style.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Title Command List Settings
 * ============================================================================
 *
 * This plugin parameter allows you to adjust the commands that appear on the
 * title screen. Some JavaScript knowledge is needed.
 *
 * ---
 *
 * Title Command
 * 
 *   Symbol:
 *   - The symbol used for this command.
 * 
 *   STR: Text:
 *   - Displayed text used for this title command.
 *   - If this has a value, ignore the JS: Text version.
 * 
 *   JS: Text:
 *   - JavaScript code used to determine string used for the displayed name.
 * 
 *   JS: Show:
 *   - JavaScript code used to determine if the item is shown or not.
 * 
 *   JS: Enable:
 *   - JavaScript code used to determine if the item is enabled or not.
 * 
 *   JS: Ext:
 *   - JavaScript code used to determine any ext data that should be added.
 * 
 *   JS: Run Code:
 *   - JavaScript code that runs once this command is selected.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Title Picture Buttons Settings
 * ============================================================================
 *
 * These allow you to insert picture buttons on your title screen that can
 * send users to various links on the internet when clicked.
 *
 * ---
 *
 * Settings
 * 
 *   Picture's Filename:
 *   - Filename used for the picture.
 * 
 *   Button URL:
 *   - URL for the button to go to upon being clicked.
 * 
 *   JS: Position:
 *   - JavaScript code that helps determine the button's Position.
 * 
 *   JS: On Load:
 *   - JavaScript code that runs once this button bitmap is loaded.
 * 
 *   JS: Run Code:
 *   - JavaScript code that runs once this button is pressed.
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: UI Settings
 * ============================================================================
 *
 * In previous iterations of RPG Maker, the Core Engine would allow you to
 * change the screen resolution. In MZ, that functionality is provided by
 * default but a number of UI settings still remain. These settings allow you
 * adjust how certain in-game objects and menus are displayed.
 *
 * ---
 *
 * UI Area
 *
 *   Fade Speed:
 *   - Default fade speed for transitions.
 *
 *   Box Margin:
 *   - Set the margin in pixels for the screen borders.
 *
 *   Command Window Width:
 *   - Sets the width for standard Command Windows.
 *
 *   Bottom Help Window:
 *   - Put the Help Window at the bottom of the screen?
 *
 *   Right Aligned Menus:
 *   - Put most command windows to the right side of the screen.
 *
 *   Show Buttons:
 *   - Show clickable buttons in your game?
 * 
 *     Show Cancel Button:
 *     Show Menu Button:
 *     Show Page Up/Down:
 *     Show Number Buttons:
 *     - Show/hide these respective buttons if the above is enabled.
 *     - If 'Show Buttons' is false, these will be hidden no matter what.
 *
 *   Button Area Height:
 *   - Sets the height for the button area.
 *
 *   Bottom Buttons:
 *   - Put the buttons at the bottom of the screen?
 *
 *   Side Buttons:
 *   - Push buttons to the side of the UI if there is room.
 *
 * ---
 *
 * Larger Resolutions
 * 
 *   Reposition Actors:
 *   - Update the position of actors in battle if the screen resolution
 *     has changed to become larger than 816x624.
 *   - Ignore if using the VisuStella MZ Battle Core.
 *   - When using the VisuStella MZ Battle Core, adjust the position through
 *     Battle Core > Parameters > Actor Battler Settings > JS: Home Position
 *
 *   Reposition Enemies:
 *   - Update the position of enemies in battle if the screen resolution
 *     has changed to become larger than 816x624.
 *
 * ---
 *
 * Menu Objects
 *
 *   Level -> EXP Gauge:
 *   - Draw an EXP Gauge under the drawn level.
 *
 *   Parameter Arrow:
 *   - The arrow used to show changes in the parameter values.
 *
 * ---
 *
 * Text Code Support
 *
 *   Class Names:
 *   - Make class names support text codes?
 *
 *   Nicknames:
 *   - Make nicknames support text codes?
 *
 * ---
 *
 * ============================================================================
 * Plugin Parameters: Window Settings
 * ============================================================================
 *
 * Adjust the default settings of the windows in-game. This ranges from things
 * such as the line height (to better fit your font size) to the opacity level
 * (to fit your window skins).
 *
 * ---
 *
 * Window Defaults
 * 
 *   Line Height:
 *   - Default line height used for standard windows.
 * 
 *   Item Height Padding:
 *   - Default padding for selectable items.
 * 
 *   Item Padding:
 *   - Default line padding used for standard windows.
 * 
 *   Back Opacity:
 *   - Default back opacity used for standard windows.
 * 
 *   Translucent Opacity:
 *   - Default translucent opacity used for standard windows.
 * 
 *   Window Opening Speed:
 *   - Default open speed used for standard windows.
 *   - Default: 32 (Use a number between 0-255)
 * 
 *   Column Spacing:
 *   - Default column spacing for selectable windows.
 *   - Default: 8
 * 
 *   Row Spacing:
 *   - Default row spacing for selectable windows.
 *   - Default: 4
 *
 * ---
 * 
 * Selectable Items:
 * 
 *   Show Background?:
 *   - Selectable menu items have dark boxes behind them. Show them?
 * 
 *   Item Height Padding:
 *   - Default padding for selectable items.
 * 
 *   JS: Draw Background:
 *   - Code used to draw the background rectangle behind clickable menu objects
 * 
 * ---
 *
 * ============================================================================
 * Plugin Parameters: JS: Quick Functions
 * ============================================================================
 * 
 * WARNING: This feature is highly experimental! Use it at your own risk!
 * 
 * JavaScript Quick Functions allow you to quickly declare functions in the
 * global namespace for ease of access. It's so that these functions can be
 * used in Script Calls, Control Variable Script Inputs, Conditional Branch
 * Script Inputs, Damage Formulas, and more.
 * 
 * ---
 * 
 * JS: Quick Function
 * 
 *   Function Name:
 *   - The function's name in the global namespace.
 *   - Will not overwrite functions/variables of the same name.
 * 
 *   JS: Code:
 *   - Run this code when using the function.
 * 
 * ---
 * 
 * If you have a Function Name of "Example", then typing "Example()" in a
 * Script Call, Conditional Branch Script Input, or similar field will yield
 * whatever the code is instructed to return.
 * 
 * If a function or variable of a similar name already exists in the global
 * namespace, then the quick function will be ignored and not created.
 * 
 * If a quick function contains bad code that would otherwise crash the game,
 * a fail safe has been implemented to prevent it from doing so, display an
 * error log, and then return a 0 value.
 * 
 * ---
 *
 * ============================================================================
 * Terms of Use
 * ============================================================================
 *
 * 1. These plugins may be used in free or commercial games provided that they
 * have been acquired through legitimate means at VisuStella.com and/or any
 * other official approved VisuStella sources. Exceptions and special
 * circumstances that may prohibit usage will be listed on VisuStella.com.
 * 
 * 2. All of the listed coders found in the Credits section of this plugin must
 * be given credit in your games or credited as a collective under the name:
 * "VisuStella".
 * 
 * 3. You may edit the source code to suit your needs, so long as you do not
 * claim the source code belongs to you. VisuStella also does not take
 * responsibility for the plugin if any changes have been made to the plugin's
 * code, nor does VisuStella take responsibility for user-provided custom code
 * used for custom control effects including advanced JavaScript notetags
 * and/or plugin parameters that allow custom JavaScript code.
 * 
 * 4. You may NOT redistribute these plugins nor take code from this plugin to
 * use as your own. These plugins and their code are only to be downloaded from
 * VisuStella.com and other official/approved VisuStella sources. A list of
 * official/approved sources can also be found on VisuStella.com.
 *
 * 5. VisuStella is not responsible for problems found in your game due to
 * unintended usage, incompatibility problems with plugins outside of the
 * VisuStella MZ library, plugin versions that aren't up to date, nor
 * responsible for the proper working of compatibility patches made by any
 * third parties. VisuStella is not responsible for errors caused by any
 * user-provided custom code used for custom control effects including advanced
 * JavaScript notetags and/or plugin parameters that allow JavaScript code.
 *
 * 6. If a compatibility patch needs to be made through a third party that is
 * unaffiliated with VisuStella that involves using code from the VisuStella MZ
 * library, contact must be made with a member from VisuStella and have it
 * approved. The patch would be placed on VisuStella.com as a free download
 * to the public. Such patches cannot be sold for monetary gain, including
 * commissions, crowdfunding, and/or donations.
 *
 * ============================================================================
 * Credits
 * ============================================================================
 * 
 * If you are using this plugin, credit the following people in your game:
 *
 * Team VisuStella
 * * Yanfly
 * * Arisu
 * * Olivia
 * * Irina
 *
 * ============================================================================
 * Changelog
 * ============================================================================
 * 
 * Version 1.38: June 11, 2021
 * * Documentation Update!
 * ** Help file updated for new features.
 * * New Features!
 * ** New Plugin Command added by Irina and sponsored by Caz!
 * *** Picture: Show Icon
 * **** Shows an icon instead of a picture image.
 * **** The picture icon can be controlled like any other picture.
 * 
 * Version 1.37: May 21, 2021
 * * Documentation Update!
 * ** Help file updated for new features.
 * * New Features!
 * ** New Plugin Commands added by Arisu:
 * *** Switches: Randomize ID(s)
 * *** Switches: Randomize Range
 * *** Switches: Toggle ID(s)
 * *** Switches: Toggle Range
 * **** These Plugin Commands allow you to randomize the ON/OFF positions of
 *      switches or toggle them so that they flip their ON/OFF status.
 * 
 * Version 1.36: May 14, 2021
 * * Documentation Update!
 * ** Help file updated for new features.
 * * New Features!
 * ** New Plugin Commands added by Irina:
 * *** Export: All Maps Text
 * *** Export: All Troops Text
 * *** Export: Current Map Text
 * *** Export: Current Troop Text
 * **** Play Test Only Plugin Commands. These Plugin Commands are used for
 *      extracting all messages, show choices, comments, and scrolling text to
 *      parse and export them as a TXT file. Useful for getting a game's script
 *      to a voice actor or voice actress.
 * 
 * Version 1.35: May 7, 2021
 * * Documentation Update!
 * ** Added the following text to "Parameter Settings" Plugin Parameters for
 *    extra clarity regarding Parameter Caps:
 * *** These settings DO NOT raise the editor's maximum values. If you want to
 *     raise an enemy's maximum parameter value past their default cap, use the
 *     associated notetag for them instead.
 * 
 * Version 1.34: April 23, 2021
 * * Bug Fixes!
 * ** For the vanilla Equip Status window, custom parameters with integer
 *    values will now show up as integers and not percentiles. Fix by Olivia.
 * * Documentation Update!
 * ** Added clarity to the <param: x> notetag for enemies.
 * *** This notetag does NOT work with X Parameters, S Parameters, or any
 *     custom parameters. This notetag ONLY works with the base parameters.
 * 
 * Version 1.33: April 9, 2021
 * * Bug Fixes!
 * ** RPG Maker MZ Bug: Window Skin Bleeding
 * *** Since the v1.2.0 update, Window.prototype._refreshBack's frame value has
 *     been set from 96 to 95. This results in the window skin bleeding past
 *     the window's intended borders. The Core Engine now reverts this change
 *     to prevent the bleeding effect from happening.
 * * Feature Update!
 * ** "Encounter Rate Minimum" now has a valid minimum value of 1. Update made
 *    by Olivia.
 * 
 * Version 1.32: April 2, 2021
 * * Documentation Update!
 * ** Help file updated for new features.
 * * New Features!
 * ** New Plugin Parameters added by Yanfly:
 * *** Plugin Parameters > QoL Settings > Battle Test > Add Item Type
 * *** Plugin Parameters > QoL Settings > Battle Test > Add Weapon Type
 * *** Plugin Parameters > QoL Settings > Battle Test > Add Armor Type
 * *** Plugin Parameters > QoL Settings > Battle Test > Added Quantity
 * **** By default, RPG Maker MZ only adds 99 of items and not weapons or armor
 *      making it awkward for testing specific battle mechanics. These settings
 *      allow you to add in custom amounts of items, weapons, and/or armors if
 *      you so wish.
 * 
 * Version 1.31: March 26, 2021
 * * Feature Update!
 * ** Title screen buttons will now become fully opaque when hovered over them
 *    instead of only when pressed. Update made by Yanfly.
 * 
 * Version 1.30: March 19, 2021
 * * Bug Fixes!
 * ** RPG Maker MZ Bug: Invisible Battle Sprites
 * *** If you removed a party member during battle and added that exact party
 *     member back into the same slot, their sprite would appear invisible. The
 *     VisuStella Core Engine will fix this problem and prevent it from
 *     happening. Fix made by Olivia.
 * * Compatibility Update
 * ** Added compatibility functionality for future plugins.
 * * Documentation Update!
 * ** Help file updated for new features.
 * * New Features!
 * ** New Plugin Parameter added by Arisu:
 * *** Plugin Parameters > QoL Settings > Misc > Ani: Mirror Offset
 * **** When animations are mirrored, mirror their Offset X values, too.
 * ** New animation name tags added by Arisu:
 * *** <Mirror Offset X> and <No Mirror Offset X>
 * **** If these text tags are placed in an animation's name, it will cause the
 *      offset X value to be mirrored when the animation is mirrored or have it
 *      ignored despite being mirrored.
 * 
 * Version 1.29: March 12, 2021
 * * Bug Fixes!
 * ** RPG Maker MZ Bug: Interactable window client area does not conform to the
 *    window's declared scale when the scale is anything but 1.0. This will now
 *    be fixed through this plugin. Fix made by Olivia.
 * * Documentation Update!
 * ** Added documentation for new RPG Maker MZ bug fixes!
 * ** Help file updated for updated features.
 * * Feature Update!
 * ** Name Input should be more controller-friendly. If a controller is
 *    connected upon entering the name change scene, it will use the default
 *    manual-entry mode instead of the keyboard-entry mode. If a controller
 *    button is pressed during the keyboard-entry mode, it will automatically
 *    switch to the manual-entry mode.
 * ** This plugin does not provide support for controllers that are undetected
 *    by RPG Maker MZ's default controller support.
 * ** This feature was already implemented since version 1.27 but wasn't
 *    documented so here we are. Update made by Irina.
 * 
 * Version 1.28: March 5, 2021
 * * Bug Fixes!
 * ** RPG Maker MZ Bug: The arrows drawn by a window skin will no longer by
 *    placed on a half pixel when a window's size is an odd number. This would
 *    cause sprite tearing problems and look awful. Fix made by Irina.
 * * Documentation Update!
 * ** Added documentation for new RPG Maker MZ bug fixes!
 * 
 * Version 1.27: February 26, 2021
 * * Documentation Update!
 * ** Help file updated for new features.
 * ** Moved "Show Scrolling Text, additional functionality" section from Bug
 *    Fixes to Major Changes as it was placed in the wrong section.
 * * New Features!
 * ** New Plugin Parameter added by Yanfly.
 * *** Plugin Parameters > Keyboard Input > Name Input > Banned Words
 * **** Insert words you don't want your players to use for character names.
 * 
 * Version 1.26: February 19, 2021
 * * Bug Fixes!
 * ** Certain Plugin Parameters no longer have settings that restrict them to
 *    a maximum of 1. Fix made by Arisu.
 * * Feature Update!
 * ** Changed the default value for a New Game > Common Event upon Play Testing
 *    to 0 to prevent confusion. Update made by Arisu.
 * 
 * Version 1.25: February 5, 2021
 * * Documentation Update!
 * ** Help file updated for new features.
 * * New Features!
 * ** Show Scrolling Text, additional functionality added by Arisu
 * *** The event command "Show Scrolling Text" now has additional functionality
 *     as long as the VisuStella MZ Core Engine is installed. If the game dev
 *     inserts "// Script Call" (without the quotes) inside the scrolling text,
 *     then the entirity of the Show Scrolling Text event command will be ran
 *     as a giant script call event command.
 * *** The reason why this functionality is added is because the "Script..."
 *     event command contains only 12 lines maximum. This means for any script
 *     call larger than 12 lines of code cannot be done by normal means as each
 *     script call is ran as a separate instance.
 * *** By repurposing the "Show Scrolling Text" event command to be able to
 *     function as an extended "Script..." event command, such a thing is now
 *     possible with less hassle and more lines to code with.
 * *** This effect does not occur if the Show Scrolling Text event command does
 *     not have "// Script Call" in its contents.
 * 
 * Version 1.24: January 29, 2021
 * * Documentation Update!
 * ** Plugin Parameters: Custom Parameters Settings added the following note:
 * *** For clarification, these settings do NOT create brand-new parameters for
 *     you to use and add to your game nor are the bonuses supported by other
 *     plugins in the VisuStella MZ library. These settings exist to function
 *     as a bridge for non-VisuStella MZ plugins that have created their own
 *     parameter values and to show them inside VisuStella menus.
 * * Feature Update!
 * ** Default JS Plugin Parameter for the Title Command: "Shutdown" now has a
 *    note in it that reads: "Do NOT use this command with mobile devices or
 *    browser games. All it does is cause the game to display a blank, black
 *    canvas which the player is unable to do anything with. It does NOT force
 *    close the browser tab nor the app."
 * *** This is also why this command is disabled by default for any non-NodeJS
 *     client deployed game versions.
 * ** Disabled some bug fixes made by the Core Engine for the default RMMZ code
 *    base since the 1.1.1 version now contains those very same fixes.
 * 
 * Version 1.23: January 22, 2021
 * * Optimization Update!
 * ** Plugin should run more optimized.
 * 
 * Version 1.22: January 15, 2021
 * * Documentation Update!
 * ** Added documentation for new RPG Maker MZ bug fixes!
 * * Bug Fixes!
 * ** RPG Maker MZ Bug: Sprite_Timer is added to the spriteset for the parent
 *    scene, making it affected by any filers, zooms, and/or blurs, hindering
 *    its readability.
 * 
 * Version 1.21: January 8, 2021
 * * Documentation Update!
 * ** Added documentation for new feature(s)!
 * * New Features!
 * ** New Plugin Parameters added by Arisu:
 * *** Plugin Parameters > Keyboard Input > Controls > WASD Movement
 * *** Plugin Parameters > Keyboard Input > Controls > R Button: Dash Toggle
 * 
 * Version 1.20: January 1, 2021
 * * Compatibility Update!
 * ** Added compatibility functionality for future plugins.
 * 
 * Version 1.19: December 25, 2020
 * * Documentation Update!
 * ** Added documentation for new feature(s) and feature updates!
 * * Bug Fixes!
 * ** Fixed typo inside of the comments inside the JS: Quick Functions.
 * * Feature Update!
 * ** Plugin Parameters > Color Settings > Outline Color is now renamed to
 *    Font Outline.
 * * New Features!
 * ** New Plugin Parameters added by Shaz!
 * *** Plugin Parameters > Color Settings > Gauge Number Outline
 * 
 * Version 1.18: December 18, 2020
 * * Bug Fixes!
 * ** Compatible string text from the Items and Equips Core will no longer
 *    register MaxHP and MaxMP as percentile values for the info window.
 * ** RPG Maker MZ Bug: Gamepads no longer go rapidfire after a cleared input.
 *    There is now a period of delay for gamepads after an input clear.
 * ** RPG Maker MZ Bug: Unusable items on an individual-actor basis will no
 *    longer be overwritten by party-based usability for battle. Fix by Yanfly.
 * ** RPG Maker MV animations will no longer crash for unplayable sound
 *    effects. Fix made by Yanfly.
 * * Compatibility Update!
 * ** Plugins should be more compatible with one another.
 * * Documentation Update!
 * ** Added documentation for new feature(s)!
 * ** Added documentation for new RPG Maker MZ bug fixes!
 * * New Features!
 * ** New Plugin Parameters added by Yanfly!
 * *** Plugin Parameters > Button Assist > Key: Shift
 * *** Plugin Parameters > Button Assist > Key: Tab
 * **** These let you assign text codes to the Shift and Tab buttons for the
 *      Button Assist windows.
 * *** Plugin Parameters > QoL Settings > Misc > NewGame > CommonEvent
 * **** For an all version (including non-play test) common event to start new
 *      games with.
 * 
 * Version 1.17: December 11, 2020
 * * Compatibility Update!
 * ** Added compatibility functionality for future plugins.
 * 
 * Version 1.16: December 4, 2020
 * * Compatibility Update!
 * ** Plugins should be more compatible with one another.
 * * Documentation Update!
 * ** Added documentation for new feature(s)!
 * * Feature Update!
 * ** Button Assist Window for the change name scene will now default to "Tab"
 *    for switching between both modes. Update made by Yanfly.
 * * New Features!
 * ** New Plugin Parameter added by Yanfly:
 * *** Plugin Parameters > Keyboard Input > Default Mode
 * **** Select default mode when entering the scene.
 * 
 * Version 1.15: November 29, 2020
 * * Bug Fixes!
 * ** Pressing "Enter" in the change name scene while the actor's name is
 *    completely empty will no longer result in endless buzzer sounds. Fix made
 *    by Arisu.
 * * Documentation Update!
 * ** Added documentation for new feature(s)!
 * * Feature Update!
 * ** For the name change scene, the "Tab" key now also lets the user switch
 *    between the two modes. Update made by Yanfly.
 * * New Features!
 * ** Two new plugin parameters added to Keyboard Input:
 * *** "Switch To Keyboard" and "Switch To Manual"
 * **** These determine the text used for the button assist window when
 *      switching between the two modes. Update made by Yanfly.
 * **** Button Assist window now takes into consideration for these texts.
 * * Optimization Update!
 * ** Plugin should run more optimized.
 * 
 * Version 1.14: November 22, 2020
 * * Documentation Update!
 * ** Added documentation for new feature(s)!
 * * New Features!
 * ** New Plugin Command added by Yanfly!
 * *** System: Load Images
 * **** Allows you to (pre) load up images ahead of time.
 * 
 * Version 1.13: November 15, 2020
 * * Optimization Update!
 * ** Plugin should run more optimized.
 * 
 * Version 1.12: November 8, 2020
 * * Compatibility Update!
 * ** Plugins should be more compatible with one another.
 * * Documentation Update!
 * ** Added documentation for new feature(s)!
 * * Feature Update!
 * ** Screen Shake Plugin Parameters and JS: Quick Function Plugin Parameters
 *    have been taken off experimental status.
 * * New Features!
 * ** New plugin parameters added by Arisu.
 * *** Plugin Parameters > Keyboard Input
 * **** Settings for the game that utilize keyboard input. These are primarily
 *      for the name input scene (Scene_Name) and the number input event
 *      command. These settings have only been tested on English keyboards and
 *      may or may not be compatible with other languages, so please disable
 *      these features if they do not fit in with your game.
 * 
 * Version 1.11: November 1, 2020
 * * Compatibility Update!
 * ** Plugins should be more compatible with one another.
 * * Feature Update!
 * ** Bitmap smoothing now takes into consideration for rounding coordinates.
 *    Update made by Irina.
 * 
 * Version 1.10: October 25, 2020
 * * Feature Update!
 * ** Sprite animation location now adjusts position relative to the sprite's
 *    scale, too. Update made by Arisu.
 *
 * Version 1.09: October 18, 2020
 * * Bug Fixes!
 * ** RPG Maker MZ Bug: Auto Battle Lock Up. Fixed by Yanfly.
 * *** If an auto battle Actor fights against an enemy whose DEF/MDF is too
 *     high, they will not use any actions at all. This can cause potential
 *     game freezing and softlocks. This plugin will change that and have them
 *     default to a regular Attack.
 * * Compatibility Update!
 * ** Plugins should be more compatible with one another.
 * 
 * Version 1.08: October 11, 2020
 * * Feature Update!
 * ** Altered sprite bitmaps via the various draw functions will now be marked
 *    as modified and will automatically purge themselves from graphical memory
 *    upon a sprite's removal to free up more resources. Change made by Yanfly.
 * ** Picture Sprite Origin anchors are now tied to the Game_Picture show and
 *    move commands instead of the Game_Interpretter commands. Change by Arisu.
 * 
 * Version 1.07: October 4, 2020
 * * Documentation Update!
 * ** New documentation added for the new Plugin Parameter category:
 *    "Custom Parameters".
 * * New Features!
 * ** New Plugin Parameter "Custom Parameters" added by Yanfly.
 * *** Create custom parameters for your game! These will appear in
 *     VisuStella MZ menus.
 * 
 * Version 1.06: September 27, 2020
 * * Bug Fixes!
 * ** Battler evasion pose can now occur if there is a miss. These were made
 *    separate in RPG Maker MZ and misses didn't enable the evasion pose. Fix
 *    made by Olivia.
 * * New Features!
 * ** New notetags for Maps and name tags for Troops added by Yanfly!
 * *** <Frontview>, <Sideview> to change the battle view for that specific map,
 *     or troop regardless of what other settings are.
 * *** <DTB>, <TPB Active>, <TPB Wait> to change the battle system for that
 *     specific map or troop regardless of what other settings are.
 * 
 * Version 1.05: September 20, 2020
 * * Bug Fixes!
 * ** <Level: x> notetag for enemies is now fixed! Fix made by Arisu.
 * * Documentation Update!
 * ** Documentation added for the new "System: Battle System Change" Plugin
 *    Command and removed the old "System: Set Time Progress Battle".
 * * Feature Update!
 * ** The Plugin Command "System: Set Time Progress Battle" has been replaced
 *    with "System: Battle System Change" instead. This is to accommodate
 *    future plugins that allow for different battle systems. Added by Yanfly.
 * *** If you have previously used "System: Set Time Progress Battle", please
 *     replace them. We apologize for the inconvenience.
 * * New Features!
 * ** In the Core Engine's plugin parameters, you can now set the Battle System
 *    used. This will default to whatever is the game database's setting. This
 *    feature is used for the future when new battle systems are made. Feature
 *    added by Yanfly.
 * 
 * Version 1.04: September 13, 2020
 * * Documentation Update!
 * ** Added new documentation for the "Title Command List" and Title Picture
 *    Buttons" plugin parameters. They now have a dedicated section each.
 * * Feature Updates!
 * ** Moved the "Title Command List" and "Title Picture Buttons" parameters
 *    from the Menu Layout > Title settings. They were far too hidden away and
 *    users had a hard time finding them. Update made by Yanfly.
 * *** Users who have customized these settings before will need to readjust
 *     them again. We apologize for the inconvenience.
 * 
 * Version 1.03: September 6, 2020
 * * Bug Fixes!
 * ** Having QoL > Modern Controls disabled (why would you) used to prevent the
 *    down button from working. It works again. Fix made by Yanfly.
 * * New Feature!
 * ** Plugin default settings now come with a "Game End" option on the title
 *    screen. For those updating from version 1.02 or order, you can add this
 *    in by opening the Core Engine > Plugin Parameters > Menu Layout Settings
 *    > press "delete" on Scene_Title > open it up, then the new settings will
 *    fill in automatically.
 * * New Experimental Feature Added:
 * ** Screen Shake Settings added to the Plugin Parameters.
 * *** Screen Shake: Custom Plugin Command added!
 * *** Credit to Aries of Sheratan, who gave us permission to use her formula.
 * *** We'll be expanding on more screen shaking options in the future.
 * * Optimization Update
 * ** Digit Grouping now works more efficiently.
 * 
 * Version 1.02: August 30, 2020
 * * New Feature!
 * ** New Plugin Command: "Picture: Erase All". Added by Olivia.
 * *** Erases all pictures on the screen because it's extremely tedious to do
 *     it one by one.
 * ** New Plugin Command: "Picture: Erase Range"
 * *** Erases all pictures within a range of numbers because it's extremely
 *     tedious to do it one by one.
 * * Optimization Update
 * ** Added a more accurate means of parsing numbers for Digit Grouping.
 * ** Window_Base.prototype.textSizeEx now stores data to a cache.
 * * Documentation Update
 * ** Added a section to Major Changes: New Hard-Coded Features on
 *    Digit Grouping and explaining its intricacies.
 * ** Added a note to Plugin Parameters > UI > Reposition Actors to ignore the
 *    setting if using the Battle Core.
 * 
 * Version 1.01: August 23, 2020
 * * Bug Fixes!
 * ** Digit grouping fixed to allow text codes to detect values larger than
 *    1000. Fix made by Olivia and Yanfly.
 * ** Param Plus, Rate, Flat notetags fixed. Fix made by Yanfly.
 * * New Experimental Feature Added:
 * ** JS: Quick Functions found in the Plugin Parameters
 *
 * Version 1.00: August 20, 2020
 * * Finished Plugin!
 *
 * ============================================================================
 * End of Helpfile
 * ============================================================================
 *
 * @ --------------------------------------------------------------------------
 *
 * @command ExportAllMapText
 * @text Export: All Maps Text
 * @desc PLAY TEST ONLY. Exports all of the text from all maps,
 * their events, event pages, and any associated Common Events.
 * 
 * @ --------------------------------------------------------------------------
 *
 * @command ExportAllTroopText
 * @text Export: All Troops Text
 * @desc PLAY TEST ONLY. Exports all of the text from all troops,
 * their event pages, and any associated Common Events.
 * 
 * @ --------------------------------------------------------------------------
 *
 * @command ExportCurMapText
 * @text Export: Current Map Text
 * @desc PLAY TEST ONLY. Exports all of the text on the current map,
 * its events, the event pages, and any associated Common Events.
 * 
 * @ --------------------------------------------------------------------------
 *
 * @command ExportCurTroopText
 * @text Export: Current Troop Text
 * @desc PLAY TEST ONLY. Exports all of the text on the current troop,
 * the troop's event pages, and any associated Common Events.
 * 
 * @ --------------------------------------------------------------------------
 *
 * @command OpenURL
 * @text Game: Open URL
 * @desc Opens a website URL from the game.
 *
 * @arg URL:str
 * @text URL
 * @desc Where do you want to take the player?
 * @default https://www.google.com/
 * 
 * @ --------------------------------------------------------------------------
 *
 * @command GoldChange
 * @text Gold: Gain/Lose
 * @desc Allows you to give/take more gold than the event editor limit.
 *
 * @arg value:eval
 * @text Value
 * @desc How much gold should the player gain/lose?
 * Use negative values to remove gold.
 * @default 0
 *
 * @ --------------------------------------------------------------------------
 *
 * @command PictureEasingType
 * @text Picture: Easing Type
 * @desc Changes the easing type to a number of options.
 *
 * @arg pictureId:num
 * @text Picture ID
 * @type number
 * @min 1
 * @max 100
 * @desc Which picture do you wish to apply this easing to?
 * @default 1
 *
 * @arg easingType:str
 * @text Easing Type
 * @type combo
 * @option Linear
 * @option InSine
 * @option OutSine
 * @option InOutSine
 * @option InQuad
 * @option OutQuad
 * @option InOutQuad
 * @option InCubic
 * @option OutCubic
 * @option InOutCubic
 * @option InQuart
 * @option OutQuart
 * @option InOutQuart
 * @option InQuint
 * @option OutQuint
 * @option InOutQuint
 * @option InExpo
 * @option OutExpo
 * @option InOutExpo
 * @option InCirc
 * @option OutCirc
 * @option InOutCirc
 * @option InBack
 * @option OutBack
 * @option InOutBack
 * @option InElastic
 * @option OutElastic
 * @option InOutElastic
 * @option InBounce
 * @option OutBounce
 * @option InOutBounce
 * @desc Select which easing type you wish to apply.
 * @default Linear
 *
 * @arg LineBreak
 * @text ------------------------
 * @default --------------------------------
 *
 * @arg Instructions1
 * @text Instructions
 * @default Insert this Plugin Command after
 *
 * @arg Instructions2
 * @text -
 * @default a "Move Picture" event command.
 * 
 * @arg Instructions3
 * @text -
 * @default Turn off "Wait for Completion"
 *
 * @arg Instructions4
 * @text -
 * @default in the "Move Picture" event.
 *
 * @arg Instructions5
 * @text -
 * @default You may have to add in your own
 *
 * @arg Instructions6
 * @text -
 * @default "Wait" event command after.
 *
 * @ --------------------------------------------------------------------------
 *
 * @command PictureEraseAll
 * @text Picture: Erase All
 * @desc Erases all pictures on the screen because it's extremely
 * tedious to do it one by one.
 *
 * @ --------------------------------------------------------------------------
 *
 * @command PictureEraseRange
 * @text Picture: Erase Range
 * @desc Erases all pictures within a range of numbers because it's
 * extremely tedious to do it one by one.
 *
 * @arg StartID:num
 * @text Starting ID
 * @type number
 * @min 1
 * @max 100
 * @desc The starting ID of the pictures to erase.
 * @default 1
 *
 * @arg EndingID:num
 * @text Ending ID
 * @type number
 * @min 1
 * @max 100
 * @desc The ending ID of the pictures to erase.
 * @default 100
 *
 * @ --------------------------------------------------------------------------
 * 
 * @command PictureShowIcon
 * @text Picture: Show Icon
 * @desc Shows an icon instead of a picture image.
 * The picture icon can be controlled like any other picture.
 * 
 * @arg General
 * 
 * @arg PictureID:eval
 * @text Picture ID Number
 * @parent General
 * @desc What is the ID of the picture you wish to show at? Use a
 * number between 1 and 100. You may use JavaScript code.
 * @default 1
 * 
 * @arg IconIndex:eval
 * @text Icon Index
 * @parent General
 * @desc Select the icon index to use for this picture.
 * You may use JavaScript code.
 * @default 23
 *
 * @arg Smooth:eval
 * @text Smooth Icon?
 * @parent General
 * @type boolean
 * @on Smooth
 * @off Pixelate
 * @desc This will make the icon smoothed out or pixelated.
 * @default false
 * 
 * @arg PictureSettings
 * @text Picture Settings
 *
 * @arg Settings:struct
 * @text Settings
 * @parent PictureSettings
 * @type struct<ShowPicture>
 * @desc Alter the settings for how the picture will be shown.
 * @default {"Position":"","Origin:num":"0","PositionX:eval":"0","PositionY:eval":"0","Scale":"","ScaleX:eval":"100","ScaleY:eval":"100","Blend":"","Opacity:eval":"255","BlendMode:num":"0"}
 * 
 * @ --------------------------------------------------------------------------
 *
 * @command ScreenShake
 * @text Screen Shake: Custom
 * @desc Creates a custom screen shake effect and also sets
 * the following uses of screen shake to this style.
 *
 * @arg Type:str
 * @text Shake Style
 * @type select
 * @option Original
 * @value original
 * @option Random
 * @value random
 * @option Horizontal
 * @value horizontal
 * @option Vertical
 * @value vertical
 * @desc Select shake style type.
 * @default random
 *
 * @arg Power:num
 * @text Power
 * @type number
 * @min 1
 * @max 9
 * @desc Power level for screen shake.
 * @default 5
 *
 * @arg Speed:num
 * @text Speed
 * @type number
 * @min 1
 * @max 9
 * @desc Speed level for screen shake.
 * @default 5
 *
 * @arg Duration:eval
 * @text Duration
 * @desc Duration of screenshake.
 * You can use code as well.
 * @default 60
 *
 * @arg Wait:eval
 * @text Wait for Completion
 * @parent Duration:eval
 * @type boolean
 * @on Wait
 * @off Don't Wait
 * @desc Wait until completion before moving onto the next event?
 * @default true
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SwitchRandomizeOne
 * @text Switches: Randomize ID(s)
 * @desc Select specific Switch ID's to randomize ON/OFF.
 *
 * @arg IDs:arraynum
 * @text Switch ID(s)
 * @type switch[]
 * @desc Select which Switch ID(s) to toggle.
 * @default ["1"]
 *
 * @arg Chance:num
 * @text Chance for ON
 * @type number
 * @min 1
 * @max 100
 * @desc Chance out of 100 that determines the switches to be ON.
 * @default 50
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SwitchRandomizeRange
 * @text Switches: Randomize Range
 * @desc Select specific Switch ID Range to randomize ON/OFF.
 * The ratio determines the ON/OFF distribution.
 *
 * @arg StartID:num
 * @text Starting ID
 * @type switch
 * @desc The starting ID of the Switch to toggle.
 * @default 1
 *
 * @arg EndingID:num
 * @text Ending ID
 * @type switch
 * @desc The ending ID of the Switch to toggle.
 * @default 20
 *
 * @arg Chance:num
 * @text Chance for ON
 * @type number
 * @min 1
 * @max 100
 * @desc Chance out of 100 that determines the switches to be ON.
 * @default 50
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SwitchToggleOne
 * @text Switches: Toggle ID(s)
 * @desc Select specific Switch ID's to toggle ON/OFF.
 * ON becomes OFF. OFF becomes ON.
 *
 * @arg IDs:arraynum
 * @text Switch ID(s)
 * @type switch[]
 * @desc Select which Switch ID(s) to toggle.
 * @default ["1"]
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SwitchToggleRange
 * @text Switches: Toggle Range
 * @desc Select specific Switch ID Range to toggle ON/OFF.
 * ON becomes OFF. OFF becomes ON.
 *
 * @arg StartID:num
 * @text Starting ID
 * @type switch
 * @desc The starting ID of the Switch to toggle.
 * @default 1
 *
 * @arg EndingID:num
 * @text Ending ID
 * @type switch
 * @desc The ending ID of the Switch to toggle.
 * @default 20
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SystemSetBattleSystem
 * @text System: Battle System Change
 * @desc Switch to a different battle system in-game.
 *
 * @arg option:str
 * @text Change To
 * @type select
 * @option Database Default (Use game database setting)
 * @value database
 * @option -
 * @value database
 * @option DTB: Default Turn Battle
 * @value dtb
 * @option TPB Active: Time Progress Battle (Active)
 * @value tpb active
 * @option TPB Wait: Time Progress Battle (Wait)
 * @value tpb wait
 * @option -
 * @value database
 * @option BTB: Brave Turn Battle (Req VisuMZ_2_BattleSystemBTB)
 * @value btb
 * @option CTB: Charge Turn Battle (Req VisuMZ_2_BattleSystemCTB)
 * @value ctb
 * @option FTB: Free Turn Battle (Req VisuMZ_2_BattleSystemFTB)
 * @value ftb
 * @option OTB: Order Turn Battle (Req VisuMZ_2_BattleSystemOTB)
 * @value otb
 * @option STB: Standard Turn Battle (Req VisuMZ_2_BattleSystemSTB)
 * @value stb
 * @desc Choose which battle system to switch to.
 * @default database
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SystemLoadImages
 * @text System: Load Images
 * @desc Allows you to (pre) load up images ahead of time.
 *
 * @arg animations:arraystr
 * @text img/animations/
 * @type file[]
 * @dir img/animations/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg battlebacks1:arraystr
 * @text img/battlebacks1/
 * @type file[]
 * @dir img/battlebacks1/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg battlebacks2:arraystr
 * @text img/battlebacks2/
 * @type file[]
 * @dir img/battlebacks2/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg characters:arraystr
 * @text img/characters/
 * @type file[]
 * @dir img/characters/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg enemies:arraystr
 * @text img/enemies/
 * @type file[]
 * @dir img/enemies/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg faces:arraystr
 * @text img/faces/
 * @type file[]
 * @dir img/faces/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg parallaxes:arraystr
 * @text img/parallaxes/
 * @type file[]
 * @dir img/parallaxes/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg pictures:arraystr
 * @text img/pictures/
 * @type file[]
 * @dir img/pictures/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg sv_actors:arraystr
 * @text img/sv_actors/
 * @type file[]
 * @dir img/sv_actors/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg sv_enemies:arraystr
 * @text img/sv_enemies/
 * @type file[]
 * @dir img/sv_enemies/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg system:arraystr
 * @text img/system/
 * @type file[]
 * @dir img/system/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg tilesets:arraystr
 * @text img/tilesets/
 * @type file[]
 * @dir img/tilesets/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg titles1:arraystr
 * @text img/titles1/
 * @type file[]
 * @dir img/titles1/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @arg titles2:arraystr
 * @text img/titles2/
 * @type file[]
 * @dir img/titles2/
 * @desc Which files do you wish to load from this directory?
 * @default []
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SystemSetFontSize
 * @text System: Main Font Size
 * @desc Set the game's main font size.
 *
 * @arg option:num
 * @text Change To
 * @type number
 * @min 1
 * @desc Change the font size to this number.
 * @default 26
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SystemSetSideView
 * @text System: Side View Battle
 * @desc Switch between Front View or Side View for battle.
 *
 * @arg option:str
 * @text Change To
 * @type select
 * @option Front View
 * @value Front View
 * @option Side View
 * @value Side View
 * @option Toggle
 * @value Toggle
 * @desc Choose which view type to switch to.
 * @default Toggle
 *
 * @ --------------------------------------------------------------------------
 *
 * @command SystemSetWindowPadding
 * @text System: Window Padding
 * @desc Change the game's window padding amount.
 *
 * @arg option:num
 * @text Change To
 * @type number
 * @min 1
 * @desc Change the game's standard window padding to this value.
 * Default: 12
 * @default 12
 *
 * @ ==========================================================================
 * @ Plugin Parameters
 * @ ==========================================================================
 *
 * @param BreakHead
 * @text --------------------------
 * @default ----------------------------------
 *
 * @param CoreEngine
 * @default Plugin Parameters
 * @param ATTENTION
 * @default READ THE HELP FILE
 *
 * @param BreakSettings
 * @text --------------------------
 * @default ----------------------------------
 *
 * @param QoL:struct
 * @text Quality of Life Settings
 * @type struct<QoLSettings>
 * @desc Quality of Life settings for both developers and players.
 * @default {"PlayTest":"","NewGameBoot:eval":"false","ForceNoPlayTest:eval":"false","OpenConsole:eval":"true","F6key:eval":"true","F7key:eval":"true","NewGameCommonEvent:num":"0","DigitGrouping":"","DigitGroupingStandardText:eval":"true","DigitGroupingExText:eval":"true","DigitGroupingDamageSprites:eval":"true","DigitGroupingGaugeSprites:eval":"true","DigitGroupingLocale:str":"en-US","PlayerBenefit":"","EncounterRateMinimum:num":"10","EscapeAlways:eval":"true","ImprovedAccuracySystem:eval":"true","AccuracyBoost:eval":"true","LevelUpFullHp:eval":"true","LevelUpFullMp:eval":"true","Misc":"","AntiZoomPictures:eval":"true","AutoStretch:str":"stretch","FontShadows:eval":"false","FontSmoothing:eval":"true","KeyItemProtect:eval":"true","ModernControls:eval":"true","NoTileShadows:eval":"true","PixelateImageRendering:eval":"false","RequireFocus:eval":"true","SmartEventCollisionPriority:eval":"true"}
 * 
 * @param BattleSystem:str
 * @text Battle System
 * @type select
 * @option Database Default (Use game database setting)
 * @value database
 * @option -
 * @value database
 * @option DTB: Default Turn Battle
 * @value dtb
 * @option TPB Active: Time Progress Battle (Active)
 * @value tpb active
 * @option TPB wait: Time Progress Battle (Wait)
 * @value tpb wait
 * @option -
 * @value database
 * @option BTB: Brave Turn Battle (Req VisuMZ_2_BattleSystemBTB)
 * @value btb
 * @option CTB: Charge Turn Battle (Req VisuMZ_2_BattleSystemCTB)
 * @value ctb
 * @option FTB: Free Turn Battle (Req VisuMZ_2_BattleSystemFTB)
 * @value ftb
 * @option OTB: Order Turn Battle (Req VisuMZ_2_BattleSystemOTB)
 * @value otb
 * @option STB: Standard Turn Battle (Req VisuMZ_2_BattleSystemSTB)
 * @value stb
 * @desc Choose which battle system to use for your game.
 * @default database
 *
 * @param Color:struct
 * @text Color Settings
 * @type struct<Color>
 * @desc Change the colors used for in-game text.
 * @default {"BasicColors":"","ColorNormal:str":"0","ColorSystem:str":"16","ColorCrisis:str":"17","ColorDeath:str":"18","ColorGaugeBack:str":"19","ColorHPGauge1:str":"20","ColorHPGauge2:str":"21","ColorMPGauge1:str":"22","ColorMPGauge2:str":"23","ColorMPCost:str":"23","ColorPowerUp:str":"24","ColorPowerDown:str":"25","ColorCTGauge1:str":"26","ColorCTGauge2:str":"27","ColorTPGauge1:str":"28","ColorTPGauge2:str":"29","ColorTPCost:str":"29","ColorPending:str":"#2a847d","ColorExpGauge1:str":"30","ColorExpGauge2:str":"31","ColorMaxLvGauge1:str":"14","ColorMaxLvGauge2:str":"6","AlphaColors":"","OutlineColor:str":"rgba(0, 0, 0, 0.6)","DimColor1:str":"rgba(0, 0, 0, 0.6)","DimColor2:str":"rgba(0, 0, 0, 0)","ItemBackColor1:str":"rgba(32, 32, 32, 0.5)","ItemBackColor2:str":"rgba(0, 0, 0, 0.5)","ConditionalColors":"","ActorHPColor:func":"\"// Set the variables used in this function.\\nlet actor = arguments[0];\\n\\n// Check if the actor exists. If not, return normal.\\nif (!actor) {\\n    return this.normalColor();\\n\\n// If the actor is dead, return death color.\\n} else if (actor.isDead()) {\\n    return this.deathColor();\\n\\n// If the actor is dying, return crisis color.\\n} else if (actor.isDying()) {\\n    return this.crisisColor();\\n\\n// Otherwise, return the normal color.\\n} else {\\n    return this.normalColor();\\n}\"","ActorMPColor:func":"\"// Set the variables used in this function.\\nlet actor = arguments[0];\\n\\n// Check if the actor exists. If not, return normal.\\nif (!actor) {\\n    return this.normalColor();\\n\\n// If MP rate is below 25%, return crisis color.\\n} else if (actor.mpRate() < 0.25) {\\n    return this.crisisColor();\\n\\n// Otherwise, return the normal color.\\n} else {\\n    return this.normalColor();\\n}\"","ActorTPColor:func":"\"// Set the variables used in this function.\\nlet actor = arguments[0];\\n\\n// Check if the actor exists. If not, return normal.\\nif (!actor) {\\n    return this.normalColor();\\n\\n// If TP rate is below 25%, return crisis color.\\n} else if (actor.tpRate() < 0.25) {\\n    return this.crisisColor();\\n\\n// Otherwise, return the normal color.\\n} else {\\n    return this.normalColor();\\n}\"","ParamChange:func":"\"// Set the variables used in this function.\\nlet change = arguments[0];\\n\\n// If a positive change, use power up color.\\nif (change > 0) {\\n    return this.powerUpColor();\\n\\n// If a negative change, use power down color.\\n} else if (change < 0) {\\n    return this.powerDownColor();\\n\\n// Otherwise, return the normal color.\\n} else {\\n    return this.normalColor();\\n}\"","DamageColor:func":"\"// Set the variables used in this function.\\nlet colorType = arguments[0];\\n\\n// Check the value of the color type\\n// and return an appropriate color.\\nswitch (colorType) {\\n\\n    case 0: // HP damage\\n        return \\\"#ffffff\\\";\\n\\n    case 1: // HP recover\\n        return \\\"#b9ffb5\\\";\\n\\n    case 2: // MP damage\\n        return \\\"#bb88bb\\\";\\n\\n    case 3: // MP recover\\n        return \\\"#80b0ff\\\";\\n\\n    default:\\n        return \\\"#808080\\\";\\n}\""}
 *
 * @param Gold:struct
 * @text Gold Settings
 * @type struct<Gold>
 * @desc Change up how gold operates and is displayed in-game.
 * @default {"GoldMax:num":"999999999","GoldFontSize:num":"24","GoldIcon:num":"314","GoldOverlap:str":"A Lot","ItemStyle:eval":"true"}
 *
 * @param ImgLoad:struct
 * @text Image Loading
 * @type struct<ImgLoad>
 * @desc Game images that will be loaded upon booting up the game.
 * Use this responsibly!!!
 * @default {"animations:arraystr":"[]","battlebacks1:arraystr":"[]","battlebacks2:arraystr":"[]","characters:arraystr":"[]","enemies:arraystr":"[]","faces:arraystr":"[]","parallaxes:arraystr":"[]","pictures:arraystr":"[]","sv_actors:arraystr":"[]","sv_enemies:arraystr":"[]","system:arraystr":"[\"Balloon\",\"IconSet\"]","tilesets:arraystr":"[]","titles1:arraystr":"[]","titles2:arraystr":"[]"}
 *
 * @param KeyboardInput:struct
 * @text Keyboard Input
 * @type struct<KeyboardInput>
 * @desc Settings for the game that utilize keyboard input.
 * @default {"Controls":"","WASD:eval":"false","DashToggleR:eval":"false","NameInput":"","EnableNameInput:eval":"true","DefaultMode:str":"keyboard","QwertyLayout:eval":"true","NameInputMessage:eval":"\"Type in this character's name.\\nPress \\\\c[5]ENTER\\\\c[0] when you're done.\\n\\n-or-\\n\\nPress \\\\c[5]arrow keys\\\\c[0]/\\\\c[5]TAB\\\\c[0] to switch\\nto manual character entry.\\n\\nPress \\\\c[5]ESC\\\\c[0]/\\\\c[5]TAB\\\\c[0] to use to keyboard.\"","NumberInput":"","EnableNumberInput:eval":"true","ButtonAssist":"","Keyboard:str":"Keyboard","Manual:str":"Manual"}
 *
 * @param MenuBg:struct
 * @text Menu Background Settings
 * @type struct<MenuBg>
 * @desc Change how menu backgrounds look for each scene.
 * @default {"Scene_Menu:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Item:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Skill:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Equip:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Status:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Options:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Save:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Load:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_GameEnd:struct":"{\"SnapshotOpacity:num\":\"128\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Shop:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Name:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}","Scene_Unlisted:struct":"{\"SnapshotOpacity:num\":\"192\",\"BgFilename1:str\":\"\",\"BgFilename2:str\":\"\"}"}
 *
 * @param ButtonAssist:struct
 * @text Menu Button Assist Window
 * @type struct<ButtonAssist>
 * @desc Settings pertaining to the Button Assist window found in in-game menus.
 * @default {"General":"","Enable:eval":"true","Location:str":"bottom","BgType:num":"0","Text":"","TextFmt:str":"%1:%2","MultiKeyFmt:str":"%1/%2","OkText:str":"Select","CancelText:str":"Back","SwitchActorText:str":"Switch Ally","Keys":"","KeyUnlisted:str":"\\}❪%1❫\\{","KeyUP:str":"^","KeyDOWN:str":"v","KeyLEFT:str":"<<","KeyRIGHT:str":">>","KeySHIFT:str":"\\}❪SHIFT❫\\{","KeyTAB:str":"\\}❪TAB❫\\{","KeyA:str":"A","KeyB:str":"B","KeyC:str":"C","KeyD:str":"D","KeyE:str":"E","KeyF:str":"F","KeyG:str":"G","KeyH:str":"H","KeyI:str":"I","KeyJ:str":"J","KeyK:str":"K","KeyL:str":"L","KeyM:str":"M","KeyN:str":"N","KeyO:str":"O","KeyP:str":"P","KeyQ:str":"Q","KeyR:str":"R","KeyS:str":"S","KeyT:str":"T","KeyU:str":"U","KeyV:str":"V","KeyW:str":"W","KeyX:str":"X","KeyY:str":"Y","KeyZ:str":"Z"}
 *
 * @param MenuLayout:struct
 * @text Menu Layout Settings
 * @type struct<MenuLayout>
 * @desc Change how menu layouts look for each scene.
 * @default {"Title:struct":"{\"TitleScreen\":\"\",\"DocumentTitleFmt:str\":\"%1: %2 - Version %3\",\"Subtitle:str\":\"Subtitle\",\"Version:str\":\"0.00\",\"drawGameTitle:func\":\"\\\"const x = 20;\\\\nconst y = Graphics.height / 4;\\\\nconst maxWidth = Graphics.width - x * 2;\\\\nconst text = $dataSystem.gameTitle;\\\\nconst bitmap = this._gameTitleSprite.bitmap;\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\nbitmap.outlineColor = \\\\\\\"black\\\\\\\";\\\\nbitmap.outlineWidth = 8;\\\\nbitmap.fontSize = 72;\\\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\\\\\"center\\\\\\\");\\\"\",\"drawGameSubtitle:func\":\"\\\"const x = 20;\\\\nconst y = Graphics.height / 4 + 72;\\\\nconst maxWidth = Graphics.width - x * 2;\\\\nconst text = Scene_Title.subtitle;\\\\nconst bitmap = this._gameTitleSprite.bitmap;\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\nbitmap.outlineColor = \\\\\\\"black\\\\\\\";\\\\nbitmap.outlineWidth = 6;\\\\nbitmap.fontSize = 48;\\\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\\\\\"center\\\\\\\");\\\"\",\"drawGameVersion:func\":\"\\\"const bitmap = this._gameTitleSprite.bitmap;\\\\nconst x = 0;\\\\nconst y = Graphics.height - 20;\\\\nconst width = Math.round(Graphics.width / 4);\\\\nconst height = 20;\\\\nconst c1 = ColorManager.dimColor1();\\\\nconst c2 = ColorManager.dimColor2();\\\\nconst text = 'Version ' + Scene_Title.version;\\\\nbitmap.gradientFillRect(x, y, width, height, c1, c2);\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\nbitmap.outlineColor = \\\\\\\"black\\\\\\\";\\\\nbitmap.outlineWidth = 3;\\\\nbitmap.fontSize = 16;\\\\nbitmap.drawText(text, x + 4, y, Graphics.width, height, \\\\\\\"left\\\\\\\");\\\"\",\"CommandRect:func\":\"\\\"const offsetX = $dataSystem.titleCommandWindow.offsetX;\\\\nconst offsetY = $dataSystem.titleCommandWindow.offsetY;\\\\nconst rows = this.commandWindowRows();\\\\nconst width = this.mainCommandWidth();\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nconst x = (Graphics.boxWidth - width) / 2 + offsetX;\\\\nconst y = Graphics.boxHeight - height - 96 + offsetY;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ButtonFadeSpeed:num\":\"4\"}","MainMenu:struct":"{\"CommandWindow\":\"\",\"CommandBgType:num\":\"0\",\"CommandRect:func\":\"\\\"const width = this.mainCommandWidth();\\\\nconst height = this.mainAreaHeight() - this.goldWindowRect().height;\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\nconst y = this.mainAreaTop();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"GoldWindow\":\"\",\"GoldBgType:num\":\"0\",\"GoldRect:func\":\"\\\"const rows = 1;\\\\nconst width = this.mainCommandWidth();\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\nconst y = this.mainAreaBottom() - height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"StatusWindow\":\"\",\"StatusBgType:num\":\"0\",\"StatusRect:func\":\"\\\"const width = Graphics.boxWidth - this.mainCommandWidth();\\\\nconst height = this.mainAreaHeight();\\\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\\\nconst y = this.mainAreaTop();\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","ItemMenu:struct":"{\"HelpWindow\":\"\",\"HelpBgType:num\":\"0\",\"HelpRect:func\":\"\\\"const x = 0;\\\\nconst y = this.helpAreaTop();\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.helpAreaHeight();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"CategoryWindow\":\"\",\"CategoryBgType:num\":\"0\",\"CategoryRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst rows = 1;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ItemWindow\":\"\",\"ItemBgType:num\":\"0\",\"ItemRect:func\":\"\\\"const x = 0;\\\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.mainAreaBottom() - y;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ActorWindow\":\"\",\"ActorBgType:num\":\"0\",\"ActorRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.mainAreaHeight();\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","SkillMenu:struct":"{\"HelpWindow\":\"\",\"HelpBgType:num\":\"0\",\"HelpRect:func\":\"\\\"const x = 0;\\\\nconst y = this.helpAreaTop();\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.helpAreaHeight();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"SkillTypeWindow\":\"\",\"SkillTypeBgType:num\":\"0\",\"SkillTypeRect:func\":\"\\\"const rows = 3;\\\\nconst width = this.mainCommandWidth();\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\nconst y = this.mainAreaTop();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"StatusWindow\":\"\",\"StatusBgType:num\":\"0\",\"StatusRect:func\":\"\\\"const width = Graphics.boxWidth - this.mainCommandWidth();\\\\nconst height = this._skillTypeWindow.height;\\\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\\\nconst y = this.mainAreaTop();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ItemWindow\":\"\",\"ItemBgType:num\":\"0\",\"ItemRect:func\":\"\\\"const x = 0;\\\\nconst y = this._statusWindow.y + this._statusWindow.height;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.mainAreaHeight() - this._statusWindow.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ActorWindow\":\"\",\"ActorBgType:num\":\"0\",\"ActorRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.mainAreaHeight();\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","EquipMenu:struct":"{\"HelpWindow\":\"\",\"HelpBgType:num\":\"0\",\"HelpRect:func\":\"\\\"const x = 0;\\\\nconst y = this.helpAreaTop();\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.helpAreaHeight();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"StatusWindow\":\"\",\"StatusBgType:num\":\"0\",\"StatusRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst width = this.statusWidth();\\\\nconst height = this.mainAreaHeight();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"CommandWindow\":\"\",\"CommandBgType:num\":\"0\",\"CommandRect:func\":\"\\\"const x = this.statusWidth();\\\\nconst y = this.mainAreaTop();\\\\nconst rows = 1;\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"SlotWindow\":\"\",\"SlotBgType:num\":\"0\",\"SlotRect:func\":\"\\\"const commandWindowRect = this.commandWindowRect();\\\\nconst x = this.statusWidth();\\\\nconst y = commandWindowRect.y + commandWindowRect.height;\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\nconst height = this.mainAreaHeight() - commandWindowRect.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ItemWindow\":\"\",\"ItemBgType:num\":\"0\",\"ItemRect:func\":\"\\\"return this.slotWindowRect();\\\"\"}","StatusMenu:struct":"{\"ProfileWindow\":\"\",\"ProfileBgType:num\":\"0\",\"ProfileRect:func\":\"\\\"const width = Graphics.boxWidth;\\\\nconst height = this.profileHeight();\\\\nconst x = 0;\\\\nconst y = this.mainAreaBottom() - height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"StatusWindow\":\"\",\"StatusBgType:num\":\"0\",\"StatusRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.statusParamsWindowRect().y - y;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"StatusParamsWindow\":\"\",\"StatusParamsBgType:num\":\"0\",\"StatusParamsRect:func\":\"\\\"const width = this.statusParamsWidth();\\\\nconst height = this.statusParamsHeight();\\\\nconst x = 0;\\\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"StatusEquipWindow\":\"\",\"StatusEquipBgType:num\":\"0\",\"StatusEquipRect:func\":\"\\\"const width = Graphics.boxWidth - this.statusParamsWidth();\\\\nconst height = this.statusParamsHeight();\\\\nconst x = this.statusParamsWidth();\\\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","OptionsMenu:struct":"{\"OptionsWindow\":\"\",\"OptionsBgType:num\":\"0\",\"OptionsRect:func\":\"\\\"const n = Math.min(this.maxCommands(), this.maxVisibleCommands());\\\\nconst width = 400;\\\\nconst height = this.calcWindowHeight(n, true);\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\nconst y = (Graphics.boxHeight - height) / 2;\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","SaveMenu:struct":"{\"HelpWindow\":\"\",\"HelpBgType:num\":\"0\",\"HelpRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst rows = 1;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.calcWindowHeight(rows, false);\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ListWindow\":\"\",\"ListBgType:num\":\"0\",\"ListRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","LoadMenu:struct":"{\"HelpWindow\":\"\",\"HelpBgType:num\":\"0\",\"HelpRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst rows = 1;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.calcWindowHeight(rows, false);\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ListWindow\":\"\",\"ListBgType:num\":\"0\",\"ListRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","GameEnd:struct":"{\"CommandList:arraystruct\":\"[\\\"{\\\\\\\"Symbol:str\\\\\\\":\\\\\\\"toTitle\\\\\\\",\\\\\\\"TextStr:str\\\\\\\":\\\\\\\"Untitled\\\\\\\",\\\\\\\"TextJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return TextManager.toTitle;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ShowJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"EnableJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ExtJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return null;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"CallHandlerJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"SceneManager._scene.commandToTitle();\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Symbol:str\\\\\\\":\\\\\\\"cancel\\\\\\\",\\\\\\\"TextStr:str\\\\\\\":\\\\\\\"Untitled\\\\\\\",\\\\\\\"TextJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return TextManager.cancel;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ShowJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"EnableJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ExtJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return null;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"CallHandlerJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"SceneManager._scene.popScene();\\\\\\\\\\\\\\\"\\\\\\\"}\\\"]\",\"CommandBgType:num\":\"0\",\"CommandRect:func\":\"\\\"const rows = 2;\\\\nconst width = this.mainCommandWidth();\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\nconst y = (Graphics.boxHeight - height) / 2;\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","ShopMenu:struct":"{\"HelpWindow\":\"\",\"HelpBgType:num\":\"0\",\"HelpRect:func\":\"\\\"const wx = 0;\\\\nconst wy = this.helpAreaTop();\\\\nconst ww = Graphics.boxWidth;\\\\nconst wh = this.helpAreaHeight();\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\",\"GoldWindow\":\"\",\"GoldBgType:num\":\"0\",\"GoldRect:func\":\"\\\"const rows = 1;\\\\nconst width = this.mainCommandWidth();\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nconst x = Graphics.boxWidth - width;\\\\nconst y = this.mainAreaTop();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"CommandWindow\":\"\",\"CommandBgType:num\":\"0\",\"CommandRect:func\":\"\\\"const x = 0;\\\\nconst y = this.mainAreaTop();\\\\nconst rows = 1;\\\\nconst width = this._goldWindow.x;\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"DummyWindow\":\"\",\"DummyBgType:num\":\"0\",\"DummyRect:func\":\"\\\"const x = 0;\\\\nconst y = this._commandWindow.y + this._commandWindow.height;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.mainAreaHeight() - this._commandWindow.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"NumberWindow\":\"\",\"NumberBgType:num\":\"0\",\"NumberRect:func\":\"\\\"const x = 0;\\\\nconst y = this._dummyWindow.y;\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\nconst height = this._dummyWindow.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"StatusWindow\":\"\",\"StatusBgType:num\":\"0\",\"StatusRect:func\":\"\\\"const width = this.statusWidth();\\\\nconst height = this._dummyWindow.height;\\\\nconst x = Graphics.boxWidth - width;\\\\nconst y = this._dummyWindow.y;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"BuyWindow\":\"\",\"BuyBgType:num\":\"0\",\"BuyRect:func\":\"\\\"const x = 0;\\\\nconst y = this._dummyWindow.y;\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\nconst height = this._dummyWindow.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"CategoryWindow\":\"\",\"CategoryBgType:num\":\"0\",\"CategoryRect:func\":\"\\\"const x = 0;\\\\nconst y = this._dummyWindow.y;\\\\nconst rows = 1;\\\\nconst width = Graphics.boxWidth;\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"SellWindow\":\"\",\"SellBgType:num\":\"0\",\"SellRect:func\":\"\\\"const x = 0;\\\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\\\nconst width = Graphics.boxWidth;\\\\nconst height =\\\\n    this.mainAreaHeight() -\\\\n    this._commandWindow.height -\\\\n    this._categoryWindow.height;\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","NameMenu:struct":"{\"EditWindow\":\"\",\"EditBgType:num\":\"0\",\"EditRect:func\":\"\\\"const rows = 9;\\\\nconst inputWindowHeight = this.calcWindowHeight(rows, true);\\\\nconst padding = $gameSystem.windowPadding();\\\\nconst width = 600;\\\\nconst height = Math.min(ImageManager.faceHeight + padding * 2, this.mainAreaHeight() - inputWindowHeight);\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\nconst y = (this.mainAreaHeight() - (height + inputWindowHeight)) / 2 + this.mainAreaTop();\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"InputWindow\":\"\",\"InputBgType:num\":\"0\",\"InputRect:func\":\"\\\"const x = this._editWindow.x;\\\\nconst y = this._editWindow.y + this._editWindow.height;\\\\nconst rows = 9;\\\\nconst width = this._editWindow.width;\\\\nconst height = this.calcWindowHeight(rows, true);\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}"}
 *
 * @param Param:struct
 * @text Parameter Settings
 * @type struct<Param>
 * @desc Change up the limits of parameters and how they're calculated.
 * @default {"DisplayedParams:arraystr":"[\"ATK\",\"DEF\",\"MAT\",\"MDF\",\"AGI\",\"LUK\"]","ExtDisplayedParams:arraystr":"[\"MaxHP\",\"MaxMP\",\"ATK\",\"DEF\",\"MAT\",\"MDF\",\"AGI\",\"LUK\"]","BasicParameters":"","CrisisRate:num":"0.25","BasicParameterFormula:func":"\"// Determine the variables used in this calculation.\\nlet paramId = arguments[0];\\nlet base = this.paramBase(paramId);\\nlet plus = this.paramPlus(paramId);\\nlet paramRate = this.paramRate(paramId);\\nlet buffRate = this.paramBuffRate(paramId);\\nlet flatBonus = this.paramFlatBonus(paramId);\\n\\n// Formula to determine total parameter value.\\nlet value = (base + plus) * paramRate * buffRate + flatBonus;\\n\\n// Determine the limits\\nconst maxValue = this.paramMax(paramId);\\nconst minValue = this.paramMin(paramId);\\n\\n// Final value\\nreturn Math.round(value.clamp(minValue, maxValue));\"","BasicParamCaps":"","BasicActorParamCaps":"","BasicActorParamMax0:str":"9999","BasicActorParamMax1:str":"9999","BasicActorParamMax2:str":"999","BasicActorParamMax3:str":"999","BasicActorParamMax4:str":"999","BasicActorParamMax5:str":"999","BasicActorParamMax6:str":"999","BasicActorParamMax7:str":"999","BasicEnemyParamCaps":"","BasicEnemyParamMax0:str":"999999","BasicEnemyParamMax1:str":"9999","BasicEnemyParamMax2:str":"999","BasicEnemyParamMax3:str":"999","BasicEnemyParamMax4:str":"999","BasicEnemyParamMax5:str":"999","BasicEnemyParamMax6:str":"999","BasicEnemyParamMax7:str":"999","XParameters":"","XParameterFormula:func":"\"// Determine the variables used in this calculation.\\nlet xparamId = arguments[0];\\nlet base = this.traitsSum(Game_BattlerBase.TRAIT_XPARAM, xparamId);\\nlet plus = this.xparamPlus(xparamId);\\nlet paramRate = this.xparamRate(xparamId);\\nlet flatBonus = this.xparamFlatBonus(xparamId);\\n\\n// Formula to determine total parameter value.\\nlet value = (base + plus) * paramRate + flatBonus;\\n\\n// Final value\\nreturn value;\"","XParamVocab":"","XParamVocab0:str":"Hit","XParamVocab1:str":"Evasion","XParamVocab2:str":"Critical Rate","XParamVocab3:str":"Critical Evade","XParamVocab4:str":"Magic Evade","XParamVocab5:str":"Magic Reflect","XParamVocab6:str":"Counter","XParamVocab7:str":"HP Regen","XParamVocab8:str":"MP Regen","XParamVocab9:str":"TP Regen","SParameters":"","SParameterFormula:func":"\"// Determine the variables used in this calculation.\\nlet sparamId = arguments[0];\\nlet base = this.traitsPi(Game_BattlerBase.TRAIT_SPARAM, sparamId);\\nlet plus = this.sparamPlus(sparamId);\\nlet paramRate = this.sparamRate(sparamId);\\nlet flatBonus = this.sparamFlatBonus(sparamId);\\n\\n// Formula to determine total parameter value.\\nlet value = (base + plus) * paramRate + flatBonus;\\n\\n// Final value\\nreturn value;\"","SParamVocab":"","SParamVocab0:str":"Aggro","SParamVocab1:str":"Guard","SParamVocab2:str":"Recovery","SParamVocab3:str":"Item Effect","SParamVocab4:str":"MP Cost","SParamVocab5:str":"TP Charge","SParamVocab6:str":"Physical DMG","SParamVocab7:str":"Magical DMG","SParamVocab8:str":"Floor DMG","SParamVocab9:str":"EXP Gain","Icons":"","DrawIcons:eval":"true","IconParam0:str":"84","IconParam1:str":"165","IconParam2:str":"76","IconParam3:str":"81","IconParam4:str":"101","IconParam5:str":"133","IconParam6:str":"140","IconParam7:str":"87","IconXParam0:str":"102","IconXParam1:str":"82","IconXParam2:str":"78","IconXParam3:str":"82","IconXParam4:str":"171","IconXParam5:str":"222","IconXParam6:str":"77","IconXParam7:str":"72","IconXParam8:str":"72","IconXParam9:str":"72","IconSParam0:str":"5","IconSParam1:str":"128","IconSParam2:str":"72","IconSParam3:str":"176","IconSParam4:str":"165","IconSParam5:str":"164","IconSParam6:str":"76","IconSParam7:str":"79","IconSParam8:str":"141","IconSParam9:str":"73"}
 *
 * @param CustomParam:arraystruct
 * @text Custom Parameters
 * @parent Param:struct
 * @type struct<CustomParam>[]
 * @desc Create custom parameters for your game!
 * These will appear in VisuStella MZ menus.
 * @default ["{\"ParamName:str\":\"Strength\",\"Abbreviation:str\":\"str\",\"Icon:num\":\"77\",\"Type:str\":\"integer\",\"ValueJS:json\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\n\\\\n// Calculations\\\\nreturn (user.atk * 0.75) + (user.def * 0.25);\\\"\"}","{\"ParamName:str\":\"Dexterity\",\"Abbreviation:str\":\"dex\",\"Icon:num\":\"82\",\"Type:str\":\"integer\",\"ValueJS:json\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\n\\\\n// Calculations\\\\nreturn (user.agi * 0.75) + (user.atk * 0.25);\\\"\"}","{\"ParamName:str\":\"Constitution\",\"Abbreviation:str\":\"con\",\"Icon:num\":\"81\",\"Type:str\":\"integer\",\"ValueJS:json\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\n\\\\n// Calculations\\\\nreturn (user.def * 0.75) + (user.mdf * 0.25);\\\"\"}","{\"ParamName:str\":\"Intelligence\",\"Abbreviation:str\":\"int\",\"Icon:num\":\"79\",\"Type:str\":\"integer\",\"ValueJS:json\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\n\\\\n// Calculations\\\\nreturn (user.mat * 0.75) + (user.mdf * 0.25);\\\"\"}","{\"ParamName:str\":\"Wisdom\",\"Abbreviation:str\":\"wis\",\"Icon:num\":\"72\",\"Type:str\":\"integer\",\"ValueJS:json\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\n\\\\n// Calculations\\\\nreturn (user.mdf * 0.75) + (user.luk * 0.25);\\\"\"}","{\"ParamName:str\":\"Charisma\",\"Abbreviation:str\":\"cha\",\"Icon:num\":\"84\",\"Type:str\":\"integer\",\"ValueJS:json\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\n\\\\n// Calculations\\\\nreturn (user.luk * 0.75) + (user.agi * 0.25);\\\"\"}"]
 *
 * @param ScreenShake:struct
 * @text Screen Shake Settings
 * @type struct<ScreenShake>
 * @desc Get more screen shake effects into your game!
 * @default {"DefaultStyle:str":"random","originalJS:func":"\"// Calculation\\nthis.x += Math.round($gameScreen.shake());\"","randomJS:func":"\"// Calculation\\n// Original Formula by Aries of Sheratan\\nconst power = $gameScreen._shakePower * 0.75;\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\nconst duration = $gameScreen._shakeDuration;\\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\"","horzJS:func":"\"// Calculation\\n// Original Formula by Aries of Sheratan\\nconst power = $gameScreen._shakePower * 0.75;\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\nconst duration = $gameScreen._shakeDuration;\\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\"","vertJS:func":"\"// Calculation\\n// Original Formula by Aries of Sheratan\\nconst power = $gameScreen._shakePower * 0.75;\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\nconst duration = $gameScreen._shakeDuration;\\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\""}
 *
 * @param TitleCommandList:arraystruct
 * @text Title Command List
 * @type struct<Command>[]
 * @desc Window commands used by the title screen.
 * Add new commands here.
 * @default ["{\"Symbol:str\":\"newGame\",\"TextStr:str\":\"Untitled\",\"TextJS:func\":\"\\\"return TextManager.newGame;\\\"\",\"ShowJS:func\":\"\\\"return true;\\\"\",\"EnableJS:func\":\"\\\"return true;\\\"\",\"ExtJS:func\":\"\\\"return null;\\\"\",\"CallHandlerJS:func\":\"\\\"SceneManager._scene.commandNewGame();\\\"\"}","{\"Symbol:str\":\"continue\",\"TextStr:str\":\"Untitled\",\"TextJS:func\":\"\\\"return TextManager.continue_;\\\"\",\"ShowJS:func\":\"\\\"return true;\\\"\",\"EnableJS:func\":\"\\\"return DataManager.isAnySavefileExists();\\\"\",\"ExtJS:func\":\"\\\"return null;\\\"\",\"CallHandlerJS:func\":\"\\\"SceneManager._scene.commandContinue();\\\"\"}","{\"Symbol:str\":\"options\",\"TextStr:str\":\"Untitled\",\"TextJS:func\":\"\\\"return TextManager.options;\\\"\",\"ShowJS:func\":\"\\\"return true;\\\"\",\"EnableJS:func\":\"\\\"return true;\\\"\",\"ExtJS:func\":\"\\\"return null;\\\"\",\"CallHandlerJS:func\":\"\\\"SceneManager._scene.commandOptions();\\\"\"}","{\"Symbol:str\":\"shutdown\",\"TextStr:str\":\"Untitled\",\"TextJS:func\":\"\\\"return TextManager.gameEnd;\\\"\",\"ShowJS:func\":\"\\\"return Utils.isNwjs();\\\"\",\"EnableJS:func\":\"\\\"return true;\\\"\",\"ExtJS:func\":\"\\\"return null;\\\"\",\"CallHandlerJS:func\":\"\\\"SceneManager.exit();\\\\n\\\\n// Note!\\\\n// Do NOT use this command with mobile devices or\\\\n// browser games. All it does is cause the game to\\\\n// display a blank, black canvas which the player\\\\n// is unable to do anything with. It does NOT force\\\\n// close the browser tab nor the app.\\\"\"}"]
 *
 * @param TitlePicButtons:arraystruct
 * @text Title Picture Buttons
 * @type struct<TitlePictureButton>[]
 * @desc Buttons that can be inserted into the title screen.
 * Add new title buttons here.
 * @default []
 *
 * @param UI:struct
 * @text UI Settings
 * @type struct<UI>
 * @desc Change up various in-game UI aspects.
 * @default {"UIArea":"","FadeSpeed:num":"24","BoxMargin:num":"4","CommandWidth:num":"240","BottomHelp:eval":"false","RightMenus:eval":"true","ShowButtons:eval":"true","cancelShowButton:eval":"true","menuShowButton:eval":"true","pagedownShowButton:eval":"true","numberShowButton:eval":"true","ButtonHeight:num":"52","BottomButtons:eval":"false","SideButtons:eval":"true","LargerResolution":"","RepositionActors:eval":"true","RepositionEnemies:eval":"true","MenuObjects":"","LvExpGauge:eval":"true","ParamArrow:str":"→","TextCodeSupport":"","TextCodeClassNames:eval":"true","TextCodeNicknames:eval":"true"}
 *
 * @param Window:struct
 * @text Window Settings
 * @type struct<Window>
 * @desc Adjust various in-game window settings.
 * @default {"WindowDefaults":"","EnableMasking:eval":"false","LineHeight:num":"36","SelectableItems":"","ShowItemBackground:eval":"true","ItemHeight:num":"8","DrawItemBackgroundJS:func":"\"const rect = arguments[0];\\nconst c1 = ColorManager.itemBackColor1();\\nconst c2 = ColorManager.itemBackColor2();\\nconst x = rect.x;\\nconst y = rect.y;\\nconst w = rect.width;\\nconst h = rect.height;\\nthis.contentsBack.gradientFillRect(x, y, w, h, c1, c2, true);\\nthis.contentsBack.strokeRect(x, y, w, h, c1);\"","ItemPadding:num":"8","BackOpacity:num":"192","TranslucentOpacity:num":"160","OpenSpeed:num":"32","ColSpacing:num":"8","RowSpacing:num":"4"}
 *
 * @param jsQuickFunc:arraystruct
 * @text JS: Quick Functions
 * @type struct<jsQuickFunc>[]
 * @desc Create quick JavaScript functions available from the
 * global namespace. Use with caution and moderation!!!
 * @default ["{\"FunctionName:str\":\"Example\",\"CodeJS:json\":\"\\\"// Insert this as a function anywhere you can input code\\\\n// such as Script Calls or Conditional Branch Scripts.\\\\n\\\\n// Process Code\\\\nreturn 'Example';\\\"\"}","{\"FunctionName:str\":\"Bad  Code  Name\",\"CodeJS:json\":\"\\\"// If a function name has spaces in them, the spaces will\\\\n// be removed. \\\\\\\"Bad  Code  Name\\\\\\\" becomes \\\\\\\"BadeCodeName\\\\\\\".\\\\n\\\\n// Process Code\\\\nOhNoItsBadCode()\\\\n\\\\n// If a function has bad code, a fail safe will catch the\\\\n// error and display it in the console.\\\"\"}","{\"FunctionName:str\":\"RandomNumber\",\"CodeJS:json\":\"\\\"// This generates a random number from 0 to itself.\\\\n// Example: RandomNumber(10)\\\\n\\\\n// Process Code\\\\nconst number = (arguments[0] || 0) + 1;\\\\nreturn Math.floor(number * Math.random());\\\"\"}","{\"FunctionName:str\":\"RandomBetween\",\"CodeJS:json\":\"\\\"// This generates a random number between two arguments.\\\\n// Example: RandomNumber(5, 10)\\\\n\\\\n// Process Code\\\\nlet min = Math.min(arguments[0] || 0, arguments[1] || 0);\\\\nlet max = Math.max(arguments[0] || 0, arguments[1] || 0);\\\\nreturn Math.floor(Math.random() * (max - min + 1) + min);\\\"\"}","{\"FunctionName:str\":\"RandomFrom\",\"CodeJS:json\":\"\\\"// Selects a number from the list of inserted numbers.\\\\n// Example: RandomFrom(5, 10, 15, 20)\\\\n\\\\n// Process Code\\\\nreturn arguments[Math.randomInt(arguments.length)];\\\"\"}"]
 *
 * @param BreakEnd1
 * @text --------------------------
 * @default ----------------------------------
 *
 * @param End Of
 * @default Plugin Parameters
 *
 * @param BreakEnd2
 * @text --------------------------
 * @default ----------------------------------
 *
 */
/* ----------------------------------------------------------------------------
 * Quality of Life Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~QoLSettings:
 *
 * @param PlayTest
 * @text Play Test
 *
 * @param NewGameBoot:eval
 * @text New Game on Boot
 * @parent PlayTest
 * @type boolean
 * @on Start New Game
 * @off Keep Title Screen
 * @desc Automatically start a new game on Play Test?
 * Only enabled during Play Test.
 * @default false
 *
 * @param ForceNoPlayTest:eval
 * @text No Play Test Mode
 * @parent PlayTest
 * @type boolean
 * @on Cancel Play Test
 * @off Keep Play Test
 * @desc Force the game to be out of Play Test mode when play testing.
 * @default false
 *
 * @param OpenConsole:eval
 * @text Open Console on Boot
 * @parent PlayTest
 * @type boolean
 * @on Open
 * @off Don't Open
 * @desc Open the Debug Console upon booting up your game?
 * Only enabled during Play Test.
 * @default true
 *
 * @param F6key:eval
 * @text F6: Toggle Sound
 * @parent PlayTest
 * @type boolean
 * @on Enable
 * @off Don't
 * @desc F6 Key Function: Turn on all sound to 100% or to 0%,
 * toggling between the two.
 * @default true
 *
 * @param F7key:eval
 * @text F7: Toggle Fast Mode
 * @parent PlayTest
 * @type boolean
 * @on Enable
 * @off Don't
 * @desc F7 Key Function: Toggle fast mode.
 * @default true
 *
 * @param NewGameCommonEvent:num
 * @text NewGame > CommonEvent
 * @parent PlayTest
 * @type common_event
 * @desc Runs a common event each time a new game during play test
 * session is started.
 * @default 0
 *
 * @param BattleTest
 * @text Battle Test
 *
 * @param BTestItems:eval
 * @text Add Item Type
 * @parent BattleTest
 * @type boolean
 * @on Add
 * @off Don't
 * @desc Add copies of each database item?
 * Effective only during battle test.
 * @default true
 *
 * @param BTestWeapons:eval
 * @text Add Weapon Type
 * @parent BattleTest
 * @type boolean
 * @on Add
 * @off Don't
 * @desc Add copies of each database weapon?
 * Effective only during battle test.
 * @default true
 *
 * @param BTestArmors:eval
 * @text Add Armor Type
 * @parent BattleTest
 * @type boolean
 * @on Add
 * @off Don't
 * @desc Add copies of each database armor?
 * Effective only during battle test.
 * @default true
 *
 * @param BTestAddedQuantity:num
 * @text Added Quantity
 * @parent BattleTest
 * @type number
 * @min 1
 * @desc Determines how many items are added during a battle test instead of the maximum amount.
 * @default 90
 *
 * @param DigitGrouping
 * @text Digit Grouping
 *
 * @param DigitGroupingStandardText:eval
 * @text Standard Text
 * @parent DigitGrouping
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Make numbers like 1234567 appear like 1,234,567 for
 * standard text inside windows?
 * @default true
 *
 * @param DigitGroupingExText:eval
 * @text Ex Text
 * @parent DigitGrouping
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Make numbers like 1234567 appear like 1,234,567 for
 * ex text, written through drawTextEx (like messages)?
 * @default true
 *
 * @param DigitGroupingDamageSprites:eval
 * @text Damage Sprites
 * @parent DigitGrouping
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Make numbers like 1234567 appear like 1,234,567 for
 * in-battle damage sprites?
 * @default true
 *
 * @param DigitGroupingGaugeSprites:eval
 * @text Gauge Sprites
 * @parent DigitGrouping
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Make numbers like 1234567 appear like 1,234,567 for
 * visible gauge sprites such as HP, MP, and TP gauges?
 * @default true
 *
 * @param DigitGroupingLocale:str
 * @text Country/Locale
 * @parent DigitGrouping
 * @type combo
 * @option ar-SA
 * @option bn-BD
 * @option bn-IN
 * @option cs-CZ
 * @option da-DK
 * @option de-AT
 * @option de-CH
 * @option de-DE
 * @option el-GR
 * @option en-AU
 * @option en-CA
 * @option en-GB
 * @option en-IE
 * @option en-IN
 * @option en-NZ
 * @option en-US
 * @option en-ZA
 * @option es-AR
 * @option es-CL
 * @option es-CO
 * @option es-ES
 * @option es-MX
 * @option es-US
 * @option fi-FI
 * @option fr-BE
 * @option fr-CA
 * @option fr-CH
 * @option fr-FR
 * @option he-IL
 * @option hi-IN
 * @option hu-HU
 * @option id-ID
 * @option it-CH
 * @option it-IT
 * @option jp-JP
 * @option ko-KR
 * @option nl-BE
 * @option nl-NL
 * @option no-NO
 * @option pl-PL
 * @option pt-BR
 * @option pt-PT
 * @option ro-RO
 * @option ru-RU
 * @option sk-SK
 * @option sv-SE
 * @option ta-IN
 * @option ta-LK
 * @option th-TH
 * @option tr-TR
 * @option zh-CN
 * @option zh-HK
 * @option zh-TW
 * @desc Base the digit grouping on which country/locale?
 * @default en-US
 *
 * @param PlayerBenefit
 * @text Player Benefit
 *
 * @param EncounterRateMinimum:num
 * @text Encounter Rate Min
 * @parent PlayerBenefit
 * @min 1
 * @desc Minimum number of steps the player can take without any random encounters.
 * @default 10
 *
 * @param EscapeAlways:eval
 * @text Escape Always
 * @parent PlayerBenefit
 * @type boolean
 * @on Always
 * @off Default
 * @desc If the player wants to escape a battle, let them escape the battle with 100% chance.
 * @default true
 *
 * @param ImprovedAccuracySystem:eval
 * @text Accuracy Formula
 * @parent PlayerBenefit
 * @type boolean
 * @on Improve
 * @off Default
 * @desc Accuracy formula calculation change to
 * Skill Hit% * (User HIT - Target EVA) for better results.
 * @default true
 *
 * @param AccuracyBoost:eval
 * @text Accuracy Boost
 * @parent PlayerBenefit
 * @type boolean
 * @on Boost
 * @off Default
 * @desc Boost HIT and EVA rates in favor of the player.
 * @default true
 *
 * @param LevelUpFullHp:eval
 * @text Level Up -> Full HP
 * @parent PlayerBenefit
 * @type boolean
 * @on Heal
 * @off Default
 * @desc Recovers full HP when an actor levels up.
 * @default true
 *
 * @param LevelUpFullMp:eval
 * @text Level Up -> Full MP
 * @parent PlayerBenefit
 * @type boolean
 * @on Heal
 * @off Default
 * @desc Recovers full MP when an actor levels up.
 * @default true
 *
 * @param Misc
 * @text Misc
 *
 * @param AnimationMirrorOffset:eval
 * @text Ani: Mirror Offset
 * @parent Misc
 * @type boolean
 * @on Mirror
 * @off Don't Mirror
 * @desc When animations are mirrored,
 * mirror their Offset X values, too.
 * @default false
 *
 * @param AntiZoomPictures:eval
 * @text Anti-Zoom Pictures
 * @parent Misc
 * @type boolean
 * @on Anti-Zoom
 * @off Normal
 * @desc If on, prevents pictures from being affected by zoom.
 * @default true
 *
 * @param AutoStretch:str
 * @text Auto-Stretch
 * @parent Misc
 * @type select
 * @option Default
 * @value default
 * @option Stretch
 * @value stretch
 * @option Normal
 * @value normal
 * @desc Automatically stretch the game to fit the size of the client?
 * @default default
 *
 * @param FontShadows:eval
 * @text Font Shadows
 * @parent Misc
 * @type boolean
 * @on Shadows
 * @off Outlines
 * @desc If on, text uses shadows instead of outlines.
 * @default false
 *
 * @param FontSmoothing:eval
 * @text Font Smoothing
 * @parent Misc
 * @type boolean
 * @on Smooth
 * @off None
 * @desc If on, smoothes fonts shown in-game.
 * @default true
 *
 * @param KeyItemProtect:eval
 * @text Key Item Protection
 * @parent Misc
 * @type boolean
 * @on Unsellable
 * @off Sellable
 * @desc If on, prevents Key Items from being able to be sold and from being able to be consumed.
 * @default true
 *
 * @param ModernControls:eval
 * @text Modern Controls
 * @parent Misc
 * @type boolean
 * @on Enable
 * @off Default
 * @desc If on, allows usage of the Home/End buttons as well as other modern configs. Affects other VisuStella plugins.
 * @default true
 *
 * @param NewGameCommonEventAll:num
 * @text NewGame > CommonEvent
 * @parent Misc
 * @type common_event
 * @desc Runs a common event each time a new game during any session is started.
 * @default 0
 *
 * @param NoTileShadows:eval
 * @text No Tile Shadows
 * @parent Misc
 * @type boolean
 * @on Disable Tile Shadows
 * @off Default
 * @desc Removes tile shadows from being displayed in-game.
 * @default false
 *
 * @param PixelateImageRendering:eval
 * @text Pixel Image Rendering
 * @parent Misc
 * @type boolean
 * @on Pixelate
 * @off Smooth
 * @desc If on, pixelates the image rendering (for pixel games).
 * @default false
 *
 * @param RequireFocus:eval
 * @text Require Focus?
 * @parent Misc
 * @type boolean
 * @on Require
 * @off No Requirement
 * @desc Requires the game to be focused? If the game isn't
 * focused, it will pause if it's not the active window.
 * @default true
 *
 * @param SmartEventCollisionPriority:eval
 * @text Smart Event Collision
 * @parent Misc
 * @type boolean
 * @on Only Same Level
 * @off Default
 * @desc Makes events only able to collide with one another if they're 'Same as characters' priority.
 * @default true
 *
 */
/* ----------------------------------------------------------------------------
 * Color Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~Color:
 *
 * @param BasicColors
 * @text Basic Colors
 *
 * @param ColorNormal:str
 * @text Normal
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 0
 *
 * @param ColorSystem:str
 * @text System
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 16
 *
 * @param ColorCrisis:str
 * @text Crisis
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 17
 *
 * @param ColorDeath:str
 * @text Death
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 18
 *
 * @param ColorGaugeBack:str
 * @text Gauge Back
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 19
 *
 * @param ColorHPGauge1:str
 * @text HP Gauge 1
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 20
 *
 * @param ColorHPGauge2:str
 * @text HP Gauge 2
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 21
 *
 * @param ColorMPGauge1:str
 * @text MP Gauge 1
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 22
 *
 * @param ColorMPGauge2:str
 * @text MP Gauge 2
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 23
 *
 * @param ColorMPCost:str
 * @text MP Cost
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 23
 *
 * @param ColorPowerUp:str
 * @text Power Up
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 24
 *
 * @param ColorPowerDown:str
 * @text Power Down
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 25
 *
 * @param ColorCTGauge1:str
 * @text CT Gauge 1
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 26
 *
 * @param ColorCTGauge2:str
 * @text CT Gauge 2
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 27
 *
 * @param ColorTPGauge1:str
 * @text TP Gauge 1
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 28
 *
 * @param ColorTPGauge2:str
 * @text TP Gauge 2
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 29
 *
 * @param ColorTPCost:str
 * @text TP Cost
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 29
 *
 * @param ColorPending:str
 * @text Pending Color
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default #2a847d
 *
 * @param ColorExpGauge1:str
 * @text EXP Gauge 1
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 30
 *
 * @param ColorExpGauge2:str
 * @text EXP Gauge 2
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 31
 *
 * @param ColorMaxLvGauge1:str
 * @text MaxLv Gauge 1
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 14
 *
 * @param ColorMaxLvGauge2:str
 * @text MaxLv Gauge 2
 * @parent BasicColors
 * @desc Use #rrggbb for custom colors or regular numbers
 * for text colors from the Window Skin.
 * @default 6
 *
 * @param AlphaColors
 * @text Alpha Colors
 *
 * @param OutlineColor:str
 * @text Window Font Outline
 * @parent AlphaColors
 * @desc Colors with a bit of alpha settings.
 * Format rgba(0-255, 0-255, 0-255, 0-1)
 * @default rgba(0, 0, 0, 0.6)
 *
 * @param OutlineColorGauge:str
 * @text Gauge Number Outline
 * @parent AlphaColors
 * @desc Colors with a bit of alpha settings.
 * Format rgba(0-255, 0-255, 0-255, 0-1)
 * @default rgba(0, 0, 0, 1.0)
 *
 * @param DimColor1:str
 * @text Dim Color 1
 * @parent AlphaColors
 * @desc Colors with a bit of alpha settings.
 * Format rgba(0-255, 0-255, 0-255, 0-1)
 * @default rgba(0, 0, 0, 0.6)
 *
 * @param DimColor2:str
 * @text Dim Color 2
 * @parent AlphaColors
 * @desc Colors with a bit of alpha settings.
 * Format rgba(0-255, 0-255, 0-255, 0-1)
 * @default rgba(0, 0, 0, 0)
 *
 * @param ItemBackColor1:str
 * @text Item Back Color 1
 * @parent AlphaColors
 * @desc Colors with a bit of alpha settings.
 * Format rgba(0-255, 0-255, 0-255, 0-1)
 * @default rgba(32, 32, 32, 0.5)
 *
 * @param ItemBackColor2:str
 * @text Item Back Color 2
 * @parent AlphaColors
 * @desc Colors with a bit of alpha settings.
 * Format rgba(0-255, 0-255, 0-255, 0-1)
 * @default rgba(0, 0, 0, 0.5)
 *
 * @param ConditionalColors
 * @text Conditional Colors
 *
 * @param ActorHPColor:func
 * @text JS: Actor HP Color
 * @type note
 * @parent ConditionalColors
 * @desc Code used for determining what HP color to use for actors.
 * @default "// Set the variables used in this function.\nlet actor = arguments[0];\n\n// Check if the actor exists. If not, return normal.\nif (!actor) {\n    return this.normalColor();\n\n// If the actor is dead, return death color.\n} else if (actor.isDead()) {\n    return this.deathColor();\n\n// If the actor is dying, return crisis color.\n} else if (actor.isDying()) {\n    return this.crisisColor();\n\n// Otherwise, return the normal color.\n} else {\n    return this.normalColor();\n}"
 *
 * @param ActorMPColor:func
 * @text JS: Actor MP Color
 * @type note
 * @parent ConditionalColors
 * @desc Code used for determining what MP color to use for actors.
 * @default "// Set the variables used in this function.\nlet actor = arguments[0];\n\n// Check if the actor exists. If not, return normal.\nif (!actor) {\n    return this.normalColor();\n\n// If MP rate is below 25%, return crisis color.\n} else if (actor.mpRate() < 0.25) {\n    return this.crisisColor();\n\n// Otherwise, return the normal color.\n} else {\n    return this.normalColor();\n}"
 *
 * @param ActorTPColor:func
 * @text JS: Actor TP Color
 * @type note
 * @parent ConditionalColors
 * @desc Code used for determining what TP color to use for actors.
 * @default "// Set the variables used in this function.\nlet actor = arguments[0];\n\n// Check if the actor exists. If not, return normal.\nif (!actor) {\n    return this.normalColor();\n\n// If TP rate is below 25%, return crisis color.\n} else if (actor.tpRate() < 0.25) {\n    return this.crisisColor();\n\n// Otherwise, return the normal color.\n} else {\n    return this.normalColor();\n}"
 *
 * @param ParamChange:func
 * @text JS: Parameter Change
 * @type note
 * @parent ConditionalColors
 * @desc Code used for determining whatcolor to use for parameter changes.
 * @default "// Set the variables used in this function.\nlet change = arguments[0];\n\n// If a positive change, use power up color.\nif (change > 0) {\n    return this.powerUpColor();\n\n// If a negative change, use power down color.\n} else if (change < 0) {\n    return this.powerDownColor();\n\n// Otherwise, return the normal color.\n} else {\n    return this.normalColor();\n}"
 *
 * @param DamageColor:func
 * @text JS: Damage Colors
 * @type note
 * @parent ConditionalColors
 * @desc Code used for determining what color to use for damage types.
 * @default "// Set the variables used in this function.\nlet colorType = arguments[0];\n\n// Check the value of the color type\n// and return an appropriate color.\nswitch (colorType) {\n\n    case 0: // HP damage\n        return \"#ffffff\";\n\n    case 1: // HP recover\n        return \"#b9ffb5\";\n\n    case 2: // MP damage\n        return \"#bb88bb\";\n\n    case 3: // MP recover\n        return \"#80b0ff\";\n\n    default:\n        return \"#808080\";\n}"
 */
/* ----------------------------------------------------------------------------
 * Gold Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~Gold:
 *
 * @param GoldMax:num
 * @text Gold Max
 * @type num
 * @min 1
 * @desc Maximum amount of Gold the party can hold.
 * Default 99999999
 * @default 99999999
 *
 * @param GoldFontSize:num
 * @text Gold Font Size
 * @type number
 * @min 1
 * @desc Font size used for displaying Gold inside Gold Windows.
 * Default: 26
 * @default 24
 *
 * @param GoldIcon:num
 * @text Gold Icon
 * @desc Icon used to represent Gold.
 * Use 0 for no icon.
 * @default 314
 *
 * @param GoldOverlap:str
 * @text Gold Overlap
 * @desc Text used too much Gold to fit in the window.
 * @default A Lot
 *
 * @param ItemStyle:eval
 * @text Item Style
 * @type boolean
 * @on Enable
 * @off Normal
 * @desc Draw gold in the item style?
 * ie: Icon, Label, Value
 * @default true
 *
 */
/* ----------------------------------------------------------------------------
 * Image Loading Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~ImgLoad:
 *
 * @param animations:arraystr
 * @text img/animations/
 * @type file[]
 * @dir img/animations/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param battlebacks1:arraystr
 * @text img/battlebacks1/
 * @type file[]
 * @dir img/battlebacks1/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param battlebacks2:arraystr
 * @text img/battlebacks2/
 * @type file[]
 * @dir img/battlebacks2/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param characters:arraystr
 * @text img/characters/
 * @type file[]
 * @dir img/characters/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param enemies:arraystr
 * @text img/enemies/
 * @type file[]
 * @dir img/enemies/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param faces:arraystr
 * @text img/faces/
 * @type file[]
 * @dir img/faces/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param parallaxes:arraystr
 * @text img/parallaxes/
 * @type file[]
 * @dir img/parallaxes/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param pictures:arraystr
 * @text img/pictures/
 * @type file[]
 * @dir img/pictures/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param sv_actors:arraystr
 * @text img/sv_actors/
 * @type file[]
 * @dir img/sv_actors/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param sv_enemies:arraystr
 * @text img/sv_enemies/
 * @type file[]
 * @dir img/sv_enemies/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param system:arraystr
 * @text img/system/
 * @type file[]
 * @dir img/system/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default ["Balloon","IconSet"]
 *
 * @param tilesets:arraystr
 * @text img/tilesets/
 * @type file[]
 * @dir img/tilesets/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param titles1:arraystr
 * @text img/titles1/
 * @type file[]
 * @dir img/titles1/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 * @param titles2:arraystr
 * @text img/titles2/
 * @type file[]
 * @dir img/titles2/
 * @desc Which files do you wish to load from this directory upon
 * starting up the game?
 * @default []
 *
 */
/* ----------------------------------------------------------------------------
 * Keyboard Input Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~KeyboardInput:
 *
 * @param Controls
 *
 * @param WASD:eval
 * @text WASD Movement
 * @parent Controls
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Enables or disables WASD movement for your game project.
 * Moves the W page down button to E.
 * @default false
 *
 * @param DashToggleR:eval
 * @text R Button: Dash Toggle
 * @parent Controls
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Enables or disables R button as an Always Dash option toggle.
 * @default false
 *
 * @param NameInput
 * @text Name Input
 *
 * @param EnableNameInput:eval
 * @text Enable?
 * @parent NameInput
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Enables keyboard input for name entry.
 * Only tested with English keyboards.
 * @default true
 * 
 * @param DefaultMode:str
 * @text Default Mode
 * @parent NameInput
 * @type select
 * @option Default - Uses Arrow Keys to select letters.
 * @value default
 * @option Keyboard - Uses Keyboard to type in letters.
 * @value keyboard
 * @desc Select default mode when entering the scene.
 * @default keyboard
 *
 * @param QwertyLayout:eval
 * @text QWERTY Layout
 * @parent NameInput
 * @type boolean
 * @on QWERTY Layout
 * @off ABCDEF Layout
 * @desc Uses the QWERTY layout for manual entry.
 * @default true
 *
 * @param NameInputMessage:eval
 * @text Keyboard Message
 * @parent NameInput
 * @type note
 * @desc The message displayed when allowing keyboard entry.
 * You may use text codes here.
 * @default "Type in this character's name.\nPress \\c[5]ENTER\\c[0] when you're done.\n\n-or-\n\nPress \\c[5]arrow keys\\c[0]/\\c[5]TAB\\c[0] to switch\nto manual character entry.\n\nPress \\c[5]ESC\\c[0]/\\c[5]TAB\\c[0] to use to keyboard."
 * 
 * @param BannedWords:arraystr
 * @text Banned Words
 * @parent NameInput
 * @type string[]
 * @desc Players cannot use these words for names.
 * These include words inside the names.
 * @default []
 *
 * @param NumberInput
 * @text Number Input
 *
 * @param EnableNumberInput:eval
 * @text Enable?
 * @parent NumberInput
 * @type boolean
 * @on Enable
 * @off Disable
 * @desc Enables keyboard input for number entry.
 * Only tested with English keyboards.
 * @default true
 *
 * @param ButtonAssist
 * @text Button Assist
 * 
 * @param Keyboard:str
 * @text Switch To Keyboard
 * @parent ButtonAssist
 * @desc Text used to describe the keyboard switch.
 * @default Keyboard
 * 
 * @param Manual:str
 * @text Switch To Manual
 * @parent ButtonAssist
 * @desc Text used to describe the manual entry switch.
 * @default Manual
 *
 */
/* ----------------------------------------------------------------------------
 * Menu Background Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~MenuBg:
 *
 * @param Scene_Menu:struct
 * @text Scene_Menu
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Item:struct
 * @text Scene_Item
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Skill:struct
 * @text Scene_Skill
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Equip:struct
 * @text Scene_Equip
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Status:struct
 * @text Scene_Status
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Options:struct
 * @text Scene_Options
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Save:struct
 * @text Scene_Save
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Load:struct
 * @text Scene_Load
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_GameEnd:struct
 * @text Scene_GameEnd
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"128","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Shop:struct
 * @text Scene_Shop
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Name:struct
 * @text Scene_Name
 * @type struct<BgSettings>
 * @desc The individual background settings for this scene.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 * @param Scene_Unlisted:struct
 * @text Scene_Unlisted
 * @type struct<BgSettings>
 * @desc The individual background settings for any scenes that aren't listed here.
 * @default {"SnapshotOpacity:num":"192","BgFilename1:str":"","BgFilename2:str":""}
 *
 */
/* ----------------------------------------------------------------------------
 * Background Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~BgSettings:
 *
 * @param SnapshotOpacity:num
 * @text Snapshop Opacity
 * @type number
 * @min 0
 * @max 255
 * @desc Snapshot opacity for the scene.
 * @default 192
 *
 * @param BgFilename1:str
 * @text Background 1
 * @type file
 * @dir img/titles1/
 * @desc Filename used for the bottom background image.
 * Leave empty if you don't wish to use one.
 * @default 
 *
 * @param BgFilename2:str
 * @text Background 2
 * @type file
 * @dir img/titles2/
 * @desc Filename used for the upper background image.
 * Leave empty if you don't wish to use one.
 * @default 
 *
 */
/* ----------------------------------------------------------------------------
 * Menu Button Assist Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~ButtonAssist:
 *
 * @param General
 *
 * @param Enable:eval
 * @text Enable
 * @parent General
 * @type boolean
 * @on Use
 * @off Don't Use
 * @desc Enable the Menu Button Assist Window.
 * @default true
 *
 * @param Location:str
 * @text Location
 * @parent General
 * @type select
 * @option Top of Screen
 * @value top
 * @option Bottom of Screen
 * @value bottom
 * @desc Determine the location of the Button Assist Window.
 * Requires Plugin Parameters => UI => Side Buttons ON.
 * @default bottom
 *
 * @param BgType:num
 * @text Background Type
 * @parent General
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param Text
 *
 * @param TextFmt:str
 * @text Text Format
 * @parent Text
 * @desc Format on how the buttons are displayed.
 * Text codes allowed. %1 - Key, %2 - Text
 * @default %1:%2
 *
 * @param MultiKeyFmt:str
 * @text Multi-Key Format
 * @parent Text
 * @desc Format for actions with multiple keys.
 * Text codes allowed. %1 - Key 1, %2 - Key 2
 * @default %1/%2
 *
 * @param OkText:str
 * @text OK Text
 * @parent Text
 * @desc Default text used to display OK Key Action.
 * Text codes allowed.
 * @default Select
 *
 * @param CancelText:str
 * @text Cancel Text
 * @parent Text
 * @desc Default text used to display Cancel Key Action.
 * Text codes allowed.
 * @default Back
 *
 * @param SwitchActorText:str
 * @text Switch Actor Text
 * @parent Text
 * @desc Default text used to display Switch Actor Action.
 * Text codes allowed.
 * @default Switch Ally
 *
 * @param Keys
 *
 * @param KeyUnlisted:str
 * @text Key: Unlisted Format
 * @parent Keys
 * @desc If a key is not listed below, use this format.
 * Text codes allowed. %1 - Key
 * @default \}❪%1❫\{
 *
 * @param KeyUP:str
 * @text Key: Up
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default ^
 *
 * @param KeyDOWN:str
 * @text Key: Down
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default v
 *
 * @param KeyLEFT:str
 * @text Key: Left
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default <<
 *
 * @param KeyRIGHT:str
 * @text Key: Right
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default >>
 *
 * @param KeySHIFT:str
 * @text Key: Shift
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default \}❪SHIFT❫\{
 *
 * @param KeyTAB:str
 * @text Key: Tab
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default \}❪TAB❫\{
 *
 * @param KeyA:str
 * @text Key: A
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default A
 *
 * @param KeyB:str
 * @text Key: B
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default B
 *
 * @param KeyC:str
 * @text Key: C
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default C
 *
 * @param KeyD:str
 * @text Key: D
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default D
 *
 * @param KeyE:str
 * @text Key: E
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default E
 *
 * @param KeyF:str
 * @text Key: F
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default F
 *
 * @param KeyG:str
 * @text Key: G
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default G
 *
 * @param KeyH:str
 * @text Key: H
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default H
 *
 * @param KeyI:str
 * @text Key: I
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default I
 *
 * @param KeyJ:str
 * @text Key: J
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default J
 *
 * @param KeyK:str
 * @text Key: K
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default K
 *
 * @param KeyL:str
 * @text Key: L
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default L
 *
 * @param KeyM:str
 * @text Key: M
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default M
 *
 * @param KeyN:str
 * @text Key: N
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default N
 *
 * @param KeyO:str
 * @text Key: O
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default O
 *
 * @param KeyP:str
 * @text Key: P
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default P
 *
 * @param KeyQ:str
 * @text Key: Q
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default Q
 *
 * @param KeyR:str
 * @text Key: R
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default R
 *
 * @param KeyS:str
 * @text Key: S
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default S
 *
 * @param KeyT:str
 * @text Key: T
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default T
 *
 * @param KeyU:str
 * @text Key: U
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default U
 *
 * @param KeyV:str
 * @text Key: V
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default V
 *
 * @param KeyW:str
 * @text Key: W
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default W
 *
 * @param KeyX:str
 * @text Key: X
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default X
 *
 * @param KeyY:str
 * @text Key: Y
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default Y
 *
 * @param KeyZ:str
 * @text Key: Z
 * @parent Keys
 * @desc How this key is shown in-game.
 * Text codes allowed.
 * @default Z
 *
 */
/* ----------------------------------------------------------------------------
 * Menu Layout Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~MenuLayout:
 *
 * @param Title:struct
 * @text Scene_Title
 * @parent SceneSettings
 * @type struct<Title>
 * @desc Various options on adjusting the Title Scene.
 * @default {"TitleScreen":"","DocumentTitleFmt:str":"%1: %2 - Version %3","Subtitle:str":"Subtitle","Version:str":"0.00","drawGameTitle:func":"\"const x = 20;\\nconst y = Graphics.height / 4;\\nconst maxWidth = Graphics.width - x * 2;\\nconst text = $dataSystem.gameTitle;\\nconst bitmap = this._gameTitleSprite.bitmap;\\nbitmap.fontFace = $gameSystem.mainFontFace();\\nbitmap.outlineColor = \\\"black\\\";\\nbitmap.outlineWidth = 8;\\nbitmap.fontSize = 72;\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\"center\\\");\"","drawGameSubtitle:func":"\"const x = 20;\\nconst y = Graphics.height / 4 + 72;\\nconst maxWidth = Graphics.width - x * 2;\\nconst text = Scene_Title.subtitle;\\nconst bitmap = this._gameTitleSprite.bitmap;\\nbitmap.fontFace = $gameSystem.mainFontFace();\\nbitmap.outlineColor = \\\"black\\\";\\nbitmap.outlineWidth = 6;\\nbitmap.fontSize = 48;\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\"center\\\");\"","drawGameVersion:func":"\"const bitmap = this._gameTitleSprite.bitmap;\\nconst x = 0;\\nconst y = Graphics.height - 20;\\nconst width = Math.round(Graphics.width / 4);\\nconst height = 20;\\nconst c1 = ColorManager.dimColor1();\\nconst c2 = ColorManager.dimColor2();\\nconst text = 'Version ' + Scene_Title.version;\\nbitmap.gradientFillRect(x, y, width, height, c1, c2);\\nbitmap.fontFace = $gameSystem.mainFontFace();\\nbitmap.outlineColor = \\\"black\\\";\\nbitmap.outlineWidth = 3;\\nbitmap.fontSize = 16;\\nbitmap.drawText(text, x + 4, y, Graphics.width, height, \\\"left\\\");\"","CommandRect:func":"\"const offsetX = $dataSystem.titleCommandWindow.offsetX;\\nconst offsetY = $dataSystem.titleCommandWindow.offsetY;\\nconst rows = this.commandWindowRows();\\nconst width = this.mainCommandWidth();\\nconst height = this.calcWindowHeight(rows, true);\\nconst x = (Graphics.boxWidth - width) / 2 + offsetX;\\nconst y = Graphics.boxHeight - height - 96 + offsetY;\\nreturn new Rectangle(x, y, width, height);\"","ButtonFadeSpeed:num":"4"}
 *
 * @param MainMenu:struct
 * @text Scene_Menu
 * @parent SceneSettings
 * @type struct<MainMenu>
 * @desc Various options on adjusting the Main Menu Scene.
 * @default {"CommandWindow":"","CommandBgType:num":"0","CommandRect:func":"\"const width = this.mainCommandWidth();\\nconst height = this.mainAreaHeight() - this.goldWindowRect().height;\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\nconst y = this.mainAreaTop();\\nreturn new Rectangle(x, y, width, height);\"","GoldWindow":"","GoldBgType:num":"0","GoldRect:func":"\"const rows = 1;\\nconst width = this.mainCommandWidth();\\nconst height = this.calcWindowHeight(rows, true);\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\nconst y = this.mainAreaBottom() - height;\\nreturn new Rectangle(x, y, width, height);\"","StatusWindow":"","StatusBgType:num":"0","StatusRect:func":"\"const width = Graphics.boxWidth - this.mainCommandWidth();\\nconst height = this.mainAreaHeight();\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\nconst y = this.mainAreaTop();\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param ItemMenu:struct
 * @text Scene_Item
 * @parent SceneSettings
 * @type struct<ItemMenu>
 * @desc Various options on adjusting the Item Menu Scene.
 * @default {"HelpWindow":"","HelpBgType:num":"0","HelpRect:func":"\"const x = 0;\\nconst y = this.helpAreaTop();\\nconst width = Graphics.boxWidth;\\nconst height = this.helpAreaHeight();\\nreturn new Rectangle(x, y, width, height);\"","CategoryWindow":"","CategoryBgType:num":"0","CategoryRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst rows = 1;\\nconst width = Graphics.boxWidth;\\nconst height = this.calcWindowHeight(rows, true);\\nreturn new Rectangle(x, y, width, height);\"","ItemWindow":"","ItemBgType:num":"0","ItemRect:func":"\"const x = 0;\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\nconst width = Graphics.boxWidth;\\nconst height = this.mainAreaBottom() - y;\\nreturn new Rectangle(x, y, width, height);\"","ActorWindow":"","ActorBgType:num":"0","ActorRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst width = Graphics.boxWidth;\\nconst height = this.mainAreaHeight();\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param SkillMenu:struct
 * @text Scene_Skill
 * @parent SceneSettings
 * @type struct<SkillMenu>
 * @desc Various options on adjusting the Skill Menu Scene.
 * @default {"HelpWindow":"","HelpBgType:num":"0","HelpRect:func":"\"const x = 0;\\nconst y = this.helpAreaTop();\\nconst width = Graphics.boxWidth;\\nconst height = this.helpAreaHeight();\\nreturn new Rectangle(x, y, width, height);\"","SkillTypeWindow":"","SkillTypeBgType:num":"0","SkillTypeRect:func":"\"const rows = 3;\\nconst width = this.mainCommandWidth();\\nconst height = this.calcWindowHeight(rows, true);\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\nconst y = this.mainAreaTop();\\nreturn new Rectangle(x, y, width, height);\"","StatusWindow":"","StatusBgType:num":"0","StatusRect:func":"\"const width = Graphics.boxWidth - this.mainCommandWidth();\\nconst height = this._skillTypeWindow.height;\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\nconst y = this.mainAreaTop();\\nreturn new Rectangle(x, y, width, height);\"","ItemWindow":"","ItemBgType:num":"0","ItemRect:func":"\"const x = 0;\\nconst y = this._statusWindow.y + this._statusWindow.height;\\nconst width = Graphics.boxWidth;\\nconst height = this.mainAreaHeight() - this._statusWindow.height;\\nreturn new Rectangle(x, y, width, height);\"","ActorWindow":"","ActorBgType:num":"0","ActorRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst width = Graphics.boxWidth;\\nconst height = this.mainAreaHeight();\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param EquipMenu:struct
 * @text Scene_Equip
 * @parent SceneSettings
 * @type struct<EquipMenu>
 * @desc Various options on adjusting the Equip Menu Scene.
 * @default {"HelpWindow":"","HelpBgType:num":"0","HelpRect:func":"\"const x = 0;\\nconst y = this.helpAreaTop();\\nconst width = Graphics.boxWidth;\\nconst height = this.helpAreaHeight();\\nreturn new Rectangle(x, y, width, height);\"","StatusWindow":"","StatusBgType:num":"0","StatusRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst width = this.statusWidth();\\nconst height = this.mainAreaHeight();\\nreturn new Rectangle(x, y, width, height);\"","CommandWindow":"","CommandBgType:num":"0","CommandRect:func":"\"const x = this.statusWidth();\\nconst y = this.mainAreaTop();\\nconst rows = 1;\\nconst width = Graphics.boxWidth - this.statusWidth();\\nconst height = this.calcWindowHeight(rows, true);\\nreturn new Rectangle(x, y, width, height);\"","SlotWindow":"","SlotBgType:num":"0","SlotRect:func":"\"const commandWindowRect = this.commandWindowRect();\\nconst x = this.statusWidth();\\nconst y = commandWindowRect.y + commandWindowRect.height;\\nconst width = Graphics.boxWidth - this.statusWidth();\\nconst height = this.mainAreaHeight() - commandWindowRect.height;\\nreturn new Rectangle(x, y, width, height);\"","ItemWindow":"","ItemBgType:num":"0","ItemRect:func":"\"return this.slotWindowRect();\""}
 *
 * @param StatusMenu:struct
 * @text Scene_Status
 * @parent SceneSettings
 * @type struct<StatusMenu>
 * @desc Various options on adjusting the Status Menu Scene.
 * @default {"ProfileWindow":"","ProfileBgType:num":"0","ProfileRect:func":"\"const width = Graphics.boxWidth;\\nconst height = this.profileHeight();\\nconst x = 0;\\nconst y = this.mainAreaBottom() - height;\\nreturn new Rectangle(x, y, width, height);\"","StatusWindow":"","StatusBgType:num":"0","StatusRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst width = Graphics.boxWidth;\\nconst height = this.statusParamsWindowRect().y - y;\\nreturn new Rectangle(x, y, width, height);\"","StatusParamsWindow":"","StatusParamsBgType:num":"0","StatusParamsRect:func":"\"const width = this.statusParamsWidth();\\nconst height = this.statusParamsHeight();\\nconst x = 0;\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\nreturn new Rectangle(x, y, width, height);\"","StatusEquipWindow":"","StatusEquipBgType:num":"0","StatusEquipRect:func":"\"const width = Graphics.boxWidth - this.statusParamsWidth();\\nconst height = this.statusParamsHeight();\\nconst x = this.statusParamsWidth();\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param OptionsMenu:struct
 * @text Scene_Options
 * @parent SceneSettings
 * @type struct<OptionsMenu>
 * @desc Various options on adjusting the Options Menu Scene.
 * @default {"OptionsWindow":"","OptionsBgType:num":"0","OptionsRect:func":"\"const n = Math.min(this.maxCommands(), this.maxVisibleCommands());\\nconst width = 400;\\nconst height = this.calcWindowHeight(n, true);\\nconst x = (Graphics.boxWidth - width) / 2;\\nconst y = (Graphics.boxHeight - height) / 2;\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param SaveMenu:struct
 * @text Scene_Save
 * @parent SceneSettings
 * @type struct<SaveMenu>
 * @desc Various options on adjusting the Save Menu Scene.
 * @default {"HelpWindow":"","HelpBgType:num":"0","HelpRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst rows = 1;\\nconst width = Graphics.boxWidth;\\nconst height = this.calcWindowHeight(rows, false);\\nreturn new Rectangle(x, y, width, height);\"","ListWindow":"","ListBgType:num":"0","ListRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\nconst width = Graphics.boxWidth;\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param LoadMenu:struct
 * @text Scene_Load
 * @parent SceneSettings
 * @type struct<LoadMenu>
 * @desc Various options on adjusting the Load Menu Scene.
 * @default {"HelpWindow":"","HelpBgType:num":"0","HelpRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst rows = 1;\\nconst width = Graphics.boxWidth;\\nconst height = this.calcWindowHeight(rows, false);\\nreturn new Rectangle(x, y, width, height);\"","ListWindow":"","ListBgType:num":"0","ListRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\nconst width = Graphics.boxWidth;\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param GameEnd:struct
 * @text Scene_GameEnd
 * @parent SceneSettings
 * @type struct<GameEnd>
 * @desc Various options on adjusting the Game End Scene.
 * @default {"CommandList:arraystruct":"[\"{\\\"Symbol:str\\\":\\\"toTitle\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.toTitle;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandToTitle();\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"cancel\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.cancel;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.popScene();\\\\\\\"\\\"}\"]","CommandBgType:num":"0","CommandRect:func":"\"const rows = 2;\\nconst width = this.mainCommandWidth();\\nconst height = this.calcWindowHeight(rows, true);\\nconst x = (Graphics.boxWidth - width) / 2;\\nconst y = (Graphics.boxHeight - height) / 2;\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param ShopMenu:struct
 * @text Scene_Shop
 * @parent SceneSettings
 * @type struct<ShopMenu>
 * @desc Various options on adjusting the Shop Menu Scene.
 * @default {"HelpWindow":"","HelpBgType:num":"0","HelpRect:func":"\"const wx = 0;\\nconst wy = this.helpAreaTop();\\nconst ww = Graphics.boxWidth;\\nconst wh = this.helpAreaHeight();\\nreturn new Rectangle(wx, wy, ww, wh);\"","GoldWindow":"","GoldBgType:num":"0","GoldRect:func":"\"const rows = 1;\\nconst width = this.mainCommandWidth();\\nconst height = this.calcWindowHeight(rows, true);\\nconst x = Graphics.boxWidth - width;\\nconst y = this.mainAreaTop();\\nreturn new Rectangle(x, y, width, height);\"","CommandWindow":"","CommandBgType:num":"0","CommandRect:func":"\"const x = 0;\\nconst y = this.mainAreaTop();\\nconst rows = 1;\\nconst width = this._goldWindow.x;\\nconst height = this.calcWindowHeight(rows, true);\\nreturn new Rectangle(x, y, width, height);\"","DummyWindow":"","DummyBgType:num":"0","DummyRect:func":"\"const x = 0;\\nconst y = this._commandWindow.y + this._commandWindow.height;\\nconst width = Graphics.boxWidth;\\nconst height = this.mainAreaHeight() - this._commandWindow.height;\\nreturn new Rectangle(x, y, width, height);\"","NumberWindow":"","NumberBgType:num":"0","NumberRect:func":"\"const x = 0;\\nconst y = this._dummyWindow.y;\\nconst width = Graphics.boxWidth - this.statusWidth();\\nconst height = this._dummyWindow.height;\\nreturn new Rectangle(x, y, width, height);\"","StatusWindow":"","StatusBgType:num":"0","StatusRect:func":"\"const width = this.statusWidth();\\nconst height = this._dummyWindow.height;\\nconst x = Graphics.boxWidth - width;\\nconst y = this._dummyWindow.y;\\nreturn new Rectangle(x, y, width, height);\"","BuyWindow":"","BuyBgType:num":"0","BuyRect:func":"\"const x = 0;\\nconst y = this._dummyWindow.y;\\nconst width = Graphics.boxWidth - this.statusWidth();\\nconst height = this._dummyWindow.height;\\nreturn new Rectangle(x, y, width, height);\"","CategoryWindow":"","CategoryBgType:num":"0","CategoryRect:func":"\"const x = 0;\\nconst y = this._dummyWindow.y;\\nconst rows = 1;\\nconst width = Graphics.boxWidth;\\nconst height = this.calcWindowHeight(rows, true);\\nreturn new Rectangle(x, y, width, height);\"","SellWindow":"","SellBgType:num":"0","SellRect:func":"\"const x = 0;\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\nconst width = Graphics.boxWidth;\\nconst height =\\n    this.mainAreaHeight() -\\n    this._commandWindow.height -\\n    this._categoryWindow.height;\\nreturn new Rectangle(x, y, width, height);\""}
 *
 * @param NameMenu:struct
 * @text Scene_Name
 * @parent SceneSettings
 * @type struct<NameMenu>
 * @desc Various options on adjusting the Actor Rename Scene.
 * @default {"EditWindow":"","EditBgType:num":"0","EditRect:func":"\"const rows = 9;\\nconst inputWindowHeight = this.calcWindowHeight(rows, true);\\nconst padding = $gameSystem.windowPadding();\\nconst width = 600;\\nconst height = Math.min(ImageManager.faceHeight + padding * 2, this.mainAreaHeight() - inputWindowHeight);\\nconst x = (Graphics.boxWidth - width) / 2;\\nconst y = (this.mainAreaHeight() - (height + inputWindowHeight)) / 2 + this.mainAreaTop();\\nreturn new Rectangle(x, y, width, height);\"","InputWindow":"","InputBgType:num":"0","InputRect:func":"\"const x = this._editWindow.x;\\nconst y = this._editWindow.y + this._editWindow.height;\\nconst rows = 9;\\nconst width = this._editWindow.width;\\nconst height = this.calcWindowHeight(rows, true);\\nreturn new Rectangle(x, y, width, height);\""}
 *
 */
/* ----------------------------------------------------------------------------
 * Main Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~MainMenu:
 *
 * @param CommandWindow
 * @text Command Window
 *
 * @param CommandBgType:num
 * @text Background Type
 * @parent CommandWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param CommandRect:func
 * @text JS: X, Y, W, H
 * @parent CommandWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const width = this.mainCommandWidth();\nconst height = this.mainAreaHeight() - this.goldWindowRect().height;\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\nconst y = this.mainAreaTop();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param GoldWindow
 * @text Gold Window
 *
 * @param GoldBgType:num
 * @text Background Type
 * @parent GoldWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param GoldRect:func
 * @text JS: X, Y, W, H
 * @parent GoldWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const rows = 1;\nconst width = this.mainCommandWidth();\nconst height = this.calcWindowHeight(rows, true);\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\nconst y = this.mainAreaBottom() - height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param StatusWindow
 * @text Status Window
 *
 * @param StatusBgType:num
 * @text Background Type
 * @parent StatusWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param StatusRect:func
 * @text JS: X, Y, W, H
 * @parent StatusWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const width = Graphics.boxWidth - this.mainCommandWidth();\nconst height = this.mainAreaHeight();\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\nconst y = this.mainAreaTop();\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Item Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~ItemMenu:
 *
 * @param HelpWindow
 * @text Help Window
 *
 * @param HelpBgType:num
 * @text Background Type
 * @parent HelpWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param HelpRect:func
 * @text JS: X, Y, W, H
 * @parent HelpWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.helpAreaTop();\nconst width = Graphics.boxWidth;\nconst height = this.helpAreaHeight();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param CategoryWindow
 * @text Category Window
 *
 * @param CategoryBgType:num
 * @text Background Type
 * @parent CategoryWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param CategoryRect:func
 * @text JS: X, Y, W, H
 * @parent CategoryWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst rows = 1;\nconst width = Graphics.boxWidth;\nconst height = this.calcWindowHeight(rows, true);\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ItemWindow
 * @text Item Window
 *
 * @param ItemBgType:num
 * @text Background Type
 * @parent ItemWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ItemRect:func
 * @text JS: X, Y, W, H
 * @parent ItemWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this._categoryWindow.y + this._categoryWindow.height;\nconst width = Graphics.boxWidth;\nconst height = this.mainAreaBottom() - y;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ActorWindow
 * @text Actor Window
 *
 * @param ActorBgType:num
 * @text Background Type
 * @parent ActorWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ActorRect:func
 * @text JS: X, Y, W, H
 * @parent ActorWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst width = Graphics.boxWidth;\nconst height = this.mainAreaHeight();\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Skill Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~SkillMenu:
 *
 * @param HelpWindow
 * @text Help Window
 *
 * @param HelpBgType:num
 * @text Background Type
 * @parent HelpWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param HelpRect:func
 * @text JS: X, Y, W, H
 * @parent HelpWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.helpAreaTop();\nconst width = Graphics.boxWidth;\nconst height = this.helpAreaHeight();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param SkillTypeWindow
 * @text Skill Type Window
 *
 * @param SkillTypeBgType:num
 * @text Background Type
 * @parent SkillTypeWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param SkillTypeRect:func
 * @text JS: X, Y, W, H
 * @parent SkillTypeWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const rows = 3;\nconst width = this.mainCommandWidth();\nconst height = this.calcWindowHeight(rows, true);\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\nconst y = this.mainAreaTop();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param StatusWindow
 * @text Status Window
 *
 * @param StatusBgType:num
 * @text Background Type
 * @parent StatusWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param StatusRect:func
 * @text JS: X, Y, W, H
 * @parent StatusWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const width = Graphics.boxWidth - this.mainCommandWidth();\nconst height = this._skillTypeWindow.height;\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\nconst y = this.mainAreaTop();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ItemWindow
 * @text Item Window
 *
 * @param ItemBgType:num
 * @text Background Type
 * @parent ItemWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ItemRect:func
 * @text JS: X, Y, W, H
 * @parent ItemWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this._statusWindow.y + this._statusWindow.height;\nconst width = Graphics.boxWidth;\nconst height = this.mainAreaHeight() - this._statusWindow.height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ActorWindow
 * @text Actor Window
 *
 * @param ActorBgType:num
 * @text Background Type
 * @parent ActorWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ActorRect:func
 * @text JS: X, Y, W, H
 * @parent ActorWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst width = Graphics.boxWidth;\nconst height = this.mainAreaHeight();\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Equip Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~EquipMenu:
 *
 * @param HelpWindow
 * @text Help Window
 *
 * @param HelpBgType:num
 * @text Background Type
 * @parent HelpWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param HelpRect:func
 * @text JS: X, Y, W, H
 * @parent HelpWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.helpAreaTop();\nconst width = Graphics.boxWidth;\nconst height = this.helpAreaHeight();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param StatusWindow
 * @text Status Window
 *
 * @param StatusBgType:num
 * @text Background Type
 * @parent StatusWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param StatusRect:func
 * @text JS: X, Y, W, H
 * @parent StatusWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst width = this.statusWidth();\nconst height = this.mainAreaHeight();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param CommandWindow
 * @text Command Window
 *
 * @param CommandBgType:num
 * @text Background Type
 * @parent CommandWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param CommandRect:func
 * @text JS: X, Y, W, H
 * @parent CommandWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = this.statusWidth();\nconst y = this.mainAreaTop();\nconst rows = 1;\nconst width = Graphics.boxWidth - this.statusWidth();\nconst height = this.calcWindowHeight(rows, true);\nreturn new Rectangle(x, y, width, height);"
 *
 * @param SlotWindow
 * @text Slot Window
 *
 * @param SlotBgType:num
 * @text Background Type
 * @parent SlotWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param SlotRect:func
 * @text JS: X, Y, W, H
 * @parent SlotWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const commandWindowRect = this.commandWindowRect();\nconst x = this.statusWidth();\nconst y = commandWindowRect.y + commandWindowRect.height;\nconst width = Graphics.boxWidth - this.statusWidth();\nconst height = this.mainAreaHeight() - commandWindowRect.height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ItemWindow
 * @text Item Window
 *
 * @param ItemBgType:num
 * @text Background Type
 * @parent ItemWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ItemRect:func
 * @text JS: X, Y, W, H
 * @parent ItemWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "return this.slotWindowRect();"
 *
 */
/* ----------------------------------------------------------------------------
 * Status Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~StatusMenu:
 *
 * @param ProfileWindow
 * @text Profile Window
 *
 * @param ProfileBgType:num
 * @text Background Type
 * @parent ProfileWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ProfileRect:func
 * @text JS: X, Y, W, H
 * @parent ProfileWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const width = Graphics.boxWidth;\nconst height = this.profileHeight();\nconst x = 0;\nconst y = this.mainAreaBottom() - height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param StatusWindow
 * @text Status Window
 *
 * @param StatusBgType:num
 * @text Background Type
 * @parent StatusWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param StatusRect:func
 * @text JS: X, Y, W, H
 * @parent StatusWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst width = Graphics.boxWidth;\nconst height = this.statusParamsWindowRect().y - y;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param StatusParamsWindow
 * @text Parameters Window
 *
 * @param StatusParamsBgType:num
 * @text Background Type
 * @parent StatusParamsWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param StatusParamsRect:func
 * @text JS: X, Y, W, H
 * @parent StatusParamsWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const width = this.statusParamsWidth();\nconst height = this.statusParamsHeight();\nconst x = 0;\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param StatusEquipWindow
 * @text Equipment Window
 *
 * @param StatusEquipBgType:num
 * @text Background Type
 * @parent StatusEquipWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param StatusEquipRect:func
 * @text JS: X, Y, W, H
 * @parent StatusEquipWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const width = Graphics.boxWidth - this.statusParamsWidth();\nconst height = this.statusParamsHeight();\nconst x = this.statusParamsWidth();\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Options Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~OptionsMenu:
 *
 * @param OptionsWindow
 * @text Options Window
 *
 * @param OptionsBgType:num
 * @text Background Type
 * @parent OptionsWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param OptionsRect:func
 * @text JS: X, Y, W, H
 * @parent OptionsWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const n = Math.min(this.maxCommands(), this.maxVisibleCommands());\nconst width = 400;\nconst height = this.calcWindowHeight(n, true);\nconst x = (Graphics.boxWidth - width) / 2;\nconst y = (Graphics.boxHeight - height) / 2;\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Save Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~SaveMenu:
 *
 * @param HelpWindow
 * @text Help Window
 *
 * @param HelpBgType:num
 * @text Background Type
 * @parent HelpWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param HelpRect:func
 * @text JS: X, Y, W, H
 * @parent HelpWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst rows = 1;\nconst width = Graphics.boxWidth;\nconst height = this.calcWindowHeight(rows, false);\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ListWindow
 * @text List Window
 *
 * @param ListBgType:num
 * @text Background Type
 * @parent ListWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ListRect:func
 * @text JS: X, Y, W, H
 * @parent ListWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop() + this._helpWindow.height;\nconst width = Graphics.boxWidth;\nconst height = this.mainAreaHeight() - this._helpWindow.height;\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Load Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~LoadMenu:
 *
 * @param HelpWindow
 * @text Help Window
 *
 * @param HelpBgType:num
 * @text Background Type
 * @parent HelpWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param HelpRect:func
 * @text JS: X, Y, W, H
 * @parent HelpWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst rows = 1;\nconst width = Graphics.boxWidth;\nconst height = this.calcWindowHeight(rows, false);\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ListWindow
 * @text List Window
 *
 * @param ListBgType:num
 * @text Background Type
 * @parent ListWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param ListRect:func
 * @text JS: X, Y, W, H
 * @parent ListWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop() + this._helpWindow.height;\nconst width = Graphics.boxWidth;\nconst height = this.mainAreaHeight() - this._helpWindow.height;\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Game End Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~GameEnd:
 *
 * @param CommandList:arraystruct
 * @text Command Window List
 * @type struct<Command>[]
 * @desc Window commands used by the Game End screen.
 * Add new commands here.
 * @default ["{\"Symbol:str\":\"toTitle\",\"TextStr:str\":\"Untitled\",\"TextJS:func\":\"\\\"return TextManager.toTitle;\\\"\",\"ShowJS:func\":\"\\\"return true;\\\"\",\"EnableJS:func\":\"\\\"return true;\\\"\",\"ExtJS:func\":\"\\\"return null;\\\"\",\"CallHandlerJS:func\":\"\\\"SceneManager._scene.commandToTitle();\\\"\"}","{\"Symbol:str\":\"cancel\",\"TextStr:str\":\"Untitled\",\"TextJS:func\":\"\\\"return TextManager.cancel;\\\"\",\"ShowJS:func\":\"\\\"return true;\\\"\",\"EnableJS:func\":\"\\\"return true;\\\"\",\"ExtJS:func\":\"\\\"return null;\\\"\",\"CallHandlerJS:func\":\"\\\"SceneManager._scene.popScene();\\\"\"}"]
 *
 * @param CommandBgType:num
 * @text Background Type
 * @parent CommandList:arraystruct
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param CommandRect:func
 * @text JS: X, Y, W, H
 * @parent CommandList:arraystruct
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const rows = 2;\nconst width = this.mainCommandWidth();\nconst height = this.calcWindowHeight(rows, true);\nconst x = (Graphics.boxWidth - width) / 2;\nconst y = (Graphics.boxHeight - height) / 2;\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Shop Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~ShopMenu:
 *
 * @param HelpWindow
 * @text Help Window
 *
 * @param HelpBgType:num
 * @text Background Type
 * @parent HelpWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param HelpRect:func
 * @text JS: X, Y, W, H
 * @parent HelpWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const wx = 0;\nconst wy = this.helpAreaTop();\nconst ww = Graphics.boxWidth;\nconst wh = this.helpAreaHeight();\nreturn new Rectangle(wx, wy, ww, wh);"
 *
 * @param GoldWindow
 * @text Gold Window
 *
 * @param GoldBgType:num
 * @text Background Type
 * @parent GoldWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param GoldRect:func
 * @text JS: X, Y, W, H
 * @parent GoldWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const rows = 1;\nconst width = this.mainCommandWidth();\nconst height = this.calcWindowHeight(rows, true);\nconst x = Graphics.boxWidth - width;\nconst y = this.mainAreaTop();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param CommandWindow
 * @text Command Window
 *
 * @param CommandBgType:num
 * @text Background Type
 * @parent CommandWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param CommandRect:func
 * @text JS: X, Y, W, H
 * @parent CommandWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this.mainAreaTop();\nconst rows = 1;\nconst width = this._goldWindow.x;\nconst height = this.calcWindowHeight(rows, true);\nreturn new Rectangle(x, y, width, height);"
 *
 * @param DummyWindow
 * @text Dummy Window
 *
 * @param DummyBgType:num
 * @text Background Type
 * @parent DummyWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param DummyRect:func
 * @text JS: X, Y, W, H
 * @parent DummyWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this._commandWindow.y + this._commandWindow.height;\nconst width = Graphics.boxWidth;\nconst height = this.mainAreaHeight() - this._commandWindow.height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param NumberWindow
 * @text Number Window
 *
 * @param NumberBgType:num
 * @text Background Type
 * @parent NumberWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param NumberRect:func
 * @text JS: X, Y, W, H
 * @parent NumberWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this._dummyWindow.y;\nconst width = Graphics.boxWidth - this.statusWidth();\nconst height = this._dummyWindow.height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param StatusWindow
 * @text Status Window
 *
 * @param StatusBgType:num
 * @text Background Type
 * @parent StatusWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param StatusRect:func
 * @text JS: X, Y, W, H
 * @parent StatusWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const width = this.statusWidth();\nconst height = this._dummyWindow.height;\nconst x = Graphics.boxWidth - width;\nconst y = this._dummyWindow.y;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param BuyWindow
 * @text Buy Window
 *
 * @param BuyBgType:num
 * @text Background Type
 * @parent BuyWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param BuyRect:func
 * @text JS: X, Y, W, H
 * @parent BuyWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this._dummyWindow.y;\nconst width = Graphics.boxWidth - this.statusWidth();\nconst height = this._dummyWindow.height;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param CategoryWindow
 * @text Category Window
 *
 * @param CategoryBgType:num
 * @text Background Type
 * @parent CategoryWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param CategoryRect:func
 * @text JS: X, Y, W, H
 * @parent CategoryWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this._dummyWindow.y;\nconst rows = 1;\nconst width = Graphics.boxWidth;\nconst height = this.calcWindowHeight(rows, true);\nreturn new Rectangle(x, y, width, height);"
 *
 * @param SellWindow
 * @text Sell Window
 *
 * @param SellBgType:num
 * @text Background Type
 * @parent SellWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param SellRect:func
 * @text JS: X, Y, W, H
 * @parent SellWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = 0;\nconst y = this._categoryWindow.y + this._categoryWindow.height;\nconst width = Graphics.boxWidth;\nconst height =\n    this.mainAreaHeight() -\n    this._commandWindow.height -\n    this._categoryWindow.height;\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Name Menu Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~NameMenu:
 *
 * @param EditWindow
 * @text Edit Window
 *
 * @param EditBgType:num
 * @text Background Type
 * @parent EditWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param EditRect:func
 * @text JS: X, Y, W, H
 * @parent EditWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const rows = 9;\nconst inputWindowHeight = this.calcWindowHeight(rows, true);\nconst padding = $gameSystem.windowPadding();\nconst width = 600;\nconst height = Math.min(ImageManager.faceHeight + padding * 2, this.mainAreaHeight() - inputWindowHeight);\nconst x = (Graphics.boxWidth - width) / 2;\nconst y = (this.mainAreaHeight() - (height + inputWindowHeight)) / 2 + this.mainAreaTop();\nreturn new Rectangle(x, y, width, height);"
 *
 * @param InputWindow
 * @text Input Window
 *
 * @param InputBgType:num
 * @text Background Type
 * @parent InputWindow
 * @type select
 * @option 0 - Window
 * @value 0
 * @option 1 - Dim
 * @value 1
 * @option 2 - Transparent
 * @value 2
 * @desc Select background type for this window.
 * @default 0
 *
 * @param InputRect:func
 * @text JS: X, Y, W, H
 * @parent InputWindow
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const x = this._editWindow.x;\nconst y = this._editWindow.y + this._editWindow.height;\nconst rows = 9;\nconst width = this._editWindow.width;\nconst height = this.calcWindowHeight(rows, true);\nreturn new Rectangle(x, y, width, height);"
 *
 */
/* ----------------------------------------------------------------------------
 * Title Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~Title:
 *
 * @param TitleScreen
 * @text Title Screen
 *
 * @param DocumentTitleFmt:str
 * @text Document Title Format
 * @parent TitleScreen
 * @desc Format to display text in document title.
 * %1 - Main Title, %2 - Subtitle, %3 - Version
 * @default %1: %2 - Version %3
 *
 * @param Subtitle:str
 * @text Subtitle
 * @parent TitleScreen
 * @desc Subtitle to be displayed under the title name.
 * @default Subtitle
 *
 * @param Version:str
 * @text Version
 * @parent TitleScreen
 * @desc Version to be display in the title screen corner.
 * @default 0.00
 *
 * @param drawGameTitle:func
 * @text JS: Draw Title
 * @type note
 * @parent TitleScreen
 * @desc Code used to draw the game title.
 * @default "const x = 20;\nconst y = Graphics.height / 4;\nconst maxWidth = Graphics.width - x * 2;\nconst text = $dataSystem.gameTitle;\nconst bitmap = this._gameTitleSprite.bitmap;\nbitmap.fontFace = $gameSystem.mainFontFace();\nbitmap.outlineColor = \"black\";\nbitmap.outlineWidth = 8;\nbitmap.fontSize = 72;\nbitmap.drawText(text, x, y, maxWidth, 48, \"center\");"
 *
 * @param drawGameSubtitle:func
 * @text JS: Draw Subtitle
 * @type note
 * @parent TitleScreen
 * @desc Code used to draw the game subtitle.
 * @default "const x = 20;\nconst y = Graphics.height / 4 + 72;\nconst maxWidth = Graphics.width - x * 2;\nconst text = Scene_Title.subtitle;\nconst bitmap = this._gameTitleSprite.bitmap;\nbitmap.fontFace = $gameSystem.mainFontFace();\nbitmap.outlineColor = \"black\";\nbitmap.outlineWidth = 6;\nbitmap.fontSize = 48;\nbitmap.drawText(text, x, y, maxWidth, 48, \"center\");"
 *
 * @param drawGameVersion:func
 * @text JS: Draw Version
 * @type note
 * @parent TitleScreen
 * @desc Code used to draw the game version.
 * @default "const bitmap = this._gameTitleSprite.bitmap;\nconst x = 0;\nconst y = Graphics.height - 20;\nconst width = Math.round(Graphics.width / 4);\nconst height = 20;\nconst c1 = ColorManager.dimColor1();\nconst c2 = ColorManager.dimColor2();\nconst text = 'Version ' + Scene_Title.version;\nbitmap.gradientFillRect(x, y, width, height, c1, c2);\nbitmap.fontFace = $gameSystem.mainFontFace();\nbitmap.outlineColor = \"black\";\nbitmap.outlineWidth = 3;\nbitmap.fontSize = 16;\nbitmap.drawText(text, x + 4, y, Graphics.width, height, \"left\");"
 *
 * @param CommandRect:func
 * @text JS: X, Y, W, H
 * @parent TitleScreen
 * @type note
 * @desc Code used to determine the dimensions for this window.
 * @default "const offsetX = $dataSystem.titleCommandWindow.offsetX;\nconst offsetY = $dataSystem.titleCommandWindow.offsetY;\nconst rows = this.commandWindowRows();\nconst width = this.mainCommandWidth();\nconst height = this.calcWindowHeight(rows, true);\nconst x = (Graphics.boxWidth - width) / 2 + offsetX;\nconst y = Graphics.boxHeight - height - 96 + offsetY;\nreturn new Rectangle(x, y, width, height);"
 *
 * @param ButtonFadeSpeed:num
 * @text Button Fade Speed
 * @parent TitleScreen
 * @type number
 * @min 1
 * @max 255
 * @desc Speed at which the buttons fade in at (1-255).
 * @default 4
 *
 */
/* ----------------------------------------------------------------------------
 * Parameter Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~Param:
 *
 * @param DisplayedParams:arraystr
 * @text Displayed Parameters
 * @type combo[]
 * @option MaxHP
 * @option MaxMP
 * @option ATK
 * @option DEF
 * @option MAT
 * @option MDF
 * @option AGI
 * @option LUK
 * @option HIT
 * @option EVA
 * @option CRI
 * @option CEV
 * @option MEV
 * @option MRF
 * @option CNT
 * @option HRG
 * @option MRG
 * @option TRG
 * @option TGR
 * @option GRD
 * @option REC
 * @option PHA
 * @option MCR
 * @option TCR
 * @option PDR
 * @option MDR
 * @option FDR
 * @option EXR
 * @desc A list of the parameters that will be displayed in-game.
 * @default ["ATK","DEF","MAT","MDF","AGI","LUK"]
 *
 * @param ExtDisplayedParams:arraystr
 * @text Extended Parameters
 * @parent DisplayedParams:arraystr
 * @type combo[]
 * @option MaxHP
 * @option MaxMP
 * @option ATK
 * @option DEF
 * @option MAT
 * @option MDF
 * @option AGI
 * @option LUK
 * @option HIT
 * @option EVA
 * @option CRI
 * @option CEV
 * @option MEV
 * @option MRF
 * @option CNT
 * @option HRG
 * @option MRG
 * @option TRG
 * @option TGR
 * @option GRD
 * @option REC
 * @option PHA
 * @option MCR
 * @option TCR
 * @option PDR
 * @option MDR
 * @option FDR
 * @option EXR
 * @desc The list shown in extended scenes (for other VisuStella plugins).
 * @default ["MaxHP","MaxMP","ATK","DEF","MAT","MDF","AGI","LUK"]
 *
 * @param BasicParameters
 * @text Basic Parameters
 *
 * @param CrisisRate:num
 * @text HP Crisis Rate
 * @parent BasicParameters
 * @desc HP Ratio at which a battler can be considered in crisis mode.
 * @default 0.25
 *
 * @param BasicParameterFormula:func
 * @text JS: Formula
 * @parent BasicParameters
 * @type note
 * @desc Formula used to determine the total value all 8 basic parameters: MaxHP, MaxMP, ATK, DEF, MAT, MDF, AGI, LUK.
 * @default "// Determine the variables used in this calculation.\nlet paramId = arguments[0];\nlet base = this.paramBase(paramId);\nlet plus = this.paramPlus(paramId);\nlet paramRate = this.paramRate(paramId);\nlet buffRate = this.paramBuffRate(paramId);\nlet flatBonus = this.paramFlatBonus(paramId);\n\n// Formula to determine total parameter value.\nlet value = (base + plus) * paramRate * buffRate + flatBonus;\n\n// Determine the limits\nconst maxValue = this.paramMax(paramId);\nconst minValue = this.paramMin(paramId);\n\n// Final value\nreturn Math.round(value.clamp(minValue, maxValue));"
 *
 * @param BasicParamCaps
 * @text Parameter Caps
 * @parent BasicParameters
 *
 * @param BasicActorParamCaps
 * @text Actors
 * @parent BasicParamCaps
 *
 * @param BasicActorParamMax0:str
 * @text MaxHP Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine MaxHP cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 9999
 *
 * @param BasicActorParamMax1:str
 * @text MaxMP Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine MaxMP cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 9999
 *
 * @param BasicActorParamMax2:str
 * @text ATK Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine ATK cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicActorParamMax3:str
 * @text DEF Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine DEF cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicActorParamMax4:str
 * @text MAT Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine MAT cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicActorParamMax5:str
 * @text MDF Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine MDF cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicActorParamMax6:str
 * @text AGI Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine AGI cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicActorParamMax7:str
 * @text LUK Cap
 * @parent BasicActorParamCaps
 * @desc Formula used to determine LUK cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicEnemyParamCaps
 * @text Enemies
 * @parent BasicParamCaps
 *
 * @param BasicEnemyParamMax0:str
 * @text MaxHP Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine MaxHP cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999999
 *
 * @param BasicEnemyParamMax1:str
 * @text MaxMP Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine MaxMP cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 9999
 *
 * @param BasicEnemyParamMax2:str
 * @text ATK Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine ATK cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicEnemyParamMax3:str
 * @text DEF Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine DEF cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicEnemyParamMax4:str
 * @text MAT Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine MAT cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicEnemyParamMax5:str
 * @text MDF Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine MDF cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicEnemyParamMax6:str
 * @text AGI Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine AGI cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param BasicEnemyParamMax7:str
 * @text LUK Cap
 * @parent BasicEnemyParamCaps
 * @desc Formula used to determine LUK cap.
 * Use 0 if you don't want a cap for this parameter.
 * @default 999
 *
 * @param XParameters
 * @text X Parameters
 *
 * @param XParameterFormula:func
 * @text JS: Formula
 * @parent XParameters
 * @type note
 * @desc Formula used to determine the total value all 10 X parameters: HIT, EVA, CRI, CEV, MEV, MRF, CNT, HRG, MRG, TRG.
 * @default "// Determine the variables used in this calculation.\nlet xparamId = arguments[0];\nlet base = this.traitsSum(Game_BattlerBase.TRAIT_XPARAM, xparamId);\nlet plus = this.xparamPlus(xparamId);\nlet paramRate = this.xparamRate(xparamId);\nlet flatBonus = this.xparamFlatBonus(xparamId);\n\n// Formula to determine total parameter value.\nlet value = (base + plus) * paramRate + flatBonus;\n\n// Final value\nreturn value;"
 *
 * @param XParamVocab
 * @text Vocabulary
 * @parent XParameters
 *
 * @param XParamVocab0:str
 * @text HIT
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default Hit
 *
 * @param XParamVocab1:str
 * @text EVA
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default Evasion
 *
 * @param XParamVocab2:str
 * @text CRI
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default Crit.Rate
 *
 * @param XParamVocab3:str
 * @text CEV
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default Crit.Evade
 *
 * @param XParamVocab4:str
 * @text MEV
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default Magic Evade
 *
 * @param XParamVocab5:str
 * @text MRF
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default Magic Reflect
 *
 * @param XParamVocab6:str
 * @text CNT
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default Counter
 *
 * @param XParamVocab7:str
 * @text HRG
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default HP Regen
 *
 * @param XParamVocab8:str
 * @text MRG
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default MP Regen
 *
 * @param XParamVocab9:str
 * @text TRG
 * @parent XParamVocab
 * @desc The in-game vocabulary used for this X Parameter.
 * @default TP Regen
 *
 * @param SParameters
 * @text S Parameters
 *
 * @param SParameterFormula:func
 * @text JS: Formula
 * @parent SParameters
 * @type note
 * @desc Formula used to determine the total value all 10 S parameters: TGR, GRD, REC, PHA, MCR, TCR, PDR, MDR, FDR, EXR.
 * @default "// Determine the variables used in this calculation.\nlet sparamId = arguments[0];\nlet base = this.traitsPi(Game_BattlerBase.TRAIT_SPARAM, sparamId);\nlet plus = this.sparamPlus(sparamId);\nlet paramRate = this.sparamRate(sparamId);\nlet flatBonus = this.sparamFlatBonus(sparamId);\n\n// Formula to determine total parameter value.\nlet value = (base + plus) * paramRate + flatBonus;\n\n// Final value\nreturn value;"
 *
 * @param SParamVocab
 * @text Vocabulary
 * @parent SParameters
 *
 * @param SParamVocab0:str
 * @text TGR
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default Aggro
 *
 * @param SParamVocab1:str
 * @text GRD
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default Guard
 *
 * @param SParamVocab2:str
 * @text REC
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default Recovery
 *
 * @param SParamVocab3:str
 * @text PHA
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default Item Effect
 *
 * @param SParamVocab4:str
 * @text MCR
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default MP Cost
 *
 * @param SParamVocab5:str
 * @text TCR
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default TP Charge
 *
 * @param SParamVocab6:str
 * @text PDR
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default Physical DMG
 *
 * @param SParamVocab7:str
 * @text MDR
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default Magical DMG
 *
 * @param SParamVocab8:str
 * @text FDR
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default Floor DMG
 *
 * @param SParamVocab9:str
 * @text EXR
 * @parent SParamVocab
 * @desc The in-game vocabulary used for this S Parameter.
 * @default EXP Gain
 *
 * @param Icons
 * @text Icons
 *
 * @param DrawIcons:eval
 * @text Draw Icons?
 * @parent Icons
 * @type boolean
 * @on Draw
 * @off Don't Draw
 * @desc Draw icons next to parameter names?
 * @default true
 *
 * @param IconParam0:str
 * @text MaxHP
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 84
 *
 * @param IconParam1:str
 * @text MaxMP
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 165
 *
 * @param IconParam2:str
 * @text ATK
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 76
 *
 * @param IconParam3:str
 * @text DEF
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 81
 *
 * @param IconParam4:str
 * @text MAT
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 101
 *
 * @param IconParam5:str
 * @text MDF
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 133
 *
 * @param IconParam6:str
 * @text AGI
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 140
 *
 * @param IconParam7:str
 * @text LUK
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 87
 *
 * @param IconXParam0:str
 * @text HIT
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 102
 *
 * @param IconXParam1:str
 * @text EVA
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 82
 *
 * @param IconXParam2:str
 * @text CRI
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 78
 *
 * @param IconXParam3:str
 * @text CEV
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 82
 *
 * @param IconXParam4:str
 * @text MEV
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 171
 *
 * @param IconXParam5:str
 * @text MRF
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 222
 *
 * @param IconXParam6:str
 * @text CNT
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 77
 *
 * @param IconXParam7:str
 * @text HRG
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 72
 *
 * @param IconXParam8:str
 * @text MRG
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 72
 *
 * @param IconXParam9:str
 * @text TRG
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 72
 *
 * @param IconSParam0:str
 * @text TGR
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 5
 *
 * @param IconSParam1:str
 * @text GRD
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 128
 *
 * @param IconSParam2:str
 * @text REC
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 72
 *
 * @param IconSParam3:str
 * @text PHA
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 176
 *
 * @param IconSParam4:str
 * @text MCR
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 165
 *
 * @param IconSParam5:str
 * @text TCR
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 164
 *
 * @param IconSParam6:str
 * @text PDR
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 76
 *
 * @param IconSParam7:str
 * @text MDR
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 79
 *
 * @param IconSParam8:str
 * @text FDR
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 141
 *
 * @param IconSParam9:str
 * @text EXR
 * @parent Icons
 * @desc Icon used for this parameter.
 * @default 73
 *
 */
/* ----------------------------------------------------------------------------
 * Commands Struct
 * ----------------------------------------------------------------------------
 */
/*~struct~Command:
 *
 * @param Symbol:str
 * @text Symbol
 * @desc The symbol used for this command.
 * @default Symbol
 *
 * @param TextStr:str
 * @text STR: Text
 * @desc Displayed text used for this title command.
 * If this has a value, ignore the JS: Text version.
 * @default Untitled
 *
 * @param TextJS:func
 * @text JS: Text
 * @type note
 * @desc JavaScript code used to determine string used for the displayed name.
 * @default "return 'Text';"
 *
 * @param ShowJS:func
 * @text JS: Show
 * @type note
 * @desc JavaScript code used to determine if the item is shown or not.
 * @default "return true;"
 *
 * @param EnableJS:func
 * @text JS: Enable
 * @type note
 * @desc JavaScript code used to determine if the item is enabled or not.
 * @default "return true;"
 *
 * @param ExtJS:func
 * @text JS: Ext
 * @type note
 * @desc JavaScript code used to determine any ext data that should be added.
 * @default "return null;"
 *
 * @param CallHandlerJS:func
 * @text JS: Run Code
 * @type note
 * @desc JavaScript code that runs once this command is selected.
 * @default ""
 *
 */
/* ----------------------------------------------------------------------------
 * Title Picture Buttons
 * ----------------------------------------------------------------------------
 */
/*~struct~TitlePictureButton:
 *
 * @param PictureFilename:str
 * @text Picture's Filename
 * @type file
 * @dir img/pictures/
 * @desc Filename used for the picture.
 * @default 
 *
 * @param ButtonURL:str
 * @text Button URL
 * @desc URL for the button to go to upon being clicked.
 * @default https://www.google.com/
 *
 * @param PositionJS:func
 * @text JS: Position
 * @type note
 * @desc JavaScript code that helps determine the button's Position.
 * @default "this.x = Graphics.width - this.bitmap.width - 20;\nthis.y = Graphics.height - this.bitmap.height - 20;"
 *
 * @param OnLoadJS:func
 * @text JS: On Load
 * @type note
 * @desc JavaScript code that runs once this button bitmap is loaded.
 * @default "this.opacity = 0;\nthis.visible = true;"
 *
 * @param CallHandlerJS:func
 * @text JS: Run Code
 * @type note
 * @desc JavaScript code that runs once this button is pressed.
 * @default "const url = this._data.ButtonURL;\nVisuMZ.openURL(url);"
 *
 */
/* ----------------------------------------------------------------------------
 * UI Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~UI:
 *
 * @param UIArea
 * @text UI Area
 *
 * @param FadeSpeed:num
 * @text Fade Speed
 * @parent UIArea
 * @desc Default fade speed for transitions.
 * @default 24
 *
 * @param BoxMargin:num
 * @text Box Margin
 * @parent UIArea
 * @type number
 * @min 0
 * @desc Set the margin in pixels for the screen borders.
 * Default: 4
 * @default 4
 *
 * @param CommandWidth:num
 * @text Command Window Width
 * @parent UIArea
 * @type number
 * @min 1
 * @desc Sets the width for standard Command Windows.
 * Default: 240
 * @default 240
 *
 * @param BottomHelp:eval
 * @text Bottom Help Window
 * @parent UIArea
 * @type boolean
 * @on Bottom
 * @off Top
 * @desc Put the Help Window at the bottom of the screen?
 * @default false
 *
 * @param RightMenus:eval
 * @text Right Aligned Menus
 * @parent UIArea
 * @type boolean
 * @on Right
 * @off Left
 * @desc Put most command windows to the right side of the screen.
 * @default true
 *
 * @param ShowButtons:eval
 * @text Show Buttons
 * @parent UIArea
 * @type boolean
 * @on Show
 * @off Hide
 * @desc Show clickable buttons in your game?
 * This will affect all buttons.
 * @default true
 *
 * @param cancelShowButton:eval
 * @text Show Cancel Button
 * @parent ShowButtons:eval
 * @type boolean
 * @on Show
 * @off Hide
 * @desc Show cancel button?
 * If 'Show Buttons' is false, this will be hidden.
 * @default true
 *
 * @param menuShowButton:eval
 * @text Show Menu Button
 * @parent ShowButtons:eval
 * @type boolean
 * @on Show
 * @off Hide
 * @desc Show main menu button from the map scene?
 * If 'Show Buttons' is false, this will be hidden.
 * @default true
 *
 * @param pagedownShowButton:eval
 * @text Show Page Up/Down
 * @parent ShowButtons:eval
 * @type boolean
 * @on Show
 * @off Hide
 * @desc Show page up/down buttons?
 * If 'Show Buttons' is false, this will be hidden.
 * @default true
 *
 * @param numberShowButton:eval
 * @text Show Number Buttons
 * @parent ShowButtons:eval
 * @type boolean
 * @on Show
 * @off Hide
 * @desc Show number adjustment buttons?
 * If 'Show Buttons' is false, this will be hidden.
 * @default true
 *
 * @param ButtonHeight:num
 * @text Button Area Height
 * @parent UIArea
 * @type number
 * @min 1
 * @desc Sets the height for the button area.
 * Default: 52
 * @default 52
 *
 * @param BottomButtons:eval
 * @text Bottom Buttons
 * @parent UIArea
 * @type boolean
 * @on Bottom
 * @off Top
 * @desc Put the buttons at the bottom of the screen?
 * @default false
 *
 * @param SideButtons:eval
 * @text Side Buttons
 * @parent UIArea
 * @type boolean
 * @on Side
 * @off Normal
 * @desc Push buttons to the side of the UI if there is room.
 * @default true
 *
 * @param LargerResolution
 * @text Larger Resolution
 *
 * @param RepositionActors:eval
 * @text Reposition Actors
 * @parent LargerResolution
 * @type boolean
 * @on Reposition
 * @off Keep As Is
 * @desc Update the position of actors in battle if the screen resolution has changed. Ignore if using Battle Core.
 * @default true
 *
 * @param RepositionEnemies:eval
 * @text Reposition Enemies
 * @parent LargerResolution
 * @type boolean
 * @on Reposition
 * @off Keep As Is
 * @desc Update the position of enemies in battle if the screen resolution has changed.
 * @default true
 *
 * @param MenuObjects
 * @text Menu Objects
 *
 * @param LvExpGauge:eval
 * @text Level -> EXP Gauge
 * @parent MenuObjects
 * @type boolean
 * @on Draw Gauge
 * @off Keep As Is
 * @desc Draw an EXP Gauge under the drawn level.
 * @default true
 *
 * @param ParamArrow:str
 * @text Parameter Arrow
 * @parent MenuObjects
 * @desc The arrow used to show changes in the parameter values.
 * @default →
 *
 * @param TextCodeSupport
 * @text Text Code Support
 *
 * @param TextCodeClassNames:eval
 * @text Class Names
 * @parent TextCodeSupport
 * @type boolean
 * @on Suport Text Codes
 * @off Normal Text
 * @desc Make class names support text codes?
 * @default true
 *
 * @param TextCodeNicknames:eval
 * @text Nicknames
 * @parent TextCodeSupport
 * @type boolean
 * @on Suport Text Codes
 * @off Normal Text
 * @desc Make nicknames support text codes?
 * @default true
 *
 */
/* ----------------------------------------------------------------------------
 * Window Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~Window:
 *
 * @param WindowDefaults
 * @text Defaults
 *
 * @param EnableMasking:eval
 * @text Enable Masking
 * @parent WindowDefaults
 * @type boolean
 * @on Masking On
 * @off Masking Off
 * @desc Enable window masking (windows hide other windows behind 
 * them)? WARNING: Turning it on can obscure data.
 * @default false
 *
 * @param LineHeight:num
 * @text Line Height
 * @parent WindowDefaults
 * @desc Default line height used for standard windows.
 * Default: 36
 * @default 36
 *
 * @param ItemPadding:num
 * @text Item Padding
 * @parent WindowDefaults
 * @desc Default line padding used for standard windows.
 * Default: 8
 * @default 8
 *
 * @param BackOpacity:num
 * @text Back Opacity
 * @parent WindowDefaults
 * @desc Default back opacity used for standard windows.
 * Default: 192
 * @default 192
 *
 * @param TranslucentOpacity:num
 * @text Translucent Opacity
 * @parent WindowDefaults
 * @desc Default translucent opacity used for standard windows.
 * Default: 160
 * @default 160
 *
 * @param OpenSpeed:num
 * @text Window Opening Speed
 * @parent WindowDefaults
 * @desc Default open speed used for standard windows.
 * Default: 32 (Use a number between 0-255)
 * @default 32
 * @default 24
 *
 * @param ColSpacing:num
 * @text Column Spacing
 * @parent WindowDefaults
 * @desc Default column spacing for selectable windows.
 * Default: 8
 * @default 8
 *
 * @param RowSpacing:num
 * @text Row Spacing
 * @parent WindowDefaults
 * @desc Default row spacing for selectable windows.
 * Default: 4
 * @default 4
 * 
 * @param SelectableItems
 * @text Selectable Items
 *
 * @param ShowItemBackground:eval
 * @text Show Background?
 * @parent SelectableItems
 * @type boolean
 * @on Show Backgrounds
 * @off No backgrounds.
 * @desc Selectable menu items have dark boxes behind them. Show them?
 * @default true
 *
 * @param ItemHeight:num
 * @text Item Height Padding
 * @parent SelectableItems
 * @desc Default padding for selectable items.
 * Default: 8
 * @default 8
 *
 * @param DrawItemBackgroundJS:func
 * @text JS: Draw Background
 * @parent SelectableItems
 * @type note
 * @desc Code used to draw the background rectangle behind clickable menu objects
 * @default "const rect = arguments[0];\nconst c1 = ColorManager.itemBackColor1();\nconst c2 = ColorManager.itemBackColor2();\nconst x = rect.x;\nconst y = rect.y;\nconst w = rect.width;\nconst h = rect.height;\nthis.contentsBack.gradientFillRect(x, y, w, h, c1, c2, true);\nthis.contentsBack.strokeRect(x, y, w, h, c1);"
 */
/* ----------------------------------------------------------------------------
 * JS Quick Function Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~jsQuickFunc:
 *
 * @param FunctionName:str
 * @text Function Name
 * @desc The function's name in the global namespace.
 * Will not overwrite functions/variables of the same name.
 * @default Untitled
 *
 * @param CodeJS:json
 * @text JS: Code
 * @type note
 * @desc Run this code when using the function.
 * @default "// Insert this as a function anywhere you can input code\n// such as Script Calls or Conditional Branch Scripts.\n\n// Process Code\n"
 *
 */
/* ----------------------------------------------------------------------------
 * Screen Shake Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~ScreenShake:
 *
 * @param DefaultStyle:str
 * @text Default Style
 * @type select
 * @option Original
 * @value original
 * @option Random
 * @value random
 * @option Horizontal
 * @value horizontal
 * @option Vertical
 * @value vertical
 * @desc The default style used for screen shakes.
 * @default random
 *
 * @param originalJS:func
 * @text JS: Original Style
 * @type note
 * @desc This code gives you control over screen shake for this
 * screen shake style.
 * @default "// Calculation\nthis.x += Math.round($gameScreen.shake());"
 *
 * @param randomJS:func
 * @text JS: Random Style
 * @type note
 * @desc This code gives you control over screen shake for this
 * screen shake style.
 * @default "// Calculation\n// Original Formula by Aries of Sheratan\nconst power = $gameScreen._shakePower * 0.75;\nconst speed = $gameScreen._shakeSpeed * 0.60;\nconst duration = $gameScreen._shakeDuration;\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);"
 *
 * @param horzJS:func
 * @text JS: Horizontal Style
 * @type note
 * @desc This code gives you control over screen shake for this
 * screen shake style.
 * @default "// Calculation\n// Original Formula by Aries of Sheratan\nconst power = $gameScreen._shakePower * 0.75;\nconst speed = $gameScreen._shakeSpeed * 0.60;\nconst duration = $gameScreen._shakeDuration;\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);"
 *
 * @param vertJS:func
 * @text JS: Vertical Style
 * @type note
 * @desc This code gives you control over screen shake for this
 * screen shake style.
 * @default "// Calculation\n// Original Formula by Aries of Sheratan\nconst power = $gameScreen._shakePower * 0.75;\nconst speed = $gameScreen._shakeSpeed * 0.60;\nconst duration = $gameScreen._shakeDuration;\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);"
 *
 */
/* ----------------------------------------------------------------------------
 * Custom Parameter Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~CustomParam:
 *
 * @param ParamName:str
 * @text Parameter Name
 * @desc What's the parameter's name?
 * Used for VisuStella MZ menus.
 * @default Untitled
 *
 * @param Abbreviation:str
 * @text Abbreviation
 * @parent ParamName:str
 * @desc What abbreviation do you want to use for the parameter?
 * Do not use special characters. Avoid numbers if possible.
 * @default unt
 *
 * @param Icon:num
 * @text Icon
 * @parent ParamName:str
 * @desc What icon do you want to use to represent this parameter?
 * Used for VisuStella MZ menus.
 * @default 160
 *
 * @param Type:str
 * @text Type
 * @parent ParamName:str
 * @type select
 * @option Integer (Whole Numbers Only)
 * @value integer
 * @option Float (Decimals are Allowed)
 * @value float
 * @desc What kind of number value will be returned with this parameter?
 * @default integer
 *
 * @param ValueJS:json
 * @text JS: Value
 * @type note
 * @desc Run this code when this parameter is to be returned.
 * @default "// Declare Constants\nconst user = this;\n\n// Calculations\nreturn 1;"
 *
 */
/* ----------------------------------------------------------------------------
 * Show Picture Settings
 * ----------------------------------------------------------------------------
 */
/*~struct~ShowPicture:
 * 
 * @param Position
 *
 * @param Origin:num
 * @text Origin
 * @parent Position
 * @type select
 * @option 0 - Upper Left
 * @value 0
 * @option 1 - Center
 * @value 1
 * @desc What is the origin of this picture icon?
 * @default 0
 *
 * @param PositionX:eval
 * @text Position X
 * @parent Position
 * @desc X coordinate of the picture.
 * You may use JavaScript code.
 * @default 0
 *
 * @param PositionY:eval
 * @text Position Y
 * @parent Position
 * @desc Y coordinate of the picture.
 * You may use JavaScript code.
 * @default 0
 * 
 * @param Scale
 *
 * @param ScaleX:eval
 * @text Width %
 * @parent Scale
 * @desc Horizontal scale of the picture.
 * You may use JavaScript code.
 * @default 100
 *
 * @param ScaleY:eval
 * @text Height %
 * @parent Scale
 * @desc Vertical scale of the picture.
 * You may use JavaScript code.
 * @default 100
 * 
 * @param Blend
 *
 * @param Opacity:eval
 * @text Opacity
 * @parent Blend
 * @desc Insert a number to determine opacity level. Use a
 * number between 0 and 255. You may use JavaScript code.
 * @default 255
 *
 * @param BlendMode:num
 * @text Blend Mode
 * @parent Blend
 * @type select
 * @option 0 - Normal
 * @value 0
 * @option 1 - Additive
 * @value 1
 * @option 2 - Multiply
 * @value 2
 * @option 3 - Screen
 * @value 3
 * @desc What kind of blend mode do you wish to apply to the picture?
 * @default 0
 *
 */
//=============================================================================

const _0x5ef9=['Abbreviation','_pressed','Sprite_AnimationMV_processTimingData','WIN_OEM_WSCTRL','ItemBackColor2','optSideView','onKeyDown','strokeRect','OggIQ','ParseStateNotetags','RevertPreserveNumbers','SParamVocab5','F13','isGamepadTriggered','_troopId','XExUr','picture','HqcvL','keyRepeatWait','tpGaugeColor2','updateCoreEasing','faces','_digitGrouping','_helpWindow','ItemMenu','xCidF','GoldRect','reserveCommonEvent','wholeDuration','isActor','PERCENT','NTYQC','MODECHANGE','stencilOp','ItemPadding','isCancelled','Keyboard','startAutoNewGame','ELcNW','tzVBw','GET','adjustSprite','tab','_stored_powerUpColor','Bitmap_drawTextOutline','DummyBgType','initBasic','Game_Character_processMoveCommand','_actorWindow','buttonAssistWindowRect','updateFauxAnimations','Pixelated','ONE','xoOVa','cCtyY','pagedownShowButton','wggqd','tmgMq','drawActorClass','BlendMode','BattleManager_processEscape','PERIOD','processKeyboardBackspace','BACK_SLASH','sssIx','BjaTU','round','GoldFontSize','_spriteset','isEnabled','textSizeEx','children','bitmapWidth','_isPlaytest','TILDE','EXECUTE','setSideView','updatePositionCoreEngine','F12','SideView','scale','createEnemies','SceneManager_onKeyDown','ARRAYJSON','TRG','setupValueFont','CategoryRect','_stored_systemColor','GoldIcon','paramPlus','string','isTriggered','Jqrqv','CommandList','opacity','initialize','Scene_Name_onInputOk','ScreenShake','_anchor','hit','OUTCIRC','inBattle','ARRAYSTRUCT','process_VisuMZ_CoreEngine_Notetags','currentClass','_stored_mpGaugeColor2','ATK','F10','command111','getGamepads','_stored_ctGaugeColor2','Game_System_initialize','Bitmap_drawText','cursorPageup','cos','buttonAssistKey%1','_storedStack','Opacity','registerCommand','setMute','charCode','sparam','TextCodeClassNames','drawCharacter','enemy','Scene_Map_updateMainMultiply','darwin','isFauxAnimationPlaying','KDCAH','_statusWindow','%1/','qHEzN','yXYOP','SParamVocab9','AntiZoomPictures','Window_Base_drawCharacter','ColorNormal','_actor','targetBackOpacity','ColorHPGauge2','JtqqM','SystemSetBattleSystem','ARRAYNUM','HRG','Settings','constructor','Window_NameInput_cursorRight','%1〘Choice\x20%2〙\x20%3%1','normal','log','makeActionList','exit','oTDNA','subtitle','processCursorMove','_encounterCount','Rate2','cyebh','maxItems','LJjqG','ColorMPGauge1','setAnchor','SideButtons','qfTOZ','sLEND','VIRVj','Sprite_Picture_updateOrigin','WIN_OEM_BACKTAB','_offsetY','PictureFilename','DECIMAL','mpGaugeColor2','SwitchActorText','alLxi','drawGoldItemStyle','JUNJA','RegExp','actor','DigitGroupingDamageSprites','_closing','sparamFlat1','DummyRect','_commandList','_backSprite1','onLoad','ePBJd','original','TUsEd','drawCircle','setEasingType','createFauxAnimationSprite','nickname','indexOf','mhp','processFauxAnimationRequests','buttonAreaHeight','BkKUi','zRnvU','isBusy','TextFmt','waiting','ColorTPGauge2','CANCEL','Gold','setSkill','wWDgo','openingSpeed','ColorPowerDown','fillRect','createJsQuickFunction','Scene_Item_create','updateMove','PGUP','GREATER_THAN','PRESERVCONVERSION(%1)','HelpBgType','setSideButtonLayout','printError','EncounterRateMinimum','F14','name','replace','makeCoreEngineCommandList','SUBTRACT','xASnl','characters','KeyTAB','Game_Action_itemEva','LUK','setBackgroundType','list','sparamRate2','save','OpenConsole','setBattleSystem','Manual','reduce','parameters','F7key','setGuard','setFrame','setViewport','IconXParam1','StatusEquipBgType','SaveMenu','EVA','hpColor','isMapScrollLinked','xparamPlus1','IconXParam8','pow','FunctionName','fillStyle','evaded','JqBCu','smoothSelect','kdHuP','initialLevel','xScrollLinkedOffset','onClick','setAttack','ZERO','AXfqr','%1\x20is\x20missing\x20a\x20required\x20plugin.\x0aPlease\x20install\x20%2\x20into\x20the\x20Plugin\x20Manager.','SellBgType','CodeJS','addCommand','TBMQK','WIN_OEM_CUSEL','itemHeight','boxHeight','useDigitGrouping','ptaaG','Bitmap_strokeRect','Spriteset_Base_update','StatusEquipRect','drawActorExpGauge','join','numActions','buttonAssistText%1','number','end','ColorPowerUp','FontSmoothing','isSpecialCode','yyZZi','_scene','VisuMZ_2_BattleSystemSTB','GoldBgType','height','application/json','fjgna','NUMPAD4','createTextState','pbhFD','AllTroops','AGI','INELASTIC','myvLy','Game_Interpreter_command111','processTimingData','initCoreEngine','abs','isPressed','center','processTouch','Game_Screen_initialize','SystemSetFontSize','eventsXyNt','text','setColorTone','ParseArmorNotetags','updateAnchor','ColSpacing','wPTXF','xparamFlatBonus','drawGauge','NUMPAD7','Plus2','CustomParamType','drawIconBySize','MlQWD','iJNhl','yhila','drawParamName','Window_Selectable_cursorDown','KbRge','XParamVocab7','META','pages','WIN_OEM_PA3','origin','MainMenu','Origin','sparamFlatJS','contentsOpacity','kARrw','WIN_OEM_FJ_JISHO','Type','onKeyDownKeysF6F7','titleCommandWindow','rWEob','Bpxqo','sin','MDR','VisuMZ_2_BattleSystemOTB','helpAreaHeight','forceOutOfPlaytest','concat','mainAreaBottom','_height','_blank','battlebacks1','COMMA','Window_Selectable_processCursorMove','KANA','WIN_OEM_FJ_MASSHOU','win32','nzeCZ','STB','_dummyWindow','_statusEquipWindow','ShowButtons','makeEncounterCount','Input_onKeyDown','Basic','USWam','DefaultStyle','Sprite_Animation_setViewport','crisisColor','buttonAssistOffset%1','hpGaugeColor2','EWxfx','MULTIPLY','LineHeight','_hp','tilesets','PositionJS','isNormalPriority','FhJHt','IconXParam3','Game_Map_setup','Input_shouldPreventDefault','maxCols','dlRKo','buttonAssistText3','JSON','enableDigitGroupingEx','innerWidth','processKeyboardHome','trim','Control\x20Variables\x20Script\x20Error','isTouchedInsideFrame','BoxMargin','YNdPk','process_VisuMZ_CoreEngine_CustomParameters','button','SystemSetSideView','normalColor','BACK_QUOTE','offsetY','createTitleButtons','_stored_tpGaugeColor1','paramMax','statusWindowRect','hNsNW','dummyWindowRect','Exported_Script_%1.txt','([\x5c+\x5c-]\x5cd+\x5c.?\x5cd+)>','createBuffer','clearZoom','KeyUnlisted','Bitmap_measureTextWidth','QXFnQ','Game_Action_updateLastTarget','right','shift','VxxuY','EJkUM','_onKeyPress','animationShouldMirror','movePageButtonSideButtonLayout','ItemBgType','command357','createCancelButton','outlineColor','ASfKD','PixelateImageRendering','calcEasing','_numberWindow','evaluate','mmp','loadBitmap','maxLevel','ColorCTGauge2','LevelUpFullMp','ExportString','_inputString','xovAb','updateDocumentTitle','canEquip','refresh','getColor','mXhRQ','MRF','isAnimationForEach','toString','drawActorNickname','catchLoadError','clearForcedGameTroopSettingsCoreEngine','adjustPictureAntiZoom','Saved\x20file\x20as\x20%1\x20in\x20project\x20folder.','destroyCoreEngineMarkedBitmaps','Scene_Battle_createSpriteset','_context','onInputOk','buyWindowRect','DigitGroupingExText','Scene_Boot_updateDocumentTitle','NUMPAD2','updateOrigin','vwiRz','requestFauxAnimation','Padding','MRG','_index','Key%1','qeore','BottomButtons','jaZrg','BTestAddedQuantity','currentLevelExp','createChildSprite','StartID','cEEjH','match','_pictureContainer','isAnimationOffsetXMirrored','ColorDeath','OutlineColorDmg','Sprite_Picture_loadBitmap','Scene_MenuBase_createPageButtons','\x0a\x0a\x0a\x0a\x0a','BsInG','show','contains','Sprite_Gauge_currentValue','enter','Vztnp','FfepD','Linear','initMembers','XParamVocab0','setValue','pNEGn','58511qkJOkr','kDjVr','RSpct','Window_NameInput_cursorPagedown','onXhrError','slotWindowRect','_commonEventLayers','cancel','CEcZb','SParamVocab6','ParseItemNotetags','push','【%1】\x0a','Plus','pressed','AutoStretch','isActiveTpb','drawText','catchException','isMaskingEnabled','smooth','boyjy','_mapNameWindow','JIbMV','_stored_gaugeBackColor','XParamVocab9','buttonAssistKey4','Window_EquipItem_isEnabled','xparamRate','_backSprite2','_targetAnchor','Window_Base_drawText','ASTERISK','Duration','buttonAssistOffset3','down2','levelUpRecovery','_refreshBack','removeFauxAnimation','NEAREST','helpAreaBottom','left','defineProperty','openness','gradientFillRect','asin','initVisuMZCoreEngine','Window_ShopSell_isEnabled','SrRQl','PA1','ItemHeight','MINUS','goldWindowRect','Window_NameInput_cursorPageup','isKeyItem','Sprite_Battler_startMove','outbounce','buttonAssistOk','CRSEL','param','Wait','expRate','UkCIX','DisplayedParams','urFlG','drawGameTitle','setClickHandler','Show\x20Scrolling\x20Text\x20Script\x20Error','CAPSLOCK','oLRZk','VOLUME_UP','filterArea','mWLlp','Window_Base_drawFace','_commandWindow','playCursor','ParseActorNotetags','MAT','RnsPx','suhVb','targets','requestMotion','stringKeyMap','JaNwi','sparamRateJS','EQUALS','Conditional\x20Branch\x20Script\x20Error','eva','KeySHIFT','SystemSetWindowPadding','tXhML','Renderer','systemColor','volume','ulVAX','Flat1','EndingID','Map%1.json','determineSideButtonLayoutValid','randomInt','option','〘Common\x20Event\x20%1:\x20%2〙\x20End','395325upaRQd','FadeSpeed','ParseSkillNotetags','slice','renderNoMask','createSpriteset','ActorHPColor','applyForcedGameTroopSettingsCoreEngine','_maxDigits','MultiKeyFmt','uNxrf','enemies','startNormalGame','aegQJ','setViewportCoreEngineFix','SwitchRandomizeOne','createFauxAnimationQueue','setBackgroundOpacity','lzuMU','PIPE','SParamVocab4','worldTransform','%1\x27s\x20version\x20does\x20not\x20match\x20plugin\x27s.\x20Please\x20update\x20it\x20in\x20the\x20Plugin\x20Manager.','font-smooth','destroy','zBVFc','GvFcL','ParamArrow','destroyed','iconWidth','buttonAssistKey3','Graphics_centerElement','outlineColorGauge','createCustomParameter','WIN_OEM_FJ_ROYA','EnableMasking','update','moveMenuButtonSideButtonLayout','escape','%1\x0a','updateDashToggle','DocumentTitleFmt','_stored_tpCostColor','Window_NameInput_cursorDown','SlotRect','kJkpb','_isButtonHidden','Game_Interpreter_PluginCommand','_list','VqfJA','isMVAnimation','_mainSprite','commandWindowRows','OUTBOUNCE','moveCancelButtonSideButtonLayout','QjWOI','SLEEP','ForceNoPlayTest','initButtonHidden','EOxaH','targetPosition','blYEe','playOk','ListRect','profileWindowRect','viewport','updateLastTarget','_storedMapText','VisuMZ_2_BattleSystemCTB','setupCoreEasing','IconParam3','_shakeSpeed','_buttonType','XParamVocab3','alwaysDash','Plus1','GPjcc','active','system','_upArrowSprite','BGBCa','paramName','EnableJS','Script\x20Call\x20Error','Window_StatusBase_drawActorSimpleStatus','offsetX','LATIN1','buttonAssistWindowButtonRect','resetFontSettings','popScene','OUTQUAD','getBackgroundOpacity','_cacheScaleX','getCustomBackgroundSettings','(\x5cd+)>','subjectHitRate','EnableNumberInput','Sprite_Button_updateOpacity','ACCEPT','RIGHT','_drawTextOutline','BuyRect','clearRect','refreshDimmerBitmap','nChaE','SmartEventCollisionPriority','openURL','HfzYn','TAB','WIN_ICO_HELP','DEF','Flat2','CustomParamAbb','Game_Picture_show','KAmwX','mainCommandWidth','setAction','markCoreEngineModified','Max','oMizI','Troop%1','helpAreaTopSideButtonLayout','note','MDF','Scene_Boot_loadSystemImages','ImgLoad','backgroundBitmap','sparamFlatBonus','isGameActive','Scene_Options_create','SwitchToggleRange','updateClose','ShowItemBackground','expGaugeColor2','CLEAR','F17','ALWAYS','loadSystemImages','vertical','loadTitle2','FTB','getBattleSystem','setMainFontSize','filters','targetScaleY','Window_Selectable_itemRect','HANJA','WIN_OEM_FJ_TOUROKU','Scene_Boot_onDatabaseLoaded','Game_Actor_paramBase','WindowLayer_render','currentExp','qMjMb','learnings','NUMPAD9','ItemStyle','LhBoU','min','INOUTBACK','LINEAR','crbCK','tegfM','toFixed','_targetOffsetY','BasicParameterFormula','isSideView','IconXParam2','paramY','BKwLs','\x5c}❪SHIFT❫\x5c{','sdrrW','filter','blthh','altKey','_mode','backOpacity','evade','resetTextColor','ParseClassNotetags','ENTER_SPECIAL','F6key','layoutSettings','F19','processAlwaysEscape','_lastPluginCommandInterpreter','kmiNb','Scene_Equip_create','Scene_Map_initialize','Spriteset_Base_updatePosition','processCursorHomeEndTrigger','ZWpao','_clickHandler','etyxn','charAt','down','ONE_MINUS_SRC_ALPHA','Bitmap_blt','showDevTools','exp','WIN_OEM_ATTN','paramWidth','OzViO','writeFile','WIN_OEM_PA2','ctrl','_coreEasing','GetParamIcon','TextJS','F18','gaugeHeight','Spriteset_Base_destroy','CoreEngine','map','ItemRect','WIN_OEM_RESET','_digitGroupingEx','VXKxq','EditRect','allowShiftScrolling','mOxBd','Scene_Name_create','faceHeight','bgmVolume','sparamPlus','EVbBq','uloXO','NoTileShadows','MAXMP','CrisisRate','onload','HIT','ViCGi','randomJS','DigitGroupingGaugeSprites','Scene_Boot_startNormalGame','CRI','targetX','eDBKR','Window_Selectable_cursorUp','qCbVl','pictures','_playTestFastMode','ExtractStrFromList','#%1','titles1','Scene_Menu_create','2070XBPhXJ','OpenSpeed','0.00','_number','Bitmap_fillRect','Sprite_Actor_setActorHome','skillId','erasePicture','loadIconBitmap','QUESTION_MARK','repositionEnemiesByResolution','_updateFilterArea','TQMQg','addChildToBack','yGaws','exportAllMapStrings','\x0a\x20\x20\x20\x20\x20\x20\x20\x20try\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20%2\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20catch\x20(e)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20($gameTemp.isPlaytest())\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.log(\x27JS\x20Quick\x20Function\x20\x22%1\x22\x20Error!\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.log(e);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20','tpColor','qWsge','oqXuH','49yLJYPg','makeFontSmaller','Window_NumberInput_start','iLDOU','Game_Party_consumeItem','_width','lineHeight','itemSuccessRate','IconXParam7','paramValueByName','powerDownColor','_addShadow','yScrollLinkedOffset','_viewportSize','MEV','displayX','eZxdv','MAX_SAFE_INTEGER','tAfpB','IconXParam5','vEGgL','VOLUME_DOWN','GjqJA','BannedWords','updatePosition','_onKeyDown','responseText','battlebacks2','xparamFlatJS','EyUGV','CTB','uiAreaHeight','SCALE_MODES','SystemLoadAudio','max','create','onButtonImageLoad','onEscapeSuccess','transform','_pictureName','GameEnd','_margin','Game_Action_itemHit','process_VisuMZ_CoreEngine_jsQuickFunctions','Scene_Skill_create','return\x200','ouLmw','StatusRect','oyMar','gaugeLineHeight','buttonAssistKey1','Color','912073KNiTlW','NUMPAD5','setupButtonImage','itemPadding','Unnamed','paramFlat','NUMPAD3','jTmlk','updateTransform','Scene_Map_createMenuButton','DELETE','itemBackColor1','format','rTbnf','cyKLO','VOLUME_MUTE','IconParam2','LkxcY','fillText','seVolume','Param','OUTSINE','DOWN','itemEva','Game_Interpreter_command355','isMaxLevel','commandWindowRect','GEcCE','padding','updatePlayTestF7','VSlfe','ExportCurTroopText','boxWidth','Export\x20Map\x20Text\x20operation\x20will\x20finish\x20in\x20%1\x20ms(s)','REPLACE','isAlive','_centerElementCoreEngine','_stored_hpGaugeColor2','value','menuShowButton','ColorExpGauge1','initialBattleSystem','SnapshotOpacity','VisuMZ_2_BattleSystemFTB','《《《\x20Event\x20%1:\x20%2,\x20Page\x20%3\x20》》》\x0a%4\x0a','EXCLAMATION','isMenuButtonAssistEnabled','toLowerCase','statusParamsWindowRect','Window_NameInput_cursorLeft','Sprite_Gauge_gaugeRate','textColor','_mp','_repositioned','PreserveNumbers','isPlaytest','MGRvm','cursorPagedown','CmVqX','loadSystem','CancelText','createBackground','textWidth','itemRect','STENCIL_BUFFER_BIT','gDvJZ','updateMain','focus','Game_Troop_setup','stypeId','FUmSe','reservePlayTestNewGameCommonEvent','buttonAssistText4','updateBackOpacity','atbActive','Game_Temp_initialize','CcFKU','_buttonAssistWindow','dLCjd','GVYmG','xkJoA','([\x5c+\x5c-]\x5cd+)>','%1\x20is\x20incorrectly\x20placed\x20on\x20the\x20plugin\x20list.\x0aIt\x20is\x20a\x20Tier\x20%2\x20plugin\x20placed\x20over\x20other\x20Tier\x20%3\x20plugins.\x0aPlease\x20reorder\x20the\x20plugin\x20list\x20from\x20smallest\x20to\x20largest\x20tier\x20numbers.','onerror','_drawTextShadow','ParamChange','ColorGaugeBack','IconXParam9','OkText','eiKLt','paramRate1','CTRL','description','TIujm','AnimationMirrorOffset','startShake','KEEP','Window_Selectable_drawBackgroundRect','makeAutoBattleActions','add','setup','resetBattleSystem','ColorMaxLvGauge2','<JS\x20%1\x20%2:[\x20](.*)>','helpAreaTop','XDaEa','pageup','createPageButtons','getLastPluginCommandInterpreter','BWDvY','bitmapHeight','IconXParam4','switchModes','makeTargetSprites','LoadError','WIN_OEM_PA1','disable','DTB','_menuButton','ShopMenu','hLyRt','command105','IconSParam6','_clientArea','_stored_powerDownColor','cursorUp','targetEvaRate','mainAreaTop','Spriteset_Battle_createEnemies','ColorManager_loadWindowskin','EExdI','currentValue','showFauxAnimations','Game_Event_isCollidedWithEvents','Enable','ColorCrisis','CNT','Klyzd','WYOIU','dmQHC','lEEHf','setWindowPadding','terminate','Gjcbn','Symbol','INOUTQUINT','isUseModernControls','ColorMPCost','_opening','consumeItem','_changingClass','start','isBottomHelpMode','_forcedTroopView','visible','_fauxAnimationQueue','([\x5c+\x5c-]\x5cd+)([%％])>','TimeProgress','Tilemap_addShadow','itemBackColor2','_isWindow','INQUINT','attackSkillId','loadPicture','padZero','hZCpv','processCursorMoveModernControls','keyCode','outlineColorDmg','F22','data/','RlhuT','updatePictureAntiZoom','drawFace','battleSystem','aCcUK','process_VisuMZ_CoreEngine_Settings','CLOSE_PAREN','getInputButtonString','CustomParam','ApplyEasing','Location','drawItem','Window_Base_update','_centerElement','pixelated','SHIFT','Rate','Window_Base_initialize','contents','SceneManager_initialize','_hideTileShadows','CMdzl','_windowskin','Game_Picture_calcEasing','F15','629NMCdXN','_playtestF7Looping','actorWindowRect','wdFre','_moveEasingType','inbounce','gpaVz','mkiLB','smallParamFontSize','ParseEnemyNotetags','SzoxT','skillTypes','ENTER','aysPM','home','DNEYx','Game_BattlerBase_refresh','HelpRect','getLevel','Bitmap_gradientFillRect','currencyUnit','_mirror','imageSmoothingEnabled','DashToggleR','ModernControls','gold','IconParam5','drawSegment','Bitmap_clearRect','GLLQC','maxBattleMembers','DrawItemBackgroundJS','bgs','DOUBLE_QUOTE','Game_Picture_initBasic','MnNDW','updateOpacity','render','cdzwe','scaleMode','shake','F11','img/%1/','xMtSK','changeTextColor','ALT','Khjbw','AZsAP','bgCwA','DigitGroupingLocale','LxtIf','Title','Input_update','sv_actors','xparamFlat2','version','rgba(0,\x200,\x200,\x200.7)','PGDN','updateScene','none','gaugeBackColor','isOpenAndActive','ARRAYFUNC','drawBackgroundRect','ColorCTGauge1','updatePositionCoreEngineShakeHorz','initMembersCoreEngine','DimColor1','CustomParamIcons','targetY','Scene_Map_updateScene','clear','Window_NameInput_processHandling','LQRqm','gaugeRate','updateEffekseer','NBPvv','originalJS','_effectsContainer','Smooth','_defaultStretchMode','Scene_Battle_createCancelButton','playBuzzer','sJhnn','SwitchToggleOne','drawParamText','Icon','apply','LoadMenu','dimColor1','IconIndex','runCombinedScrollingTextAsCode','Window_NumberInput_processDigitChange','moveRelativeToResolutionChange','clearStencil','Graphics_defaultStretchMode','_shakeDuration','ActorTPColor','createMenuButton','LEFT','updateKeyText','catchNormalError','Scene_MenuBase_helpAreaTop','ICCsK','_baseTexture','DimColor2','createButtonAssistWindow','NCAkt','EXSEL','mev','gWdlH','fadeSpeed','F20','up2','setCoreEngineScreenShakeStyle','NewGameCommonEventAll','WIN_OEM_ENLW','snapForBackground','INOUTEXPO','mpColor','numberShowButton','width','〘Common\x20Event\x20%1:\x20%2〙\x20Start','isCollidedWithEvents','isPlaying','drawIcon','_editWindow','_duration','Export\x20Troop\x20Text\x20operation\x20will\x20finish\x20in\x20%1\x20ms(s)','getColorDataFromPluginParameters','menu','F23','TuMND','Game_Picture_y','\x5c}❪TAB❫\x5c{','clamp','drawGameSubtitle','MAXHP','uFDPm','checkCacheKey','code','mainAreaHeightSideButtonLayout','〖〖〖\x20Map\x20%1:\x20%2\x20Script\x20〗〗〗\x0a\x0a','ParamMax','onMoveEnd','Input_clear','onInputBannedWords','showPicture','StatusParamsRect','Game_Interpreter_command122','Scene_Title_drawGameTitle','forceStencil','repeat','_statusParamsWindow','OutlineColor','MCR','mainAreaHeight','lpyGV','StatusBgType','setupNewGame','_movementDuration','TextManager_param','processKeyboardHandling','substring','exportAllTroopStrings','_stored_ctGaugeColor1','iySEw','_setupEventHandlers','drawGameVersion','_stored_hpGaugeColor1','makeCommandList','CreateBattleSystemID','_baseSprite','isBottomButtonMode','mEuyN','RequireFocus','processEscape','_coreEasingType','applyCoreEasing','SParamVocab1','enableDigitGrouping','TGR','WARNING:\x20%1\x20has\x20already\x20been\x20declared\x0aand\x20cannot\x20be\x20used\x20as\x20a\x20Quick\x20JS\x20Function','innerHeight','Window','paramRate','Graphics_printError','BlurFilter','REC','〖〖〖\x20Troop\x20%1:\x20%2\x20Script\x20〗〗〗\x0a\x0a','open','bind','GoldChange','processKeyboardDelete','SParamVocab8','dGoXH','XParamVocab4','(\x5cd+\x5c.?\x5cd+)>','Window_NameInput_processTouch','ParseWeaponNotetags','drawTextEx','WASD','setHandler','ShowDevTools','itemLineRect','itypeId','PDR','paramBaseAboveLevel99','process_VisuMZ_CoreEngine_Functions','BTestItems','LevelUpFullHp','CallHandlerJS','FDR','Mofbs','XParameterFormula','updatePositionCoreEngineShakeRand','removeAllFauxAnimations','GoldOverlap','categoryWindowRect','NameMenu','missed','applyEasing','checkSmartEventCollision','_windowLayer','updatePositionCoreEngineShakeOriginal','NUMPAD0','type','ZCXTI','XParamVocab1','endAnimation','_hovered','_backgroundSprite','Input_setupEventHandlers','flush','ZOOM','UIkTk','30InKcHp','nw.gui','ZBakv','RIncJ','targetOpacity','COnfb','Ppaxc','paramX','ListBgType','IconSParam7','targetContentsOpacity','oAYMB','GESRK','_screenX','ShowJS','BattleSystem','TCR','QjKct','blt','changeClass','QUOTE','dgCXm','bNcnz','CustomParamNames','getButtonAssistLocation','batch','buttonAssistSwitch','ExportStrFromAllTroops','_pagedownButton','Window_NameInput_refresh','XbuaK','Sprite_Animation_processSoundTimings','image-rendering','INSINE','MIN_SAFE_INTEGER','isCursorMovable','CategoryBgType','NameInputMessage','_tempActor','DIVIDE','FontShadows','setEnemyAction','isSideButtonLayout','OpenURL','floor','492848LRyzME','_screenY','HELP','initCoreEasing','keypress','_CoreEngineSettings','_shouldPreventDefault','processBack','zVdmH','bRZyL','mXJot','Rate1','_battlerName','setupCoreEngine','paramRateJS','ExtJS','ADD','canUse','paramFlatBonus','SParamVocab0','lxGSU','IconSParam0','395951MUgOJv','makeDocumentTitle','PictureEraseRange','fsXZL','CommandBgType','StatusMenu','Cdmwc','animationBaseDelay','WeZKX','INOUTCUBIC','ayNZQ','buttonAssistText5','%1〘End\x20Choice\x20Selection〙%1','dJosD','IconSet','SParamVocab2','_paramPlus','TvXYF','INOUTQUAD','processMoveCommand','Spriteset_Base_initialize','isNumpadPressed','pagedown','skillTypeWindowRect','_customModified','isRightInputMode','colSpacing','437QfWMVe','KeyItemProtect','Enemy','Map%1','move','SParamVocab3','level','_skillTypeWindow','BottomHelp','hide','lntsc','ColorTPCost','qbFOl','DefaultMode','updateMotion','fromCharCode','_backSprite','targetSpritePosition','connected','isNwjs','VOyrQ','equips','QBQUe','EXR','ceil','initCoreEngineScreenShake','Scene_GameEnd_createBackground','xdg-open','xparamRate1','TextStr','isOpen','isExpGaugeDrawn','Graphics','_pageupButton','ESC','ExtractStrFromMap','VisuMZ_2_BattleSystemBTB','DrawIcons','PictureEraseAll','split','_timerSprite','buttonY','integer','advanced','duration','NUMPAD6','enable','CONVERT','ColorHPGauge1','Input_pollGamepads','traitObjects','〘Show\x20Text〙\x0a','mRCLK','XParamVocab6','valueOutlineColor','DrJUN','itemWindowRect','_stored_expGaugeColor2','platform','_hideButtons','key%1','sBSTb','SceneManager_isGameActive','_offsetX','GroupDigits','zokFt','DigitGroupingStandardText','updateOpen','WIN_OEM_CLEAR','IconParam4','InputBgType','processKeyboardDigitChange','drawNewParam','LESS_THAN','PsjeD','jDbzp','GcSCb','ZlIrN','TPB\x20ACTIVE','NUMPAD1','%1〘Choice\x20Cancel〙%1','params','RightMenus','_pauseSignSprite','NAcWL','xparamPlusJS','sparamPlusJS','cfbTq','NONCONVERT','blockWidth','WIN_OEM_JUMP','Flat','mapId','blendFunc','_listWindow','ColorSystem','Fempz','COLON','CommandRect','_pollGamepads','en-US','bMOYZ','addEventListener','YwEer','OjvMj','EnableNameInput','maxLvGaugeColor1','uahje','IconParam0','horizontal','sNbAi','retreat','_movementWholeDuration','Sprite_destroy','doesNameContainBannedWords','Game_Picture_move','setSize','areButtonsOutsideMainUI','select','hpGaugeColor1','Game_Actor_levelUp','playTestF7','Window_Base_drawIcon','lqyzP','addChild','loadMapData','_dimmerSprite','keyboard','pop','buttonAssistCancel','ItemBackColor1','JaywT','_inputWindow','GqZNM','aCZWr','setTargetAnchor','useDigitGroupingEx','Bitmap_drawCircle','VisuMZ_1_OptionsCore','IconParam7','Game_Actor_changeClass','XnPtR','OnLoadJS','CTekh','INQUAD','_cache','child_process','xparamRate2','ImprovedAccuracySystem','drawActorLevel','getCombinedScrollingText','itemHitImprovedAccuracy','random','meVolume','sqrt','gaJBX','toUpperCase','onDatabaseLoaded','performEscape','Scene_MenuBase_mainAreaHeight','LQdAU','process_VisuMZ_CoreEngine_RegExp','lTqJj','sparamPlus1','SellRect','call','SParamVocab7','ConvertParams','CommandWidth','EhxCb','IDs','_targetOffsetX','ExportCurMapText','Subtitle','length','》Comment《\x0a%1\x0a','bgsVolume','listWindowRect','isPhysical','setCoreEngineUpdateWindowBg','PositionX','hLGKA','ctZzt','_shakePower','makeFontBigger','zJCWd','ActorRect','paramBase','glLNq','Scene_MenuBase_mainAreaTop','_animation','playCursorSound','_stored_deathColor','_sideButtonLayout','Bitmap_resize','sparamFlat2','DataManager_setupNewGame','isWindowMaskingEnabled','buttonAssistWindowSideRect','_sellWindow','isClosed','reserveNewGameCommonEvent','setupBattleTestItems','CQUhI','HASH','nextLevelExp','RepositionActors','YktsZ','MenuLayout','InputRect','_downArrowSprite','mainAreaTopSideButtonLayout','_forcedBattleSys','default','loadGameImagesCoreEngine','encounterStepsMinimum','skills','_muteSound','isSmartEventCollisionOn','vertJS','_gamepadWait','ARRAYEVAL','_currentMap','statusEquipWindowRect','startMove','paramFlatJS','$dataMap','makeInputButtonString','_goldWindow','Layer','Scene_Battle_update','Vwfok','ExportAllTroopText','txKsX','_backgroundFilter','END','test','includes','_cancelButton','GbiZA','_inputSpecialKeyCode','setActorHome','stretch','AMPERSAND','_profileWindow','kqQJA','_stored_expGaugeColor1','horzJS','easingType','ubEpC','INOUTCIRC','mpGaugeColor1','QoL','overrideMimeType','AccuracyBoost','EditBgType','MzoSG','ColorTPGauge1','xJHdp','updateMainMultiply','processHandling','OptionsBgType','updatePositionCoreEngineShakeVert','maxGold','IconSParam9','_categoryWindow','_stored_crisisColor','RepositionEnemies','processDigitChange','parse','EREOF','resize','JJtPD','CgVSI','tpGaugeColor1','NaIJz','setActorHomeRepositioned','buttonAssistOffset2','KeyboardInput','fontSize','buttonAssistText1','animations','NUM','Speed','top','OPEN_CURLY_BRACKET','sPHLN','PLUS','IconSParam3','EPLsB','GRD','ParseAllNotetags','rTzXY','bbjIB','toLocaleString','terms','rgba(0,\x200,\x200,\x201.0)','xparam','_registerKeyInput','NumberRect','NUM_LOCK','deselect','tQtHB','result','AExqh','IconSParam2','startAnimation','Game_Picture_x','makeDeepCopy','_itemWindow','Window_Base_createTextState','areButtonsHidden','PictureEasingType','calcCoreEasing','_coreEngineShakeStyle','stencilFunc','bitmap','FontSize','cursorDown','clone','getInputMultiButtonStrings','processTouchModernControls','buttonAssistOffset5','EQUAL','GPnBU','send','CEV','ExportStrFromAllMaps','TldzD','initDigitGrouping','iconHeight','WIN_ICO_CLEAR','fXyLp','ScaleX','createFauxAnimation','URL','helpWindowRect','displayY','getCoreEngineScreenShakeStyle','isItem','editWindowRect','targetObjects','BTB','WIN_OEM_AUTO','processSoundTimings','createDimmerSprite','command122','maxLvGaugeColor2','Scene_Base_createWindowLayer','isGamepadConnected','cursorLeft','KEylv','PictureID','TextCodeNicknames','Window_Selectable_processTouch','SkillTypeRect','_realScale','ColorMPGauge2','paramRate2','_active','drawAllParams','playMiss','_fauxAnimationSprites','jUVlQ','IconSParam5','remove','command355','xlRud','Scene_MenuBase_createCancelButton','HYPHEN_MINUS','PLAY','mpCostColor','isFullDocumentTitle','uBKbj','SELECT','HOME','cursorRight','INBOUNCE','_bitmap','isItemStyle','TjELp','_buyWindow','dimColor2','isRepeated','DOLLAR','encounterStep','setMoveEasingType','style','PositionY','ButtonAssist','dashToggle','SCROLL_LOCK','SPACE','titles2','sv_enemies','RhBjf','context','retrieveFauxAnimation','KoJmF','itemHit','addWindow','onNameOk','repositionCancelButtonSideButtonLayout','BgFilename2','Untitled','DgfQw','contentsBack','Scene_Unlisted','_data','loadWindowskin','areTileShadowsHidden','ExtractStrFromTroop','keyMapper','measureTextWidth','isGamepadButtonPressed','JimYg','pictureButtons','_cacheScaleY','gainGold','sparamPlus2','ZHsNJ','ButtonHeight','ZAlAp','OTB','translucentOpacity','playTestF6','PHA','isOptionValid','drawValue','Scene_Status_create','kxOlt','prototype','yOyFV','expGaugeColor1','traitsPi','hideButtonFromView','BaseTexture','xparamFlat1','VisuMZ\x20CoreEngine\x20PictureIcon\x20%1\x20%2','touchUI','isHandled','guardSkillId','Chance','_optionsWindow','parseForcedGameTroopSettingsCoreEngine','SkillMenu','SlotBgType','LoLQn','StatusParamsBgType','numberWindowRect','get','buttonAssistOffset4','EscapeAlways','Window_NameInput_initialize','ATTN','levelUp','ApsRw','EVAL','index','_destroyInternalTextures','Scene_MenuBase_createBackground','scaleSprite','Total','defaultInputMode','BgFilename1','parallaxes','Window_Gold_refresh','ColorExpGauge2','MenuBg','isArrowPressed','WIN_ICO_00','TtTCH','text%1','VgUcK','Scene_Map_createSpriteset','XParamVocab2','anchor','STENCIL_TEST','drawActorSimpleStatus','ActorBgType','animationId','TitleCommandList','_colorCache','LvExpGauge','Game_Interpreter_command105','CIRCUMFLEX','IconXParam6','UNDERSCORE','removeChild','ctrlKey','subject','xonww'];const _0x2805a3=_0x5302;(function(_0x5604f7,_0x3ad505){const _0x5e4db2=_0x5302;while(!![]){try{const _0x57ccd1=parseInt(_0x5e4db2(0x1b1))+parseInt(_0x5e4db2(0x3b3))*parseInt(_0x5e4db2(0x2a7))+parseInt(_0x5e4db2(0x2ef))+-parseInt(_0x5e4db2(0x14b))*parseInt(_0x5e4db2(0x49f))+-parseInt(_0x5e4db2(0x4e2))+parseInt(_0x5e4db2(0x4cc))+parseInt(_0x5e4db2(0x2bb))*parseInt(_0x5e4db2(0x4fd));if(_0x57ccd1===_0x3ad505)break;else _0x5604f7['push'](_0x5604f7['shift']());}catch(_0x54115e){_0x5604f7['push'](_0x5604f7['shift']());}}}(_0x5ef9,0xed678));var label=_0x2805a3(0x284),tier=tier||0x0,dependencies=[],pluginData=$plugins[_0x2805a3(0x25c)](function(_0x3b8825){const _0x1ab7ef=_0x2805a3;return _0x3b8825['status']&&_0x3b8825[_0x1ab7ef(0x34b)]['includes']('['+label+']');})[0x0];VisuMZ[label][_0x2805a3(0x779)]=VisuMZ[label][_0x2805a3(0x779)]||{},VisuMZ['ConvertParams']=function(_0x16699a,_0x1af7f1){const _0x3c7769=_0x2805a3;for(const _0x1e1ef1 in _0x1af7f1){if(_0x1e1ef1[_0x3c7769(0x137)](/(.*):(.*)/i)){const _0x3e2c3d=String(RegExp['$1']),_0x12d6fe=String(RegExp['$2'])[_0x3c7769(0x599)]()['trim']();let _0x4c49b3,_0x527b59,_0x6358af;switch(_0x12d6fe){case _0x3c7769(0x617):_0x4c49b3=_0x1af7f1[_0x1e1ef1]!==''?Number(_0x1af7f1[_0x1e1ef1]):0x0;break;case _0x3c7769(0x777):_0x527b59=_0x1af7f1[_0x1e1ef1]!==''?JSON[_0x3c7769(0x60a)](_0x1af7f1[_0x1e1ef1]):[],_0x4c49b3=_0x527b59[_0x3c7769(0x285)](_0x543005=>Number(_0x543005));break;case _0x3c7769(0x6c6):_0x4c49b3=_0x1af7f1[_0x1e1ef1]!==''?eval(_0x1af7f1[_0x1e1ef1]):null;break;case _0x3c7769(0x5da):_0x527b59=_0x1af7f1[_0x1e1ef1]!==''?JSON['parse'](_0x1af7f1[_0x1e1ef1]):[],_0x4c49b3=_0x527b59[_0x3c7769(0x285)](_0x350c8e=>eval(_0x350c8e));break;case _0x3c7769(0xde):_0x4c49b3=_0x1af7f1[_0x1e1ef1]!==''?JSON[_0x3c7769(0x60a)](_0x1af7f1[_0x1e1ef1]):'';break;case _0x3c7769(0x73c):_0x527b59=_0x1af7f1[_0x1e1ef1]!==''?JSON[_0x3c7769(0x60a)](_0x1af7f1[_0x1e1ef1]):[],_0x4c49b3=_0x527b59[_0x3c7769(0x285)](_0x5d7c7e=>JSON[_0x3c7769(0x60a)](_0x5d7c7e));break;case'FUNC':_0x4c49b3=_0x1af7f1[_0x1e1ef1]!==''?new Function(JSON[_0x3c7769(0x60a)](_0x1af7f1[_0x1e1ef1])):new Function(_0x3c7769(0x2e8));break;case _0x3c7769(0x3f1):_0x527b59=_0x1af7f1[_0x1e1ef1]!==''?JSON[_0x3c7769(0x60a)](_0x1af7f1[_0x1e1ef1]):[],_0x4c49b3=_0x527b59['map'](_0x4fa8b9=>new Function(JSON['parse'](_0x4fa8b9)));break;case'STR':_0x4c49b3=_0x1af7f1[_0x1e1ef1]!==''?String(_0x1af7f1[_0x1e1ef1]):'';break;case'ARRAYSTR':_0x527b59=_0x1af7f1[_0x1e1ef1]!==''?JSON['parse'](_0x1af7f1[_0x1e1ef1]):[],_0x4c49b3=_0x527b59['map'](_0x4ab762=>String(_0x4ab762));break;case'STRUCT':_0x6358af=_0x1af7f1[_0x1e1ef1]!==''?JSON[_0x3c7769(0x60a)](_0x1af7f1[_0x1e1ef1]):{},_0x16699a[_0x3e2c3d]={},VisuMZ[_0x3c7769(0x5a4)](_0x16699a[_0x3e2c3d],_0x6358af);continue;case _0x3c7769(0x74f):_0x527b59=_0x1af7f1[_0x1e1ef1]!==''?JSON[_0x3c7769(0x60a)](_0x1af7f1[_0x1e1ef1]):[],_0x4c49b3=_0x527b59['map'](_0x55b60a=>VisuMZ[_0x3c7769(0x5a4)]({},JSON[_0x3c7769(0x60a)](_0x55b60a)));break;default:continue;}_0x16699a[_0x3e2c3d]=_0x4c49b3;}}return _0x16699a;},(_0x11e38a=>{const _0x93f0d7=_0x2805a3,_0x54318d=_0x11e38a[_0x93f0d7(0x7c5)];for(const _0xa5d548 of dependencies){if(!Imported[_0xa5d548]){alert(_0x93f0d7(0x7f0)[_0x93f0d7(0x2fb)](_0x54318d,_0xa5d548)),SceneManager[_0x93f0d7(0x780)]();break;}}const _0x4036a3=_0x11e38a[_0x93f0d7(0x34b)];if(_0x4036a3['match'](/\[Version[ ](.*?)\]/i)){if(_0x93f0d7(0x58c)==='cAbQM'){function _0x27fd13(){const _0x2c9a22=_0x93f0d7,_0x56b787=_0x2bcb37[_0x2c9a22(0x471)](_0x28fd61,_0x2c9a22(0xbb));}}else{const _0x1fc91d=Number(RegExp['$1']);_0x1fc91d!==VisuMZ[label][_0x93f0d7(0x3ea)]&&(alert('%1\x27s\x20version\x20does\x20not\x20match\x20plugin\x27s.\x20Please\x20update\x20it\x20in\x20the\x20Plugin\x20Manager.'['format'](_0x54318d,_0x1fc91d)),SceneManager[_0x93f0d7(0x780)]());}}if(_0x4036a3[_0x93f0d7(0x137)](/\[Tier[ ](\d+)\]/i)){const _0x3318c0=Number(RegExp['$1']);if(_0x3318c0<tier){if(_0x93f0d7(0x5e6)!=='sHEYy')alert('%1\x20is\x20incorrectly\x20placed\x20on\x20the\x20plugin\x20list.\x0aIt\x20is\x20a\x20Tier\x20%2\x20plugin\x20placed\x20over\x20other\x20Tier\x20%3\x20plugins.\x0aPlease\x20reorder\x20the\x20plugin\x20list\x20from\x20smallest\x20to\x20largest\x20tier\x20numbers.'[_0x93f0d7(0x2fb)](_0x54318d,_0x3318c0,tier)),SceneManager[_0x93f0d7(0x780)]();else{function _0x1831f6(){const _0x5aa367=_0x93f0d7;if(this[_0x5aa367(0x25f)]===_0x5aa367(0x57c)&&!_0x3cf61e[_0x5aa367(0x6d2)]())return;if(_0x19b7ea[_0x5aa367(0x4f7)]())return;_0x1b1e60[_0x5aa367(0x284)][_0x5aa367(0x1dc)][_0x5aa367(0x5a2)](this,_0x3ed11b),this[_0x5aa367(0x35f)]('default');}}}else{if(_0x93f0d7(0x3b9)!=='mvDuG')tier=Math[_0x93f0d7(0x2dd)](_0x3318c0,tier);else{function _0x4fccfc(){const _0x79ac0e=_0x93f0d7;if(this[_0x79ac0e(0x25f)]===_0x79ac0e(0x57c)){this['contents'][_0x79ac0e(0x3fa)](),this[_0x79ac0e(0x693)][_0x79ac0e(0x3fa)](),this[_0x79ac0e(0x262)]();let _0x2711fd=_0x141e6['CoreEngine']['Settings'][_0x79ac0e(0x613)][_0x79ac0e(0x4c4)][_0x79ac0e(0x524)]('\x0a'),_0x5aaf2a=_0x2711fd[_0x79ac0e(0x5ab)],_0x4e0cc4=(this[_0x79ac0e(0x46a)]-_0x5aaf2a*this['lineHeight']())/0x2;for(let _0x45ace0=0x0;_0x45ace0<_0x5aaf2a;++_0x45ace0){let _0x551d5e=_0x2711fd[_0x45ace0],_0x5d9fc3=this[_0x79ac0e(0x72f)](_0x551d5e)[_0x79ac0e(0x42c)],_0x3c4d77=_0x175dd9[_0x79ac0e(0x4cb)]((this[_0x79ac0e(0x3ac)][_0x79ac0e(0x42c)]-_0x5d9fc3)/0x2);this[_0x79ac0e(0x47b)](_0x551d5e,_0x3c4d77,_0x4e0cc4),_0x4e0cc4+=this[_0x79ac0e(0x2c1)]();}}else _0x26b23f['CoreEngine'][_0x79ac0e(0x4bc)][_0x79ac0e(0x5a2)](this);}}}}VisuMZ[_0x93f0d7(0x5a4)](VisuMZ[label][_0x93f0d7(0x779)],_0x11e38a[_0x93f0d7(0x7d6)]);})(pluginData),PluginManager['registerCommand'](pluginData[_0x2805a3(0x7c5)],'ExportAllMapText',_0x2c4d71=>{const _0x18c6db=_0x2805a3;if(!$gameTemp[_0x18c6db(0x326)]())return;if(!Utils[_0x18c6db(0x510)]())return;SceneManager['_scene'][_0x18c6db(0x664)]=![],VisuMZ['CoreEngine'][_0x18c6db(0x644)]();}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x5e5),_0x1d996e=>{const _0x216a4a=_0x2805a3;if(!$gameTemp[_0x216a4a(0x326)]())return;if(!Utils[_0x216a4a(0x510)]())return;SceneManager[_0x216a4a(0x807)][_0x216a4a(0x664)]=![],VisuMZ[_0x216a4a(0x284)][_0x216a4a(0x4ba)]();}),PluginManager['registerCommand'](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x5a9),_0x341884=>{const _0x232fea=_0x2805a3;if(!$gameTemp[_0x232fea(0x326)]())return;if(!Utils[_0x232fea(0x510)]())return;if(!$gameMap)return;if($gameMap['mapId']()<=0x0)return;VisuMZ[_0x232fea(0x5a4)](_0x341884,_0x341884);const _0x5a6bd9=_0x232fea(0x500)['format']($gameMap[_0x232fea(0x559)]()[_0x232fea(0x393)](0x3)),_0x1eff7a=VisuMZ[_0x232fea(0x284)][_0x232fea(0x520)]($gameMap[_0x232fea(0x559)]());VisuMZ[_0x232fea(0x284)][_0x232fea(0x110)](_0x1eff7a,_0x5a6bd9,!![]);}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x30e),_0xd983eb=>{const _0x19f368=_0x2805a3;if(!$gameTemp[_0x19f368(0x326)]())return;if(!Utils[_0x19f368(0x510)]())return;if(!$gameParty[_0x19f368(0x74e)]())return;VisuMZ[_0x19f368(0x5a4)](_0xd983eb,_0xd983eb);const _0x3930f5=_0x19f368(0x229)['format']($gameTroop['_troopId'][_0x19f368(0x393)](0x4)),_0x4e0dd8=VisuMZ[_0x19f368(0x284)][_0x19f368(0x698)]($gameTroop[_0x19f368(0x6f7)]);VisuMZ[_0x19f368(0x284)][_0x19f368(0x110)](_0x4e0dd8,_0x3930f5,!![]);}),VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x110)]=function(_0x20898a,_0x56ee55,_0x1ea275){const _0x49acd2=_0x2805a3,_0x34fd4a=require('fs');let _0x3636a8='Exported_Script_%1.txt'[_0x49acd2(0x2fb)](_0x56ee55||'0');_0x34fd4a['writeFile'](_0x3636a8,_0x20898a,_0x4b0a59=>{const _0x290faa=_0x49acd2;if(_0x4b0a59){if('iblXK'!==_0x290faa(0x5c8))throw err;else{function _0x3695ec(){const _0x5356ca=_0x290faa;if(_0x118358['CoreEngine'][_0x5356ca(0x779)][_0x5356ca(0x5f9)][_0x5356ca(0x4fe)]&&_0x129149[_0x5356ca(0x181)](_0x533a6e))return;_0x14a62f['CoreEngine'][_0x5356ca(0x2bf)][_0x5356ca(0x5a2)](this,_0x4a9509);}}}else{if(_0x1ea275){if(_0x290faa(0x6a1)!==_0x290faa(0x3ff))alert(_0x290faa(0x11f)[_0x290faa(0x2fb)](_0x3636a8));else{function _0x5f53e1(){const _0x2a1c29=_0x290faa;if(_0x4374fb[_0x2a1c29(0x284)]['Settings']['UI'][_0x2a1c29(0x78b)]){const _0x36ed97=_0x23e918['width']-_0x407cf5[_0x2a1c29(0x30f)]-_0x562fe9['CoreEngine'][_0x2a1c29(0x779)]['UI'][_0x2a1c29(0xe5)]*0x2,_0x299bbc=_0x43e4af[_0x2a1c29(0x6ac)][_0x2a1c29(0x556)][_0x2a1c29(0x5a2)](this)*0x4;if(_0x36ed97>=_0x299bbc)_0x2eefe2[_0x2a1c29(0x7c1)](!![]);}}}}}});},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x644)]=function(){const _0x247c61=_0x2805a3,_0x559510=[];for(const _0x4863c7 of $dataMapInfos){if(_0x247c61(0x71e)==='VcgtT'){function _0x594d45(){const _0x229a56=_0x247c61;this[_0x229a56(0x5bc)]();}}else{if(!_0x4863c7)continue;_0x559510[_0x247c61(0x156)](_0x4863c7['id']);}}const _0x3bb871=_0x559510[_0x247c61(0x5ab)]*0x64+Math[_0x247c61(0x1ae)](0x64);alert(_0x247c61(0x310)['format'](_0x3bb871)),this[_0x247c61(0x1f4)]=[],this['_currentMap']=$dataMap;for(const _0x481954 of _0x559510){VisuMZ[_0x247c61(0x284)][_0x247c61(0x57a)](_0x481954);}setTimeout(VisuMZ['CoreEngine'][_0x247c61(0x2b6)][_0x247c61(0x472)](this),_0x3bb871);},VisuMZ['CoreEngine'][_0x2805a3(0x57a)]=function(_0x541ea8){const _0x544a1e=_0x2805a3,_0x84efd=_0x544a1e(0x1ac)[_0x544a1e(0x2fb)](_0x541ea8[_0x544a1e(0x393)](0x3)),_0x8318a3=new XMLHttpRequest(),_0x1ab875=_0x544a1e(0x399)+_0x84efd;_0x8318a3['open'](_0x544a1e(0x711),_0x1ab875),_0x8318a3[_0x544a1e(0x5fa)](_0x544a1e(0x80b)),_0x8318a3[_0x544a1e(0x296)]=()=>this['storeMapData'](_0x8318a3,_0x541ea8,_0x84efd,_0x1ab875),_0x8318a3[_0x544a1e(0x342)]=()=>DataManager[_0x544a1e(0x14f)](_0x544a1e(0x5df),_0x84efd,_0x1ab875),_0x8318a3[_0x544a1e(0x642)]();},VisuMZ[_0x2805a3(0x284)]['storeMapData']=function(_0x58470b,_0x2c21e0,_0x204066,_0x11645f){const _0x4a96e3=_0x2805a3;$dataMap=JSON[_0x4a96e3(0x60a)](_0x58470b[_0x4a96e3(0x2d5)]),DataManager[_0x4a96e3(0x7a1)]($dataMap),this[_0x4a96e3(0x1f4)][_0x2c21e0]=VisuMZ['CoreEngine']['ExtractStrFromMap'](_0x2c21e0),$dataMap=this[_0x4a96e3(0x5db)];},VisuMZ[_0x2805a3(0x284)]['exportAllMapStrings']=function(){const _0x32f82=_0x2805a3,_0x584f0a='AllMaps';this[_0x32f82(0x1f4)][_0x32f82(0x66a)](undefined)[_0x32f82(0x66a)]('')['remove'](null);const _0x198515=this[_0x32f82(0x1f4)][_0x32f82(0x7fe)]('\x0a\x0a\x0a\x0a\x0a')['trim']();VisuMZ['CoreEngine'][_0x32f82(0x110)](_0x198515,_0x584f0a,!![]),SceneManager[_0x32f82(0x807)][_0x32f82(0x664)]=!![];},VisuMZ['CoreEngine'][_0x2805a3(0x520)]=function(_0x41300a){const _0x307dbe=_0x2805a3;if(!$dataMap)return'';let _0x3c6dc7='█'['repeat'](0x46)+'\x0a\x0a',_0xd7e96f='═'[_0x307dbe(0x44b)](0x46)+'\x0a\x0a',_0x214c9d='';this[_0x307dbe(0x151)]=0x0;for(const _0x1401be of $dataMap['events']){if(!_0x1401be)continue;let _0x35419e=_0x1401be['id'],_0x23760e=_0x1401be[_0x307dbe(0x7c5)],_0x15983f=_0x1401be[_0x307dbe(0xa5)];for(const _0xdc6c2c of _0x15983f){if(_0x307dbe(0x7ae)!==_0x307dbe(0x2be)){const _0xdfe044=_0x15983f[_0x307dbe(0x7a9)](_0xdc6c2c)+0x1;let _0x58fbc1=_0xd7e96f+_0x307dbe(0x31b),_0x1596b2=VisuMZ[_0x307dbe(0x284)]['ExtractStrFromList'](_0xdc6c2c[_0x307dbe(0x7cf)]);if(_0x1596b2[_0x307dbe(0x5ab)]>0x0){if('BtVVl'!==_0x307dbe(0x3bd)){if(_0x214c9d[_0x307dbe(0x5ab)]>0x0){if(_0x307dbe(0x2f6)!=='jTmlk'){function _0x40b1ed(){return _0x50db6d['getInputButtonString']('shift');}}else _0x214c9d+=_0xd7e96f+_0x307dbe(0x13e);}else{if('VYsyI'!==_0x307dbe(0x4ec)){const _0x249513=$dataMapInfos[_0x41300a]['name'];_0x214c9d+=_0x3c6dc7+_0x307dbe(0x441)[_0x307dbe(0x2fb)](_0x41300a,_0x249513||'Unnamed')+_0x3c6dc7;}else{function _0x44829c(){return this['_digitGroupingEx'];}}}_0x214c9d+=_0x58fbc1['format'](_0x35419e,_0x23760e,_0xdfe044,_0x1596b2);}else{function _0x327b94(){return _0x472dd3['layoutSettings']['ProfileRect']['call'](this);}}}}else{function _0xe38e68(){const _0x406091=_0x307dbe;_0x3661ac+=_0x54e9eb;if(_0x3b5f2a>=_0x29303f)_0x58a596=_0x568deb-0x1;this[_0x406091(0x7e8)](_0x142720);}}}}return _0x214c9d[_0x307dbe(0x5ab)]>0x0&&(_0x214c9d+=_0xd7e96f),_0x214c9d;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x4ba)]=function(){const _0x30a8c7=_0x2805a3,_0x1577b6=$dataTroops[_0x30a8c7(0x5ab)]*0xa+Math[_0x30a8c7(0x1ae)](0xa);alert(_0x30a8c7(0x433)[_0x30a8c7(0x2fb)](_0x1577b6));const _0x58b33d=[];for(const _0x2cfd5e of $dataTroops){if(_0x30a8c7(0x1c3)!=='lzuMU'){function _0x20fc04(){const _0x39e7df=_0x30a8c7;return _0x507588[_0x39e7df(0x284)][_0x39e7df(0x438)][_0x39e7df(0x5a2)](this);}}else{if(!_0x2cfd5e)continue;const _0x5540de=_0x2cfd5e['id'];_0x58b33d[_0x5540de]=VisuMZ[_0x30a8c7(0x284)][_0x30a8c7(0x698)](_0x5540de);}}setTimeout(VisuMZ[_0x30a8c7(0x284)]['exportAllTroopStrings'][_0x30a8c7(0x472)](this,_0x58b33d),_0x1577b6);},VisuMZ['CoreEngine'][_0x2805a3(0x698)]=function(_0x31c473){const _0x3515dd=_0x2805a3;if(!$dataTroops[_0x31c473])return'';let _0x31fe36='█'[_0x3515dd(0x44b)](0x46)+'\x0a\x0a',_0x2a0d9b='═'[_0x3515dd(0x44b)](0x46)+'\x0a\x0a',_0x3ee84c='';this[_0x3515dd(0x151)]=0x0;const _0x530e5b=$dataTroops[_0x31c473];let _0x1e4f89=_0x530e5b[_0x3515dd(0xa5)];for(const _0x355223 of _0x1e4f89){const _0x4fb9c8=_0x1e4f89[_0x3515dd(0x7a9)](_0x355223)+0x1;let _0x169874=_0x2a0d9b+'《《《\x20Page\x20%1\x20》》》\x0a%2\x0a',_0x117bff=VisuMZ[_0x3515dd(0x284)][_0x3515dd(0x2a3)](_0x355223[_0x3515dd(0x7cf)]);if(_0x117bff[_0x3515dd(0x5ab)]>0x0){if(_0x3ee84c['length']>0x0){if('xCidF'!==_0x3515dd(0x702)){function _0x217bee(){const _0x558fa1=_0x3515dd;_0x2a58bb[_0x558fa1(0x284)][_0x558fa1(0x370)][_0x558fa1(0x5a2)](this),this[_0x558fa1(0x6df)]=this['_colorCache']||{};}}else _0x3ee84c+=_0x2a0d9b+_0x3515dd(0x13e);}else{if(_0x3515dd(0x7b6)!=='XCYnT')_0x3ee84c+=_0x31fe36+_0x3515dd(0x470)[_0x3515dd(0x2fb)](_0x31c473,_0x530e5b[_0x3515dd(0x7c5)]||_0x3515dd(0x2f3))+_0x31fe36;else{function _0x3eb3cc(){const _0x1912f0=_0x3515dd;return _0x44b2d6[_0x1912f0(0x325)](_0x3c2363,'','');}}}_0x3ee84c+=_0x169874['format'](_0x4fb9c8,_0x117bff);}}return _0x3ee84c[_0x3515dd(0x5ab)]>0x0&&(_0x3ee84c+=_0x2a0d9b),_0x3ee84c;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x457)]=function(_0xa37fd9){const _0x5a5271=_0x2805a3,_0x5d117f=_0x5a5271(0x810);_0xa37fd9[_0x5a5271(0x66a)](undefined)[_0x5a5271(0x66a)]('')[_0x5a5271(0x66a)](null);const _0x27cfc9=_0xa37fd9[_0x5a5271(0x7fe)]('\x0a\x0a\x0a\x0a\x0a')[_0x5a5271(0xe2)]();VisuMZ[_0x5a5271(0x284)][_0x5a5271(0x110)](_0x27cfc9,_0x5d117f,!![]),SceneManager[_0x5a5271(0x807)][_0x5a5271(0x664)]=!![];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2a3)]=function(_0x11b60d){const _0x3a32f1=_0x2805a3;let _0x47a149='\x0a'+'─'[_0x3a32f1(0x44b)](0x46)+'\x0a',_0x5d8956='\x0a'+'┄'['repeat'](0x46)+'\x0a',_0x39fc16='';for(const _0x1f965e of _0x11b60d){if(!_0x1f965e)continue;if(_0x1f965e[_0x3a32f1(0x43f)]===0x65){_0x39fc16+=_0x47a149+'\x0a',_0x39fc16+=_0x3a32f1(0x530);if(_0x1f965e[_0x3a32f1(0x7d6)][0x4]!==''&&_0x1f965e[_0x3a32f1(0x7d6)][0x4]!==undefined){if(_0x3a32f1(0x2d8)!==_0x3a32f1(0x2d8)){function _0x1c071b(){const _0x2c905e=_0x3a32f1;return this[_0x2c905e(0x208)]();}}else _0x39fc16+=_0x3a32f1(0x157)[_0x3a32f1(0x2fb)](_0x1f965e[_0x3a32f1(0x7d6)][0x4]);}}else{if(_0x1f965e[_0x3a32f1(0x43f)]===0x191)_0x39fc16+=_0x3a32f1(0x1d8)[_0x3a32f1(0x2fb)](_0x1f965e[_0x3a32f1(0x7d6)][0x0]);else{if(_0x1f965e[_0x3a32f1(0x43f)]===0x192){if(_0x3a32f1(0xb1)!=='rWEob'){function _0x1142f0(){const _0x17c98e=_0x3a32f1;this[_0x17c98e(0x573)](-0x1);}}else _0x39fc16+=_0x47a149,_0x39fc16+=_0x3a32f1(0x77c)[_0x3a32f1(0x2fb)](_0x5d8956,_0x1f965e[_0x3a32f1(0x7d6)][0x0]+0x1,_0x1f965e['parameters'][0x1]);}else{if(_0x1f965e[_0x3a32f1(0x43f)]===0x193)_0x39fc16+=_0x47a149,_0x39fc16+=_0x3a32f1(0x54d)[_0x3a32f1(0x2fb)](_0x5d8956);else{if(_0x1f965e[_0x3a32f1(0x43f)]===0x194)_0x39fc16+=_0x47a149,_0x39fc16+=_0x3a32f1(0x4ee)[_0x3a32f1(0x2fb)](_0x5d8956);else{if(_0x1f965e['code']===0x69)_0x39fc16+=_0x47a149+'\x0a',_0x39fc16+='〘Scrolling\x20Text〙\x0a';else{if(_0x1f965e[_0x3a32f1(0x43f)]===0x6c){if('mpoDV'!==_0x3a32f1(0x6f8))_0x39fc16+=_0x47a149+'\x0a',_0x39fc16+=_0x3a32f1(0x5ac)[_0x3a32f1(0x2fb)](_0x1f965e[_0x3a32f1(0x7d6)][0x0]);else{function _0x3899b6(){const _0x41929a=_0x3a32f1;_0x2caa3f[_0x41929a(0x284)]['WindowLayer_render'][_0x41929a(0x5a2)](this,_0x1874a2);}}}else{if(_0x1f965e[_0x3a32f1(0x43f)]===0x198)_0x39fc16+='%1\x0a'[_0x3a32f1(0x2fb)](_0x1f965e['parameters'][0x0]);else{if(_0x1f965e[_0x3a32f1(0x43f)]===0x75){const _0x3538c0=$dataCommonEvents[_0x1f965e[_0x3a32f1(0x7d6)][0x0]];if(_0x3538c0&&this[_0x3a32f1(0x151)]<=0xa){if(_0x3a32f1(0x117)!==_0x3a32f1(0x117)){function _0x4955d5(){const _0x5f06da=_0x3a32f1;this[_0x5f06da(0x195)]['setBackgroundType'](_0x53d96c[_0x5f06da(0x266)][_0x5f06da(0x4e6)]);}}else{this[_0x3a32f1(0x151)]++;let _0x4f794e=VisuMZ[_0x3a32f1(0x284)][_0x3a32f1(0x2a3)](_0x3538c0[_0x3a32f1(0x7cf)]);_0x4f794e[_0x3a32f1(0x5ab)]>0x0&&(_0x39fc16+=_0x47a149,_0x39fc16+=_0x5d8956,_0x39fc16+=_0x3a32f1(0x42d)[_0x3a32f1(0x2fb)](_0x3538c0['id'],_0x3538c0['name']),_0x39fc16+=_0x5d8956,_0x39fc16+=_0x4f794e,_0x39fc16+=_0x5d8956,_0x39fc16+=_0x3a32f1(0x1b0)[_0x3a32f1(0x2fb)](_0x3538c0['id'],_0x3538c0[_0x3a32f1(0x7c5)]),_0x39fc16+=_0x5d8956),this[_0x3a32f1(0x151)]--;}}}}}}}}}}}}if(_0x39fc16['length']>0x0){if('YefrO'===_0x3a32f1(0x292)){function _0x3e5d32(){const _0x5075fe=_0x3a32f1;this[_0x5075fe(0x748)](...arguments);}}else _0x39fc16+=_0x47a149;}return _0x39fc16;},PluginManager[_0x2805a3(0x75f)](pluginData['name'],_0x2805a3(0x4ca),_0x92ab62=>{const _0x30d18a=_0x2805a3;VisuMZ[_0x30d18a(0x5a4)](_0x92ab62,_0x92ab62);const _0x5a22d2=_0x92ab62[_0x30d18a(0x64c)];VisuMZ[_0x30d18a(0x21b)](_0x5a22d2);}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x473),_0xa617b9=>{const _0x4cf85a=_0x2805a3;VisuMZ[_0x4cf85a(0x5a4)](_0xa617b9,_0xa617b9);const _0x10371a=_0xa617b9[_0x4cf85a(0x315)]||0x0;$gameParty[_0x4cf85a(0x69f)](_0x10371a);}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x635),_0x1b0c13=>{const _0x313f74=_0x2805a3;VisuMZ['ConvertParams'](_0x1b0c13,_0x1b0c13);const _0x22fc38=_0x1b0c13['pictureId']||0x1,_0x47027b=_0x1b0c13[_0x313f74(0x5f5)]||_0x313f74(0x146),_0x4726e8=$gameScreen[_0x313f74(0x6f9)](_0x22fc38);_0x4726e8&&_0x4726e8[_0x313f74(0x7a6)](_0x47027b);}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x523),_0x247426=>{const _0x1d1026=_0x2805a3;for(let _0x1203f6=0x1;_0x1203f6<=0x64;_0x1203f6++){$gameScreen[_0x1d1026(0x2ae)](_0x1203f6);}}),PluginManager['registerCommand'](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x4e4),_0x482031=>{const _0x5893d1=_0x2805a3;VisuMZ[_0x5893d1(0x5a4)](_0x482031,_0x482031);const _0x146a22=Math['min'](_0x482031[_0x5893d1(0x135)],_0x482031[_0x5893d1(0x1ab)]),_0x428272=Math['max'](_0x482031[_0x5893d1(0x135)],_0x482031[_0x5893d1(0x1ab)]);for(let _0x20fe3a=_0x146a22;_0x20fe3a<=_0x428272;_0x20fe3a++){if('GAxCt'!=='slbpg')$gameScreen[_0x5893d1(0x2ae)](_0x20fe3a);else{function _0x336c0b(){const _0x2bd2dd=_0x5893d1;return _0x1f8403[_0x2bd2dd(0x7f7)]-this[_0x2bd2dd(0xb6)]();}}}}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],'PictureShowIcon',_0xea3f19=>{const _0x576e5e=_0x2805a3;VisuMZ['ConvertParams'](_0xea3f19,_0xea3f19);const _0x2c8feb=Math[_0x576e5e(0x72b)](_0xea3f19[_0x576e5e(0x65d)])['clamp'](0x1,0x64),_0x116093=_0xea3f19[_0x576e5e(0x779)],_0x436e7d=_0x116093[_0x576e5e(0xa9)]['clamp'](0x0,0x1),_0x44bcff=Math[_0x576e5e(0x72b)](_0x116093[_0x576e5e(0x5b1)]||0x0),_0x38c825=Math[_0x576e5e(0x72b)](_0x116093[_0x576e5e(0x681)]||0x0),_0x4bcc2f=Math[_0x576e5e(0x72b)](_0x116093[_0x576e5e(0x64a)]||0x0),_0x269e36=Math[_0x576e5e(0x72b)](_0x116093['ScaleY']||0x0),_0x148c43=Math[_0x576e5e(0x72b)](_0x116093[_0x576e5e(0x75e)])[_0x576e5e(0x43a)](0x0,0xff),_0x408690=_0x116093[_0x576e5e(0x724)],_0x2a7080=_0x576e5e(0x6b3),_0x4ec4bd=_0xea3f19[_0x576e5e(0x402)]?_0x576e5e(0x402):_0x576e5e(0x71c),_0x599934=_0x2a7080[_0x576e5e(0x2fb)](_0xea3f19[_0x576e5e(0x40d)],_0x4ec4bd);$gameScreen[_0x576e5e(0x446)](_0x2c8feb,_0x599934,_0x436e7d,_0x44bcff,_0x38c825,_0x4bcc2f,_0x269e36,_0x148c43,_0x408690);}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x74a),_0x4826d1=>{const _0xbb134f=_0x2805a3;VisuMZ[_0xbb134f(0x5a4)](_0x4826d1,_0x4826d1);const _0x185dd4=_0x4826d1[_0xbb134f(0xae)]||_0xbb134f(0x595),_0x51f3eb=_0x4826d1['Power'][_0xbb134f(0x43a)](0x1,0x9),_0x4e3004=_0x4826d1[_0xbb134f(0x618)][_0xbb134f(0x43a)](0x1,0x9),_0x177264=_0x4826d1[_0xbb134f(0x16c)]||0x1,_0x34c0f6=_0x4826d1[_0xbb134f(0x187)];$gameScreen[_0xbb134f(0x425)](_0x185dd4),$gameScreen[_0xbb134f(0x34e)](_0x51f3eb,_0x4e3004,_0x177264);if(_0x34c0f6){if('FhJHt'===_0xbb134f(0xd7)){const _0x12d4e6=$gameTemp[_0xbb134f(0x35b)]();if(_0x12d4e6)_0x12d4e6['wait'](_0x177264);}else{function _0x129d62(){const _0x5e0b64=_0xbb134f,_0x23a316=_0x5f0ede[_0x5e0b64(0x284)]['Settings'][_0x5e0b64(0x613)];return this['_inputWindow'][_0x5e0b64(0x25f)]===_0x5e0b64(0x57c)?_0x23a316[_0x5e0b64(0x70d)]||'Keyboard':_0x23a316[_0x5e0b64(0x7d4)]||_0x5e0b64(0x7d4);}}}}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x8f),_0xd34130=>{const _0x3d2376=_0x2805a3;VisuMZ[_0x3d2376(0x5a4)](_0xd34130,_0xd34130);const _0x76511f=_0xd34130[_0x3d2376(0x1af)]||0x1;$gameSystem[_0x3d2376(0x23f)](_0x76511f);}),PluginManager[_0x2805a3(0x75f)](pluginData['name'],_0x2805a3(0xe9),_0xe554d2=>{const _0x490b5a=_0x2805a3;if($gameParty[_0x490b5a(0x74e)]())return;VisuMZ[_0x490b5a(0x5a4)](_0xe554d2,_0xe554d2);const _0x2ec2b1=_0xe554d2[_0x490b5a(0x1af)];if(_0x2ec2b1[_0x490b5a(0x137)](/Front/i)){if(_0x490b5a(0x3e5)==='RvZnO'){function _0x2adc15(){const _0x5cc8d2=_0x490b5a;this[_0x5cc8d2(0x5d1)]=_0x5cc8d2(0x653);}}else $gameSystem[_0x490b5a(0x735)](![]);}else{if(_0x2ec2b1[_0x490b5a(0x137)](/Side/i))$gameSystem[_0x490b5a(0x735)](!![]);else{if(_0x490b5a(0x136)!==_0x490b5a(0x27a))$gameSystem[_0x490b5a(0x735)](!$gameSystem[_0x490b5a(0x256)]());else{function _0x29edb5(){const _0x1050f3=_0x490b5a;return _0x2ffa70[_0x1050f3(0x63d)](_0x1050f3(0x359),_0x1050f3(0x4f8));}}}}}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x2dc),_0x1b4a73=>{const _0x5201de=_0x2805a3;if($gameParty[_0x5201de(0x74e)]())return;VisuMZ[_0x5201de(0x5a4)](_0x1b4a73,_0x1b4a73);const _0x2d8b54=['bgm',_0x5201de(0x3d3),'me','se'];for(const _0x1428f6 of _0x2d8b54){const _0x1764c8=_0x1b4a73[_0x1428f6],_0x10f1ab=_0x5201de(0x76b)[_0x5201de(0x2fb)](_0x1428f6);for(const _0x97bf6 of _0x1764c8){if(_0x5201de(0x96)!==_0x5201de(0x96)){function _0x264c12(){const _0x1bbf47=_0x5201de;this[_0x1bbf47(0x5bc)]();}}else AudioManager[_0x5201de(0xf5)](_0x10f1ab,_0x97bf6);}}}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],'SystemLoadImages',_0x45741f=>{const _0x1edc36=_0x2805a3;if($gameParty[_0x1edc36(0x74e)]())return;VisuMZ[_0x1edc36(0x5a4)](_0x45741f,_0x45741f);const _0x4c9788=[_0x1edc36(0x616),'battlebacks1',_0x1edc36(0x2d6),_0x1edc36(0x7ca),_0x1edc36(0x1bc),_0x1edc36(0x6fe),_0x1edc36(0x6ce),_0x1edc36(0x2a1),'sv_actors',_0x1edc36(0x687),_0x1edc36(0x1ff),_0x1edc36(0xd4),'titles1','titles2'];for(const _0x4a1447 of _0x4c9788){const _0x29bce6=_0x45741f[_0x4a1447],_0x2bc5fe=_0x1edc36(0x3dd)[_0x1edc36(0x2fb)](_0x4a1447);for(const _0x4bf3f8 of _0x29bce6){if(_0x1edc36(0x1ec)!==_0x1edc36(0x25b))ImageManager['loadBitmap'](_0x2bc5fe,_0x4bf3f8);else{function _0x2537b3(){const _0x1d5a6d=_0x1edc36;for(let _0x4f70a7=0x0;_0x4f70a7<this['numActions']();_0x4f70a7++){const _0x2fabd8=this[_0x1d5a6d(0x77f)]();let _0x1e4432=_0x1fdc17[_0x1d5a6d(0x4c1)];this[_0x1d5a6d(0x225)](_0x4f70a7,_0x2fabd8[0x0]);for(const _0x60e64a of _0x2fabd8){const _0x1658ea=_0x60e64a['evaluate']();_0x1658ea>_0x1e4432&&(_0x1e4432=_0x1658ea,this[_0x1d5a6d(0x225)](_0x4f70a7,_0x60e64a));}}this['setActionState'](_0x1d5a6d(0x7b1));}}}}}),PluginManager['registerCommand'](pluginData['name'],_0x2805a3(0x1c0),_0xd323ce=>{const _0x4a89d7=_0x2805a3;if($gameParty[_0x4a89d7(0x74e)]())return;VisuMZ[_0x4a89d7(0x5a4)](_0xd323ce,_0xd323ce);const _0x53b07a=_0xd323ce[_0x4a89d7(0x5a7)],_0x383146=(_0xd323ce[_0x4a89d7(0x6b7)]||0x0)/0x64;for(const _0x2374d6 of _0x53b07a){const _0xefc9c4=Math[_0x4a89d7(0x595)]()<=_0x383146;$gameSwitches[_0x4a89d7(0x149)](_0x2374d6,_0xefc9c4);}}),PluginManager['registerCommand'](pluginData[_0x2805a3(0x7c5)],'SwitchRandomizeRange',_0xee7190=>{const _0x129766=_0x2805a3;if($gameParty[_0x129766(0x74e)]())return;VisuMZ[_0x129766(0x5a4)](_0xee7190,_0xee7190);const _0x2d42c7=Math[_0x129766(0x24e)](_0xee7190[_0x129766(0x135)],_0xee7190[_0x129766(0x1ab)]),_0x5b1a4e=Math['max'](_0xee7190['StartID'],_0xee7190['EndingID']),_0x215d9c=(_0xee7190['Chance']||0x0)/0x64;for(let _0x17544c=_0x2d42c7;_0x17544c<=_0x5b1a4e;_0x17544c++){const _0x430765=Math[_0x129766(0x595)]()<=_0x215d9c;$gameSwitches[_0x129766(0x149)](_0x17544c,_0x430765);}}),PluginManager['registerCommand'](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x407),_0x5a3a1e=>{const _0x523d77=_0x2805a3;if($gameParty['inBattle']())return;VisuMZ[_0x523d77(0x5a4)](_0x5a3a1e,_0x5a3a1e);const _0x2b76da=_0x5a3a1e[_0x523d77(0x5a7)];for(const _0x31d3c8 of _0x2b76da){if(_0x523d77(0xfd)==='vrTBl'){function _0x2d9de8(){const _0x48f938=_0x523d77;_0x1fcea0[_0x48f938(0x284)][_0x48f938(0x4f6)]['call'](this),this['initMembersCoreEngine']();}}else{const _0x195427=$gameSwitches[_0x523d77(0x315)](_0x31d3c8);$gameSwitches[_0x523d77(0x149)](_0x31d3c8,!_0x195427);}}}),PluginManager['registerCommand'](pluginData['name'],_0x2805a3(0x233),_0x5d0ae5=>{const _0x5d06bc=_0x2805a3;if($gameParty[_0x5d06bc(0x74e)]())return;VisuMZ[_0x5d06bc(0x5a4)](_0x5d0ae5,_0x5d0ae5);const _0x1ab7f6=Math[_0x5d06bc(0x24e)](_0x5d0ae5[_0x5d06bc(0x135)],_0x5d0ae5[_0x5d06bc(0x1ab)]),_0xf0e829=Math['max'](_0x5d0ae5[_0x5d06bc(0x135)],_0x5d0ae5[_0x5d06bc(0x1ab)]);for(let _0x31b918=_0x1ab7f6;_0x31b918<=_0xf0e829;_0x31b918++){const _0x395a1a=$gameSwitches[_0x5d06bc(0x315)](_0x31b918);$gameSwitches[_0x5d06bc(0x149)](_0x31b918,!_0x395a1a);}}),PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x776),_0x5bac47=>{const _0x11b2e1=_0x2805a3;if($gameParty[_0x11b2e1(0x74e)]())return;VisuMZ[_0x11b2e1(0x5a4)](_0x5bac47,_0x5bac47);const _0x18b04a=_0x5bac47[_0x11b2e1(0x1af)][_0x11b2e1(0x599)]()['trim'](),_0x4d3a34=VisuMZ[_0x11b2e1(0x284)][_0x11b2e1(0x45e)](_0x18b04a);$gameSystem[_0x11b2e1(0x7d3)](_0x4d3a34);}),VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x45e)]=function(_0x2036da){const _0x17c765=_0x2805a3;_0x2036da=_0x2036da||'DATABASE',_0x2036da=String(_0x2036da)['toUpperCase']()[_0x17c765(0xe2)]();switch(_0x2036da){case _0x17c765(0x364):return 0x0;case _0x17c765(0x54b):Imported[_0x17c765(0x587)]&&(ConfigManager[_0x17c765(0x339)]=!![]);return 0x1;case'TPB\x20WAIT':if(Imported[_0x17c765(0x587)]){if(_0x17c765(0x33f)===_0x17c765(0x33f))ConfigManager[_0x17c765(0x339)]=![];else{function _0x2333ee(){var _0x1f3a4f=_0x38b905(_0x14b8f6['$1']);_0x39d4e7+=_0x1f3a4f;}}}return 0x2;case _0x17c765(0x2d9):if(Imported[_0x17c765(0x1f5)])return _0x17c765(0x2d9);break;case'STB':if(Imported[_0x17c765(0x808)]){if(_0x17c765(0x806)!==_0x17c765(0x806)){function _0x51e219(){const _0xed31d6=_0x17c765;_0x57b78d=_0x37a7d6[_0xed31d6(0x72b)](_0x28e08e),_0x43b7b0=_0x133c60[_0xed31d6(0x72b)](_0x47314c),_0x5d5cc0[_0xed31d6(0x284)][_0xed31d6(0x770)]['call'](this,_0x340fe0,_0x564215,_0x1ae98d,_0x51f203);}}else return'STB';}break;case'BTB':if(Imported['VisuMZ_2_BattleSystemBTB'])return _0x17c765(0x653);break;case _0x17c765(0x23d):if(Imported[_0x17c765(0x31a)]){if('tmgMq'===_0x17c765(0x722))return _0x17c765(0x23d);else{function _0x5d137f(){return 0.5*_0x309413*_0x30861a*((_0xdb2016+0x1)*_0x4d49fd-_0x26e411);}}}break;case _0x17c765(0x6a4):if(Imported[_0x17c765(0xb5)]){if(_0x17c765(0x378)!==_0x17c765(0x378)){function _0x110b90(){const _0x1c5a9a=_0x17c765,_0x3d8405=_0x73a99d[_0x1c5a9a(0x595)]()<=_0x7c5ebd;_0x1693bd[_0x1c5a9a(0x149)](_0x33fdf7,_0x3d8405);}}else return _0x17c765(0x6a4);}break;}return $dataSystem[_0x17c765(0x39d)];},PluginManager[_0x2805a3(0x75f)](pluginData[_0x2805a3(0x7c5)],_0x2805a3(0x1a4),_0x3225ae=>{const _0x334173=_0x2805a3;VisuMZ[_0x334173(0x5a4)](_0x3225ae,_0x3225ae);const _0x38d0e8=_0x3225ae['option']||0x1;$gameSystem['setWindowPadding'](_0x38d0e8);}),VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x245)]=Scene_Boot['prototype'][_0x2805a3(0x59a)],Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x59a)]=function(){const _0x41d9eb=_0x2805a3;VisuMZ[_0x41d9eb(0x284)][_0x41d9eb(0x245)][_0x41d9eb(0x5a2)](this),this[_0x41d9eb(0x59e)](),this[_0x41d9eb(0x750)](),this[_0x41d9eb(0x39f)](),this[_0x41d9eb(0x483)](),this[_0x41d9eb(0xe7)](),VisuMZ[_0x41d9eb(0x620)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x799)]={},Scene_Boot['prototype'][_0x2805a3(0x59e)]=function(){const _0x683ff4=_0x2805a3,_0x5a6d0b=[_0x683ff4(0x43c),_0x683ff4(0x294),'ATK',_0x683ff4(0x21f),_0x683ff4(0x198),'MDF',_0x683ff4(0x811),_0x683ff4(0x7cd)],_0x5cc309=[_0x683ff4(0x297),_0x683ff4(0x7de),_0x683ff4(0x29c),_0x683ff4(0x643),_0x683ff4(0x2c9),'MRF',_0x683ff4(0x377),_0x683ff4(0x778),_0x683ff4(0x12c),_0x683ff4(0x73d)],_0x5a2df3=[_0x683ff4(0x468),_0x683ff4(0x61f),_0x683ff4(0x46f),_0x683ff4(0x6a7),_0x683ff4(0x44e),_0x683ff4(0x4af),'PDR',_0x683ff4(0xb4),_0x683ff4(0x487),_0x683ff4(0x514)],_0x148433=[_0x5a6d0b,_0x5cc309,_0x5a2df3],_0x28d184=[_0x683ff4(0x158),_0x683ff4(0x1fc),_0x683ff4(0x9a),'Max',_0x683ff4(0x3aa),_0x683ff4(0x4d7),'Rate2',_0x683ff4(0x558),_0x683ff4(0x1aa),_0x683ff4(0x220)];for(const _0x504eed of _0x148433){let _0x221cdd='';if(_0x504eed===_0x5a6d0b)_0x221cdd=_0x683ff4(0x186);if(_0x504eed===_0x5cc309)_0x221cdd=_0x683ff4(0x626);if(_0x504eed===_0x5a2df3)_0x221cdd='sparam';for(const _0x431f15 of _0x28d184){let _0xa1a814='%1%2'['format'](_0x221cdd,_0x431f15);VisuMZ['CoreEngine']['RegExp'][_0xa1a814]=[],VisuMZ[_0x683ff4(0x284)]['RegExp'][_0xa1a814+'JS']=[];let _0x3c05be='<%1\x20%2:[\x20]';if([_0x683ff4(0x158),'Flat']['includes'](_0x431f15)){if(_0x683ff4(0x3e2)==='WnwVb'){function _0x24d3ed(){const _0x1314b7=_0x683ff4;if(_0x2b383f===_0x5496f2&&_0x217bd0%0x1===0x0)return _0x4f4d34;if(_0x58a954!==_0x234441&&[_0x1314b7(0x43c),_0x1314b7(0x294),_0x1314b7(0x753),_0x1314b7(0x21f),_0x1314b7(0x198),_0x1314b7(0x22c),_0x1314b7(0x811),_0x1314b7(0x7cd)]['includes'](_0x2d3047(_0x1a4c35)[_0x1314b7(0x599)]()['trim']()))return _0x55e00b;_0x48701b=_0xd022d9||0x0;if(_0x3e707e[_0x1314b7(0x284)][_0x1314b7(0x221)][_0x5c8d8f])return _0x4af23b[_0x1314b7(0x284)][_0x1314b7(0x9b)][_0x1564ad]==='integer'?_0x3bb3a2:_0x907ab1((_0x17be43*0x64)['toFixed'](_0x23b423))+'%';return _0x50f23e((_0x2aebee*0x64)['toFixed'](_0x13e274))+'%';}}else _0x3c05be+=_0x683ff4(0x340);}else{if(['Plus1',_0x683ff4(0x1aa)]['includes'](_0x431f15))_0x3c05be+=_0x683ff4(0x38b);else{if([_0x683ff4(0x9a),_0x683ff4(0x220)]['includes'](_0x431f15))_0x3c05be+=_0x683ff4(0xf4);else{if(_0x431f15===_0x683ff4(0x227)){if(_0x683ff4(0x80c)!==_0x683ff4(0x80c)){function _0x380394(){const _0x4dbdf2=_0x683ff4;_0x57db06[_0x4dbdf2(0x284)][_0x4dbdf2(0x46d)][_0x4dbdf2(0x5a2)](this,_0x458277,_0x2de5d0,_0x1339d0),_0x10307a[_0x4dbdf2(0x47e)](![]);}}else _0x3c05be+=_0x683ff4(0x20f);}else{if(_0x431f15===_0x683ff4(0x4d7))_0x3c05be+='(\x5cd+)([%％])>';else{if(_0x431f15===_0x683ff4(0x785)){if(_0x683ff4(0x582)==='GqZNM')_0x3c05be+=_0x683ff4(0x478);else{function _0x3fbec8(){const _0x48b3c2=_0x683ff4;_0x115b6d[_0x48b3c2(0x284)][_0x48b3c2(0x13d)][_0x48b3c2(0x5a2)](this),_0x45c127[_0x48b3c2(0x4c9)]()&&this['movePageButtonSideButtonLayout']();}}}}}}}}for(const _0x481737 of _0x504eed){let _0x4ea7a4=_0x431f15[_0x683ff4(0x7c6)](/[\d+]/g,'')[_0x683ff4(0x599)]();const _0x36a75f=_0x3c05be[_0x683ff4(0x2fb)](_0x481737,_0x4ea7a4);VisuMZ[_0x683ff4(0x284)][_0x683ff4(0x799)][_0xa1a814][_0x683ff4(0x156)](new RegExp(_0x36a75f,'i'));const _0x302fdd=_0x683ff4(0x356)[_0x683ff4(0x2fb)](_0x481737,_0x4ea7a4);VisuMZ['CoreEngine'][_0x683ff4(0x799)][_0xa1a814+'JS'][_0x683ff4(0x156)](new RegExp(_0x302fdd,'i'));}}}},Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x750)]=function(){if(VisuMZ['ParseAllNotetags'])return;},Scene_Boot['prototype']['process_VisuMZ_CoreEngine_Settings']=function(){const _0x32fde4=_0x2805a3;VisuMZ['CoreEngine'][_0x32fde4(0x779)][_0x32fde4(0x5f9)][_0x32fde4(0x7d2)]&&VisuMZ[_0x32fde4(0x47e)](!![]);VisuMZ[_0x32fde4(0x284)][_0x32fde4(0x779)]['QoL']['ModernControls']&&(Input[_0x32fde4(0x699)][0x23]=_0x32fde4(0x802),Input[_0x32fde4(0x699)][0x24]=_0x32fde4(0x3c1));if(VisuMZ[_0x32fde4(0x284)][_0x32fde4(0x779)][_0x32fde4(0x682)]){const _0xe39faf=VisuMZ['CoreEngine'][_0x32fde4(0x779)][_0x32fde4(0x682)];_0xe39faf['KeySHIFT']=_0xe39faf[_0x32fde4(0x1a3)]||_0x32fde4(0x25a),_0xe39faf[_0x32fde4(0x7cb)]=_0xe39faf[_0x32fde4(0x7cb)]||_0x32fde4(0x439);}if(VisuMZ[_0x32fde4(0x284)][_0x32fde4(0x779)][_0x32fde4(0x613)][_0x32fde4(0x47c)]){if(_0x32fde4(0x30a)!==_0x32fde4(0x5f2))Input[_0x32fde4(0x699)][0x57]='up',Input[_0x32fde4(0x699)][0x41]=_0x32fde4(0x174),Input[_0x32fde4(0x699)][0x53]=_0x32fde4(0x273),Input[_0x32fde4(0x699)][0x44]='right',Input[_0x32fde4(0x699)][0x45]=_0x32fde4(0x4f8);else{function _0x4a9482(){const _0x121c12=_0x32fde4;if(_0x59a046[_0x121c12(0x74e)]())return;_0x173f83[_0x121c12(0x5a4)](_0x48b33e,_0x23aed1);const _0x19e43e=_0xab65cd[_0x121c12(0x24e)](_0x298aad[_0x121c12(0x135)],_0x4a64ed[_0x121c12(0x1ab)]),_0x51ac9d=_0x5d270d['max'](_0x1f25b2[_0x121c12(0x135)],_0x68d2ff['EndingID']),_0x355358=(_0x302976[_0x121c12(0x6b7)]||0x0)/0x64;for(let _0x15f8da=_0x19e43e;_0x15f8da<=_0x51ac9d;_0x15f8da++){const _0x3f1aeb=_0x35eca7[_0x121c12(0x595)]()<=_0x355358;_0x148a45[_0x121c12(0x149)](_0x15f8da,_0x3f1aeb);}}}}if(VisuMZ['CoreEngine'][_0x32fde4(0x779)][_0x32fde4(0x613)][_0x32fde4(0x3ca)]){if(_0x32fde4(0x551)==='ydkAu'){function _0x44a990(){const _0x5e5cc8=_0x32fde4;this['_dummyWindow'][_0x5e5cc8(0x7ce)](_0x275755[_0x5e5cc8(0x266)][_0x5e5cc8(0x716)]);}}else Input[_0x32fde4(0x699)][0x52]=_0x32fde4(0x683);}},Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x483)]=function(){const _0x6d1eca=_0x2805a3;this[_0x6d1eca(0x2e6)]();},Scene_Boot[_0x2805a3(0x6ac)]['process_VisuMZ_CoreEngine_jsQuickFunctions']=function(){const _0xd4ac3d=_0x2805a3,_0x517869=VisuMZ['CoreEngine']['Settings']['jsQuickFunc'];for(const _0x206376 of _0x517869){const _0x349fb9=_0x206376[_0xd4ac3d(0x7e4)][_0xd4ac3d(0x7c6)](/[ ]/g,''),_0x26fc69=_0x206376[_0xd4ac3d(0x7f2)];VisuMZ[_0xd4ac3d(0x284)][_0xd4ac3d(0x7ba)](_0x349fb9,_0x26fc69);}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x7ba)]=function(_0x10fc36,_0x1b5073){const _0x4b4162=_0x2805a3;if(!!window[_0x10fc36]){if('jIpcd'===_0x4b4162(0x298)){function _0x120d84(){const _0xd38d60=_0x4b4162;return _0x53dd6b[_0xd38d60(0x79a)]()?_0x36f16c[_0xd38d60(0x79a)]()[_0xd38d60(0x4dd)](_0x144e31):_0x2ff5d5[_0xd38d60(0x6ac)][_0xd38d60(0x72e)][_0xd38d60(0x5a2)](this,_0x3b23de);}}else{if($gameTemp[_0x4b4162(0x326)]())console[_0x4b4162(0x77e)](_0x4b4162(0x469)[_0x4b4162(0x2fb)](_0x10fc36));}}const _0x496084=_0x4b4162(0x2b7)[_0x4b4162(0x2fb)](_0x10fc36,_0x1b5073);window[_0x10fc36]=new Function(_0x496084);},Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0xe7)]=function(){const _0x3b4f14=_0x2805a3,_0x2c6d7f=VisuMZ['CoreEngine'][_0x3b4f14(0x779)][_0x3b4f14(0x3a2)];if(!_0x2c6d7f)return;for(const _0x51b76d of _0x2c6d7f){if(!_0x51b76d)continue;VisuMZ['CoreEngine'][_0x3b4f14(0x1d2)](_0x51b76d);}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x4b6)]={},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x3f7)]={},VisuMZ[_0x2805a3(0x284)]['CustomParamType']={},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x221)]={},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x1d2)]=function(_0x5f0cbf){const _0x97d28f=_0x2805a3,_0x3495ae=_0x5f0cbf[_0x97d28f(0x6e9)],_0x5ee266=_0x5f0cbf['ParamName'],_0x24f2c4=_0x5f0cbf[_0x97d28f(0x409)],_0x12eef7=_0x5f0cbf[_0x97d28f(0xae)],_0x5b3cf4=new Function(_0x5f0cbf['ValueJS']);VisuMZ[_0x97d28f(0x284)][_0x97d28f(0x4b6)][_0x3495ae['toUpperCase']()['trim']()]=_0x5ee266,VisuMZ[_0x97d28f(0x284)][_0x97d28f(0x3f7)][_0x3495ae[_0x97d28f(0x599)]()[_0x97d28f(0xe2)]()]=_0x24f2c4,VisuMZ['CoreEngine']['CustomParamType'][_0x3495ae[_0x97d28f(0x599)]()['trim']()]=_0x12eef7,VisuMZ[_0x97d28f(0x284)][_0x97d28f(0x221)][_0x3495ae[_0x97d28f(0x599)]()[_0x97d28f(0xe2)]()]=_0x3495ae,Object[_0x97d28f(0x175)](Game_BattlerBase['prototype'],_0x3495ae,{'get'(){const _0x5d0994=_0x97d28f,_0x275a43=_0x5b3cf4['call'](this);return _0x12eef7===_0x5d0994(0x527)?Math[_0x5d0994(0x72b)](_0x275a43):_0x275a43;}});},VisuMZ[_0x2805a3(0x620)]=function(){const _0x525388=_0x2805a3;for(const _0x3c512d of $dataActors){if(_0x3c512d)VisuMZ[_0x525388(0x197)](_0x3c512d);}for(const _0x2fb5f4 of $dataClasses){if(_0x2fb5f4)VisuMZ['ParseClassNotetags'](_0x2fb5f4);}for(const _0x481297 of $dataSkills){if(_0x481297)VisuMZ[_0x525388(0x1b3)](_0x481297);}for(const _0x5f5277 of $dataItems){if(_0x525388(0x358)===_0x525388(0x358)){if(_0x5f5277)VisuMZ[_0x525388(0x155)](_0x5f5277);}else{function _0x599ca9(){return 0x0;}}}for(const _0x18c0af of $dataWeapons){if(_0x525388(0x14c)===_0x525388(0x14c)){if(_0x18c0af)VisuMZ[_0x525388(0x47a)](_0x18c0af);}else{function _0x470c9a(){const _0x134552=_0x525388,_0x2b87c7=_0x3850d3[_0x134552(0x284)][_0x134552(0x779)][_0x134552(0x22e)][_0x4c08e4],_0x463f03=_0x134552(0x3dd)[_0x134552(0x2fb)](_0x257a72);for(const _0x3d7ac6 of _0x2b87c7){_0x29ec32['loadBitmap'](_0x463f03,_0x3d7ac6);}}}}for(const _0xabce43 of $dataArmors){if('sUVQI'===_0x525388(0x4ef)){function _0x513990(){const _0x3a7072=_0x525388;try{_0x28d340['CoreEngine'][_0x3a7072(0x307)]['call'](this);}catch(_0x27c74c){_0x4e60c7[_0x3a7072(0x326)]()&&(_0x2f0c64['log'](_0x3a7072(0x204)),_0x2c2f5b[_0x3a7072(0x77e)](_0x27c74c));}return!![];}}else{if(_0xabce43)VisuMZ[_0x525388(0x93)](_0xabce43);}}for(const _0x1dda88 of $dataEnemies){if(_0x525388(0x5a6)!==_0x525388(0x5a6)){function _0x1ecc45(){const _0x506270=_0x525388;_0x5713fe[_0x506270(0x284)]['Window_Base_update'][_0x506270(0x5a2)](this),this[_0x506270(0x6fd)]();}}else{if(_0x1dda88)VisuMZ[_0x525388(0x3bc)](_0x1dda88);}}for(const _0x5f5bff of $dataStates){if(_0x5f5bff)VisuMZ[_0x525388(0x6f2)](_0x5f5bff);}for(const _0x3fd0a6 of $dataTilesets){if(_0x3fd0a6)VisuMZ['ParseTilesetNotetags'](_0x3fd0a6);}},VisuMZ['ParseActorNotetags']=function(_0x1cf55b){},VisuMZ[_0x2805a3(0x263)]=function(_0x3efad0){},VisuMZ[_0x2805a3(0x1b3)]=function(_0x3adb5d){},VisuMZ[_0x2805a3(0x155)]=function(_0x5103df){},VisuMZ[_0x2805a3(0x47a)]=function(_0x2cd6e3){},VisuMZ[_0x2805a3(0x93)]=function(_0x4f53cf){},VisuMZ['ParseEnemyNotetags']=function(_0x1549c2){},VisuMZ[_0x2805a3(0x6f2)]=function(_0x315024){},VisuMZ['ParseTilesetNotetags']=function(_0x48afa1){},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x197)]=VisuMZ[_0x2805a3(0x197)],VisuMZ[_0x2805a3(0x197)]=function(_0x4992fe){const _0x4a4dae=_0x2805a3;VisuMZ['CoreEngine'][_0x4a4dae(0x197)][_0x4a4dae(0x5a2)](this,_0x4992fe);const _0x2b5bf4=_0x4992fe[_0x4a4dae(0x22b)];if(_0x2b5bf4[_0x4a4dae(0x137)](/<MAX LEVEL:[ ](\d+)>/i)){_0x4992fe['maxLevel']=Number(RegExp['$1']);if(_0x4992fe[_0x4a4dae(0x10d)]===0x0)_0x4992fe[_0x4a4dae(0x10d)]=Number[_0x4a4dae(0x2cc)];}if(_0x2b5bf4['match'](/<INITIAL LEVEL:[ ](\d+)>/i)){if('xnZJO'==='xnZJO')_0x4992fe[_0x4a4dae(0x7ea)]=Math[_0x4a4dae(0x24e)](Number(RegExp['$1']),_0x4992fe[_0x4a4dae(0x10d)]);else{function _0x59865b(){var _0x425532=_0x5673fe(_0xe8aabd['$1']);_0x25a8a9+=_0x425532;}}}},VisuMZ['CoreEngine'][_0x2805a3(0x263)]=VisuMZ[_0x2805a3(0x263)],VisuMZ[_0x2805a3(0x263)]=function(_0x3428){const _0x3b9f3b=_0x2805a3;VisuMZ['CoreEngine'][_0x3b9f3b(0x263)][_0x3b9f3b(0x5a2)](this,_0x3428);if(_0x3428[_0x3b9f3b(0x24a)]){if(_0x3b9f3b(0x598)==='gaJBX')for(const _0x31ab54 of _0x3428[_0x3b9f3b(0x24a)]){_0x31ab54[_0x3b9f3b(0x22b)][_0x3b9f3b(0x137)](/<LEARN AT LEVEL:[ ](\d+)>/i)&&(_0x31ab54[_0x3b9f3b(0x503)]=Math[_0x3b9f3b(0x2dd)](Number(RegExp['$1']),0x1));}else{function _0x3b035c(){const _0x559c4c=_0x3b9f3b;this['_inputWindow'][_0x559c4c(0x7ce)](_0xf55770[_0x559c4c(0x266)][_0x559c4c(0x543)]);}}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x3bc)]=VisuMZ['ParseEnemyNotetags'],VisuMZ[_0x2805a3(0x3bc)]=function(_0x3495e8){const _0x25a5b1=_0x2805a3;VisuMZ[_0x25a5b1(0x284)]['ParseEnemyNotetags'][_0x25a5b1(0x5a2)](this,_0x3495e8),_0x3495e8[_0x25a5b1(0x503)]=0x1;const _0x2309c4=_0x3495e8['note'];if(_0x2309c4[_0x25a5b1(0x137)](/<LEVEL:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x503)]=Number(RegExp['$1']);if(_0x2309c4[_0x25a5b1(0x137)](/<MAXHP:[ ](\d+)>/i))_0x3495e8['params'][0x0]=Number(RegExp['$1']);if(_0x2309c4['match'](/<MAXMP:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x54e)][0x1]=Number(RegExp['$1']);if(_0x2309c4[_0x25a5b1(0x137)](/<ATK:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x54e)][0x2]=Number(RegExp['$1']);if(_0x2309c4['match'](/<DEF:[ ](\d+)>/i))_0x3495e8['params'][0x3]=Number(RegExp['$1']);if(_0x2309c4[_0x25a5b1(0x137)](/<MAT:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x54e)][0x4]=Number(RegExp['$1']);if(_0x2309c4['match'](/<MDF:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x54e)][0x5]=Number(RegExp['$1']);if(_0x2309c4[_0x25a5b1(0x137)](/<AGI:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x54e)][0x6]=Number(RegExp['$1']);if(_0x2309c4['match'](/<LUK:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x54e)][0x7]=Number(RegExp['$1']);if(_0x2309c4[_0x25a5b1(0x137)](/<EXP:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x277)]=Number(RegExp['$1']);if(_0x2309c4[_0x25a5b1(0x137)](/<GOLD:[ ](\d+)>/i))_0x3495e8[_0x25a5b1(0x3cc)]=Number(RegExp['$1']);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x412)]=Graphics[_0x2805a3(0x403)],Graphics[_0x2805a3(0x403)]=function(){const _0x11f06a=_0x2805a3;switch(VisuMZ['CoreEngine'][_0x11f06a(0x779)]['QoL'][_0x11f06a(0x15a)]){case _0x11f06a(0x5ef):return!![];case _0x11f06a(0x77d):return![];default:return VisuMZ['CoreEngine'][_0x11f06a(0x412)]['call'](this);}},VisuMZ[_0x2805a3(0x284)]['Graphics_printError']=Graphics[_0x2805a3(0x7c2)],Graphics['printError']=function(_0x8ae80f,_0x5a098c,_0x2c7186=null){const _0x9cb87c=_0x2805a3;VisuMZ[_0x9cb87c(0x284)][_0x9cb87c(0x46d)][_0x9cb87c(0x5a2)](this,_0x8ae80f,_0x5a098c,_0x2c7186),VisuMZ[_0x9cb87c(0x47e)](![]);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x1d0)]=Graphics['_centerElement'],Graphics[_0x2805a3(0x3a7)]=function(_0x11c188){const _0x1a8b73=_0x2805a3;VisuMZ[_0x1a8b73(0x284)][_0x1a8b73(0x1d0)]['call'](this,_0x11c188),this[_0x1a8b73(0x313)](_0x11c188);},Graphics[_0x2805a3(0x313)]=function(_0x212059){const _0x15a66c=_0x2805a3;VisuMZ[_0x15a66c(0x284)][_0x15a66c(0x779)][_0x15a66c(0x5f9)][_0x15a66c(0x804)]&&(_0x212059[_0x15a66c(0x680)]['font-smooth']=_0x15a66c(0x3ee));VisuMZ[_0x15a66c(0x284)][_0x15a66c(0x779)][_0x15a66c(0x5f9)][_0x15a66c(0x107)]&&(_0x212059[_0x15a66c(0x680)]['image-rendering']=_0x15a66c(0x3a8));const _0x242980=Math[_0x15a66c(0x2dd)](0x0,Math['floor'](_0x212059[_0x15a66c(0x42c)]*this[_0x15a66c(0x661)])),_0x2d6c03=Math[_0x15a66c(0x2dd)](0x0,Math[_0x15a66c(0x4cb)](_0x212059[_0x15a66c(0x80a)]*this[_0x15a66c(0x661)]));_0x212059[_0x15a66c(0x680)][_0x15a66c(0x42c)]=_0x242980+'px',_0x212059[_0x15a66c(0x680)][_0x15a66c(0x80a)]=_0x2d6c03+'px';},Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x226)]=function(){const _0x3d1a55=_0x2805a3;this[_0x3d1a55(0x4fa)]=!![];},VisuMZ['CoreEngine'][_0x2805a3(0x56e)]=Sprite['prototype'][_0x2805a3(0x1c9)],Sprite[_0x2805a3(0x6ac)][_0x2805a3(0x1c9)]=function(){const _0x4d22e8=_0x2805a3;VisuMZ[_0x4d22e8(0x284)][_0x4d22e8(0x56e)][_0x4d22e8(0x5a2)](this),this['destroyCoreEngineMarkedBitmaps']();},Sprite['prototype'][_0x2805a3(0x120)]=function(){const _0x250ee3=_0x2805a3;if(!this[_0x250ee3(0x639)])return;if(!this[_0x250ee3(0x639)][_0x250ee3(0x4fa)])return;this[_0x250ee3(0x639)][_0x250ee3(0x41b)]&&!this[_0x250ee3(0x677)][_0x250ee3(0x41b)][_0x250ee3(0x1cd)]&&this['bitmap'][_0x250ee3(0x1c9)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x5bf)]=Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x60c)],Bitmap['prototype'][_0x2805a3(0x60c)]=function(_0x137c99,_0x1f20a4){const _0xac01ce=_0x2805a3;VisuMZ[_0xac01ce(0x284)][_0xac01ce(0x5bf)][_0xac01ce(0x5a2)](this,_0x137c99,_0x1f20a4),this[_0xac01ce(0x226)]();},VisuMZ[_0x2805a3(0x284)]['Bitmap_blt']=Bitmap['prototype']['blt'],Bitmap['prototype'][_0x2805a3(0x4b1)]=function(_0x1ef2f6,_0x15c397,_0x455f16,_0x55cbc3,_0x110ab1,_0x5e71a6,_0x2f931f,_0x297d3a,_0x38617a){const _0x362381=_0x2805a3;VisuMZ[_0x362381(0x284)][_0x362381(0x275)]['call'](this,_0x1ef2f6,_0x15c397,_0x455f16,_0x55cbc3,_0x110ab1,_0x5e71a6,_0x2f931f,_0x297d3a,_0x38617a),this[_0x362381(0x226)]();},VisuMZ[_0x2805a3(0x284)]['Bitmap_clearRect']=Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x217)],Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x217)]=function(_0x5048a1,_0x472f49,_0x264915,_0x5ebb94){const _0x4021d5=_0x2805a3;VisuMZ['CoreEngine'][_0x4021d5(0x3cf)]['call'](this,_0x5048a1,_0x472f49,_0x264915,_0x5ebb94),this[_0x4021d5(0x226)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2ab)]=Bitmap['prototype'][_0x2805a3(0x7b9)],Bitmap[_0x2805a3(0x6ac)]['fillRect']=function(_0x23b39b,_0x3de9d5,_0x5151b8,_0x5d8997,_0x2173bd){const _0x37207d=_0x2805a3;VisuMZ[_0x37207d(0x284)][_0x37207d(0x2ab)][_0x37207d(0x5a2)](this,_0x23b39b,_0x3de9d5,_0x5151b8,_0x5d8997,_0x2173bd),this[_0x37207d(0x226)]();},VisuMZ['CoreEngine'][_0x2805a3(0x7fa)]=Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x6f0)],Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x6f0)]=function(_0x332c6c,_0xc23df5,_0x371a8c,_0x1d1602,_0x44b844){const _0x410616=_0x2805a3;VisuMZ[_0x410616(0x284)][_0x410616(0x7fa)][_0x410616(0x5a2)](this,_0x332c6c,_0xc23df5,_0x371a8c,_0x1d1602,_0x44b844),this[_0x410616(0x226)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x3c6)]=Bitmap['prototype'][_0x2805a3(0x177)],Bitmap[_0x2805a3(0x6ac)]['gradientFillRect']=function(_0xd6238b,_0x47a27d,_0x52715b,_0x34c15b,_0x91d579,_0x56afce,_0x43946b){const _0x4f6e17=_0x2805a3;VisuMZ[_0x4f6e17(0x284)][_0x4f6e17(0x3c6)]['call'](this,_0xd6238b,_0x47a27d,_0x52715b,_0x34c15b,_0x91d579,_0x56afce,_0x43946b),this['markCoreEngineModified']();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x586)]=Bitmap[_0x2805a3(0x6ac)]['drawCircle'],Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x7a5)]=function(_0x2590cc,_0x191d73,_0x4280d5,_0x356a8c){const _0xa16801=_0x2805a3;_0x2590cc=Math[_0xa16801(0x72b)](_0x2590cc),_0x191d73=Math[_0xa16801(0x72b)](_0x191d73),_0x4280d5=Math[_0xa16801(0x72b)](_0x4280d5),VisuMZ[_0xa16801(0x284)][_0xa16801(0x586)][_0xa16801(0x5a2)](this,_0x2590cc,_0x191d73,_0x4280d5,_0x356a8c),this['markCoreEngineModified']();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0xf8)]=Bitmap['prototype'][_0x2805a3(0x69a)],Bitmap['prototype'][_0x2805a3(0x69a)]=function(_0x3054fc){const _0x4695ba=_0x2805a3;return Math[_0x4695ba(0x72b)](VisuMZ['CoreEngine'][_0x4695ba(0xf8)]['call'](this,_0x3054fc));},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x759)]=Bitmap[_0x2805a3(0x6ac)]['drawText'],Bitmap[_0x2805a3(0x6ac)]['drawText']=function(_0x952321,_0x55828d,_0x3dd2f1,_0x362e90,_0x368f41,_0x1ada04){const _0xc9a5ff=_0x2805a3;_0x55828d=Math['round'](_0x55828d),_0x3dd2f1=Math[_0xc9a5ff(0x72b)](_0x3dd2f1),_0x362e90=Math[_0xc9a5ff(0x72b)](_0x362e90),_0x368f41=Math[_0xc9a5ff(0x72b)](_0x368f41),VisuMZ['CoreEngine'][_0xc9a5ff(0x759)][_0xc9a5ff(0x5a2)](this,_0x952321,_0x55828d,_0x3dd2f1,_0x362e90,_0x368f41,_0x1ada04),this[_0xc9a5ff(0x226)]();},VisuMZ['CoreEngine'][_0x2805a3(0x715)]=Bitmap['prototype'][_0x2805a3(0x215)],Bitmap['prototype'][_0x2805a3(0x215)]=function(_0x9968b,_0x474ef5,_0x40cfd4,_0x48d73b){const _0x93ec1a=_0x2805a3;if(VisuMZ[_0x93ec1a(0x284)]['Settings'][_0x93ec1a(0x5f9)][_0x93ec1a(0x4c7)])this[_0x93ec1a(0x343)](_0x9968b,_0x474ef5,_0x40cfd4,_0x48d73b);else{if('PUASf'===_0x93ec1a(0x7f9)){function _0x435594(){const _0x1837c2=_0x93ec1a;if(_0xc45d43[_0x1837c2(0x326)]())_0x2e4dee[_0x1837c2(0x77e)](_0x506917);}}else VisuMZ[_0x93ec1a(0x284)][_0x93ec1a(0x715)][_0x93ec1a(0x5a2)](this,_0x9968b,_0x474ef5,_0x40cfd4,_0x48d73b);}},Bitmap[_0x2805a3(0x6ac)][_0x2805a3(0x343)]=function(_0x1bb690,_0x5127e3,_0x5ef374,_0xb7e2b2){const _0x364b9b=_0x2805a3,_0x13a305=this[_0x364b9b(0x689)];_0x13a305[_0x364b9b(0x7e5)]=this[_0x364b9b(0x105)],_0x13a305[_0x364b9b(0x301)](_0x1bb690,_0x5127e3+0x2,_0x5ef374+0x2,_0xb7e2b2);},VisuMZ['CoreEngine'][_0x2805a3(0x444)]=Input[_0x2805a3(0x3fa)],Input[_0x2805a3(0x3fa)]=function(){const _0x14a375=_0x2805a3;VisuMZ[_0x14a375(0x284)][_0x14a375(0x444)][_0x14a375(0x5a2)](this),this[_0x14a375(0x111)]=undefined,this[_0x14a375(0x5ed)]=undefined,this[_0x14a375(0x5d9)]=Input[_0x14a375(0x6fb)];},VisuMZ['CoreEngine'][_0x2805a3(0x3e7)]=Input['update'],Input[_0x2805a3(0x1d5)]=function(){const _0x51a16b=_0x2805a3;VisuMZ[_0x51a16b(0x284)][_0x51a16b(0x3e7)][_0x51a16b(0x5a2)](this);if(this[_0x51a16b(0x5d9)])this['_gamepadWait']--;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x52e)]=Input[_0x2805a3(0x560)],Input[_0x2805a3(0x560)]=function(){const _0x421fff=_0x2805a3;if(this[_0x421fff(0x5d9)])return;VisuMZ['CoreEngine'][_0x421fff(0x52e)][_0x421fff(0x5a2)](this);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x49b)]=Input[_0x2805a3(0x45a)],Input[_0x2805a3(0x45a)]=function(){const _0x472f99=_0x2805a3;VisuMZ[_0x472f99(0x284)][_0x472f99(0x49b)][_0x472f99(0x5a2)](this),document[_0x472f99(0x563)](_0x472f99(0x4d0),this['_onKeyPress']['bind'](this));},VisuMZ[_0x2805a3(0x284)]['Input_onKeyDown']=Input[_0x2805a3(0x2d4)],Input[_0x2805a3(0x2d4)]=function(_0x295726){const _0x5626ca=_0x2805a3;this[_0x5626ca(0x5ed)]=_0x295726['keyCode'],VisuMZ[_0x5626ca(0x284)][_0x5626ca(0xc8)][_0x5626ca(0x5a2)](this,_0x295726);},Input[_0x2805a3(0xff)]=function(_0x26c379){const _0x410a7e=_0x2805a3;this[_0x410a7e(0x627)](_0x26c379);},Input[_0x2805a3(0x627)]=function(_0x32cc8b){const _0x5ab932=_0x2805a3;this['_inputSpecialKeyCode']=_0x32cc8b[_0x5ab932(0x396)];let _0x552d47=String[_0x5ab932(0x50c)](_0x32cc8b[_0x5ab932(0x761)]);if(this[_0x5ab932(0x111)]===undefined){if(_0x5ab932(0x4b0)!==_0x5ab932(0x4b0)){function _0x79457e(){const _0x34ea0d=_0x5ab932;return _0x4d96df[_0x34ea0d(0x807)][_0x34ea0d(0x5c2)]();}}else this[_0x5ab932(0x111)]=_0x552d47;}else{if(_0x5ab932(0x37b)!==_0x5ab932(0x37b)){function _0xff70b7(){const _0x16bd54=_0x5ab932;if(_0xb79365[_0x210e4f][_0x16bd54(0x159)])return!![];}}else this['_inputString']+=_0x552d47;}},VisuMZ['CoreEngine'][_0x2805a3(0xda)]=Input[_0x2805a3(0x4d2)],Input['_shouldPreventDefault']=function(_0x147a21){const _0x10bd92=_0x2805a3;if(_0x147a21===0x8)return![];return VisuMZ[_0x10bd92(0x284)][_0x10bd92(0xda)][_0x10bd92(0x5a2)](this,_0x147a21);},Input['isSpecialCode']=function(_0x270e65){const _0xbca099=_0x2805a3;if(_0x270e65['match'](/backspace/i))return this[_0xbca099(0x5ed)]===0x8;if(_0x270e65[_0xbca099(0x137)](/enter/i))return this['_inputSpecialKeyCode']===0xd;if(_0x270e65[_0xbca099(0x137)](/escape/i))return this['_inputSpecialKeyCode']===0x1b;},Input[_0x2805a3(0x4f7)]=function(){const _0x4491e3=_0x2805a3;return[0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39][_0x4491e3(0x141)](this[_0x4491e3(0x5ed)]);},Input['isArrowPressed']=function(){const _0x5be936=_0x2805a3;return[0x25,0x26,0x27,0x28][_0x5be936(0x141)](this['_inputSpecialKeyCode']);},Input[_0x2805a3(0x65a)]=function(){const _0x530d11=_0x2805a3;if(navigator[_0x530d11(0x756)]){const _0x479400=navigator[_0x530d11(0x756)]();if(_0x479400)for(const _0x2c2b71 of _0x479400){if(_0x2c2b71&&_0x2c2b71[_0x530d11(0x50f)]){if(_0x530d11(0x4a4)===_0x530d11(0x4d5)){function _0x444f6c(){const _0x24facb=_0x530d11;_0x5a7c9a[_0x24facb(0x5ab)]>0x0?_0x179728+=_0x561665+_0x24facb(0x13e):_0x1b4d34+=_0x2520c9+_0x24facb(0x470)['format'](_0x559148,_0x124410[_0x24facb(0x7c5)]||_0x24facb(0x2f3))+_0x134de1,_0x1b3451+=_0x33e478[_0x24facb(0x2fb)](_0x52d376,_0x4dc669);}}else return!![];}}}return![];},Input[_0x2805a3(0x6f6)]=function(){const _0x522c9f=_0x2805a3;if(navigator[_0x522c9f(0x756)]){const _0xdca60c=navigator['getGamepads']();if(_0xdca60c){if(_0x522c9f(0x329)===_0x522c9f(0x1a9)){function _0xd96101(){const _0x2bc7ea=_0x522c9f;this[_0x2bc7ea(0x383)]=![];}}else for(const _0x2feb9d of _0xdca60c){if('IvUJk'==='IvUJk'){if(_0x2feb9d&&_0x2feb9d[_0x522c9f(0x50f)]){if(this[_0x522c9f(0x69b)](_0x2feb9d))return!![];}}else{function _0x204507(){const _0x44bff0=_0x522c9f;var _0x2ccaab=_0x19c91d(_0x10f692['$1']);try{_0x291c55+=_0x573741(_0x2ccaab);}catch(_0x68c36b){if(_0x25f92f[_0x44bff0(0x326)]())_0x274b5b['log'](_0x68c36b);}}}}}}return![];},Input[_0x2805a3(0x69b)]=function(_0x255b44){const _0x33f6aa=_0x2805a3,_0x7e1763=_0x255b44['buttons'];for(let _0x496ed9=0x0;_0x496ed9<_0x7e1763['length'];_0x496ed9++){if(_0x7e1763[_0x496ed9][_0x33f6aa(0x159)])return!![];}return![];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x38d)]=Tilemap[_0x2805a3(0x6ac)][_0x2805a3(0x2c6)],Tilemap[_0x2805a3(0x6ac)][_0x2805a3(0x2c6)]=function(_0x1702de,_0x43c9e9,_0xe3afe5,_0x1b3865){const _0x4461ee=_0x2805a3;if($gameMap&&$gameMap[_0x4461ee(0x697)]())return;VisuMZ[_0x4461ee(0x284)][_0x4461ee(0x38d)][_0x4461ee(0x5a2)](this,_0x1702de,_0x43c9e9,_0xe3afe5,_0x1b3865);},Tilemap[_0x2805a3(0x1a6)][_0x2805a3(0x6ac)]['_createInternalTextures']=function(){const _0x2ea2f5=_0x2805a3;this[_0x2ea2f5(0x6c8)]();for(let _0x811ba6=0x0;_0x811ba6<Tilemap[_0x2ea2f5(0x5e2)]['MAX_GL_TEXTURES'];_0x811ba6++){if(_0x2ea2f5(0xca)===_0x2ea2f5(0xca)){const _0x23f24b=new PIXI[(_0x2ea2f5(0x6b1))]();_0x23f24b[_0x2ea2f5(0x571)](0x800,0x800),VisuMZ['CoreEngine']['Settings'][_0x2ea2f5(0x5f9)][_0x2ea2f5(0x107)]&&(_0x23f24b[_0x2ea2f5(0x3da)]=PIXI[_0x2ea2f5(0x2db)]['NEAREST']),this['_internalTextures']['push'](_0x23f24b);}else{function _0x4c7f20(){const _0x1def99=_0x2ea2f5;if(_0x5b82c3[_0x1def99(0x65a)]())return _0x1def99(0x5d2);return _0x5159a8[_0x1def99(0x284)][_0x1def99(0x779)]['KeyboardInput'][_0x1def99(0x50a)]||_0x1def99(0x57c);}}}},WindowLayer['prototype'][_0x2805a3(0x15e)]=function(){const _0x53ded6=_0x2805a3;if(SceneManager&&SceneManager[_0x53ded6(0x807)]){if(_0x53ded6(0x4d4)!==_0x53ded6(0x583))return SceneManager[_0x53ded6(0x807)][_0x53ded6(0x5c2)]();else{function _0x214d0a(){const _0x357524=_0x53ded6;_0xfdb03f-=_0x34510d;if(_0x28ec27<=0x0)_0x2c6fe5=0x0;this[_0x357524(0x7e8)](_0x5b2b3c);}}}else return!![];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x247)]=WindowLayer[_0x2805a3(0x6ac)][_0x2805a3(0x3d8)],WindowLayer[_0x2805a3(0x6ac)][_0x2805a3(0x3d8)]=function render(_0xae41f0){const _0x4cb8a1=_0x2805a3;if(this[_0x4cb8a1(0x15e)]())VisuMZ['CoreEngine'][_0x4cb8a1(0x247)]['call'](this,_0xae41f0);else{if('Khjbw'!==_0x4cb8a1(0x3e1)){function _0x3b6717(){const _0x4c0c07=_0x4cb8a1;return _0x4c0c07(0x23d);}}else this[_0x4cb8a1(0x1b5)](_0xae41f0);}},WindowLayer[_0x2805a3(0x6ac)][_0x2805a3(0x1b5)]=function render(_0x307050){const _0x52ad94=_0x2805a3;if(!this[_0x52ad94(0x389)])return;const _0x363b05=new PIXI[(_0x52ad94(0x51d))](),_0x3baa2a=_0x307050['gl'],_0x1968cb=this[_0x52ad94(0x730)][_0x52ad94(0x63c)]();_0x307050['framebuffer'][_0x52ad94(0x44a)](),_0x363b05[_0x52ad94(0x2e1)]=this[_0x52ad94(0x2e1)],_0x307050[_0x52ad94(0x4b8)][_0x52ad94(0x49c)](),_0x3baa2a[_0x52ad94(0x52b)](_0x3baa2a['STENCIL_TEST']);while(_0x1968cb[_0x52ad94(0x5ab)]>0x0){const _0x41b38c=_0x1968cb[_0x52ad94(0xfc)]();_0x41b38c[_0x52ad94(0x38f)]&&_0x41b38c[_0x52ad94(0x389)]&&_0x41b38c[_0x52ad94(0x176)]>0x0&&(_0x3baa2a[_0x52ad94(0x638)](_0x3baa2a[_0x52ad94(0x640)],0x0,~0x0),_0x3baa2a[_0x52ad94(0x70a)](_0x3baa2a['KEEP'],_0x3baa2a[_0x52ad94(0x34f)],_0x3baa2a[_0x52ad94(0x34f)]),_0x41b38c[_0x52ad94(0x3d8)](_0x307050),_0x307050[_0x52ad94(0x4b8)]['flush'](),_0x363b05[_0x52ad94(0x3fa)](),_0x3baa2a[_0x52ad94(0x638)](_0x3baa2a['ALWAYS'],0x1,~0x0),_0x3baa2a[_0x52ad94(0x70a)](_0x3baa2a['REPLACE'],_0x3baa2a['REPLACE'],_0x3baa2a['REPLACE']),_0x3baa2a[_0x52ad94(0x55a)](_0x3baa2a[_0x52ad94(0x7ee)],_0x3baa2a[_0x52ad94(0x71d)]),_0x363b05[_0x52ad94(0x3d8)](_0x307050),_0x307050[_0x52ad94(0x4b8)][_0x52ad94(0x49c)](),_0x3baa2a[_0x52ad94(0x55a)](_0x3baa2a[_0x52ad94(0x71d)],_0x3baa2a[_0x52ad94(0x274)]));}_0x3baa2a[_0x52ad94(0x363)](_0x3baa2a[_0x52ad94(0x6da)]),_0x3baa2a[_0x52ad94(0x3fa)](_0x3baa2a[_0x52ad94(0x32f)]),_0x3baa2a[_0x52ad94(0x411)](0x0),_0x307050[_0x52ad94(0x4b8)]['flush']();for(const _0x392c56 of this[_0x52ad94(0x730)]){!_0x392c56[_0x52ad94(0x38f)]&&_0x392c56['visible']&&_0x392c56[_0x52ad94(0x3d8)](_0x307050);}_0x307050[_0x52ad94(0x4b8)][_0x52ad94(0x49c)]();},DataManager[_0x2805a3(0x181)]=function(_0x58083a){const _0xf6b77f=_0x2805a3;return this['isItem'](_0x58083a)&&_0x58083a[_0xf6b77f(0x480)]===0x2;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x5c1)]=DataManager[_0x2805a3(0x452)],DataManager['setupNewGame']=function(){const _0x24d17c=_0x2805a3;VisuMZ[_0x24d17c(0x284)][_0x24d17c(0x5c1)]['call'](this),this[_0x24d17c(0x336)](),this[_0x24d17c(0x5c6)]();},DataManager[_0x2805a3(0x336)]=function(){const _0x5f1655=_0x2805a3;if($gameTemp['isPlaytest']()){if(_0x5f1655(0x49e)==='NBnCt'){function _0x53cfa5(){const _0x5217f0=_0x5f1655;let _0x13bfe9=0x0;return _0x29f168[_0x5217f0(0x572)]()?_0x13bfe9=this[_0x5217f0(0x440)]():_0x13bfe9=_0x361ca7[_0x5217f0(0x284)][_0x5217f0(0x59c)][_0x5217f0(0x5a2)](this),this[_0x5217f0(0x31d)]()&&this[_0x5217f0(0x4b7)]()!=='button'&&(_0x13bfe9-=_0x3014be['prototype'][_0x5217f0(0x2c1)]()),_0x13bfe9;}}else{const _0x13f263=VisuMZ['CoreEngine'][_0x5f1655(0x779)][_0x5f1655(0x5f9)]['NewGameCommonEvent'];if(_0x13f263>0x0)$gameTemp['reserveCommonEvent'](_0x13f263);}}},DataManager[_0x2805a3(0x5c6)]=function(){const _0x30cd55=_0x2805a3,_0x317bcd=VisuMZ[_0x30cd55(0x284)][_0x30cd55(0x779)]['QoL'][_0x30cd55(0x426)]||0x0;if(_0x317bcd>0x0)$gameTemp[_0x30cd55(0x704)](_0x317bcd);},TextManager['stringKeyMap']=['','','',_0x2805a3(0x7b3),'','',_0x2805a3(0x4ce),'','BACKSPACE',_0x2805a3(0x21d),'','',_0x2805a3(0x237),_0x2805a3(0x3bf),_0x2805a3(0x264),'',_0x2805a3(0x3a9),_0x2805a3(0x34a),_0x2805a3(0x3e0),'PAUSE',_0x2805a3(0x18f),_0x2805a3(0xbf),'EISU',_0x2805a3(0x798),'FINAL',_0x2805a3(0x243),'',_0x2805a3(0x51f),_0x2805a3(0x52c),_0x2805a3(0x555),_0x2805a3(0x213),_0x2805a3(0x709),_0x2805a3(0x685),_0x2805a3(0x7bd),_0x2805a3(0x3ec),_0x2805a3(0x5e8),_0x2805a3(0x674),_0x2805a3(0x416),'UP',_0x2805a3(0x214),_0x2805a3(0x305),_0x2805a3(0x673),'PRINT',_0x2805a3(0x734),'PRINTSCREEN','INSERT',_0x2805a3(0x2f9),'','0','1','2','3','4','5','6','7','8','9',_0x2805a3(0x55e),'SEMICOLON',_0x2805a3(0x546),_0x2805a3(0x1a0),_0x2805a3(0x7be),_0x2805a3(0x2b0),'AT','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','OS_KEY','','CONTEXT_MENU','',_0x2805a3(0x1e9),_0x2805a3(0x494),_0x2805a3(0x54c),_0x2805a3(0x127),_0x2805a3(0x2f5),_0x2805a3(0x80d),_0x2805a3(0x2f0),_0x2805a3(0x52a),_0x2805a3(0x99),'NUMPAD8',_0x2805a3(0x24b),_0x2805a3(0xd1),_0x2805a3(0x4dc),'SEPARATOR',_0x2805a3(0x7c8),_0x2805a3(0x793),_0x2805a3(0x4c6),'F1','F2','F3','F4','F5','F6','F7','F8','F9',_0x2805a3(0x754),_0x2805a3(0x3dc),_0x2805a3(0x737),_0x2805a3(0x6f5),_0x2805a3(0x7c4),_0x2805a3(0x3b2),'F16',_0x2805a3(0x238),_0x2805a3(0x281),_0x2805a3(0x267),_0x2805a3(0x423),'F21',_0x2805a3(0x398),_0x2805a3(0x436),'F24','','','','','','','','',_0x2805a3(0x629),_0x2805a3(0x684),_0x2805a3(0xad),_0x2805a3(0xc0),_0x2805a3(0x244),'WIN_OEM_FJ_LOYA',_0x2805a3(0x1d3),'','','','','','','','','',_0x2805a3(0x6e2),_0x2805a3(0x31c),_0x2805a3(0x3d4),_0x2805a3(0x5c9),_0x2805a3(0x67d),_0x2805a3(0x707),_0x2805a3(0x5f0),_0x2805a3(0x6e4),'OPEN_PAREN',_0x2805a3(0x3a0),_0x2805a3(0x16b),_0x2805a3(0x61c),_0x2805a3(0x1c4),_0x2805a3(0x66e),_0x2805a3(0x61a),'CLOSE_CURLY_BRACKET',_0x2805a3(0x733),'','','','',_0x2805a3(0x2fe),_0x2805a3(0x2d0),_0x2805a3(0x191),'','','SEMICOLON',_0x2805a3(0x1a0),_0x2805a3(0xbd),_0x2805a3(0x17e),_0x2805a3(0x726),'SLASH',_0x2805a3(0xeb),'','','','','','','','','','','','','','','','','','','','','','','','','','','OPEN_BRACKET',_0x2805a3(0x728),'CLOSE_BRACKET',_0x2805a3(0x4b3),'',_0x2805a3(0xa4),'ALTGR','',_0x2805a3(0x21e),_0x2805a3(0x6d3),'',_0x2805a3(0x648),'','',_0x2805a3(0x287),_0x2805a3(0x557),_0x2805a3(0x362),_0x2805a3(0x27c),_0x2805a3(0xa6),_0x2805a3(0x6ec),_0x2805a3(0x7f5),_0x2805a3(0x278),'WIN_OEM_FINISH','WIN_OEM_COPY',_0x2805a3(0x654),_0x2805a3(0x427),_0x2805a3(0x790),_0x2805a3(0x6c3),_0x2805a3(0x185),_0x2805a3(0x41f),_0x2805a3(0x60b),_0x2805a3(0x66f),_0x2805a3(0x49d),'',_0x2805a3(0x17c),_0x2805a3(0x541),''],TextManager['buttonAssistOk']=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x682)][_0x2805a3(0x347)],TextManager[_0x2805a3(0x57e)]=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x682)][_0x2805a3(0x32b)],TextManager[_0x2805a3(0x4b9)]=VisuMZ['CoreEngine'][_0x2805a3(0x779)][_0x2805a3(0x682)][_0x2805a3(0x795)],VisuMZ['CoreEngine'][_0x2805a3(0x454)]=TextManager[_0x2805a3(0x186)],TextManager[_0x2805a3(0x186)]=function(_0x4a4fd9){const _0x471b1c=_0x2805a3;if(typeof _0x4a4fd9===_0x471b1c(0x801)){if(_0x471b1c(0x13f)!==_0x471b1c(0x13f)){function _0x277242(){const _0x4909e8=_0x471b1c;let _0x4cb6f2=_0x597eb6[_0x4909e8(0x284)][_0x4909e8(0x242)][_0x4909e8(0x5a2)](this,_0x1301ba);return _0x4cb6f2['x']=_0x119f62[_0x4909e8(0x72b)](_0x4cb6f2['x']),_0x4cb6f2['y']=_0x1f642c['round'](_0x4cb6f2['y']),_0x4cb6f2[_0x4909e8(0x42c)]=_0x52865d[_0x4909e8(0x72b)](_0x4cb6f2[_0x4909e8(0x42c)]),_0x4cb6f2['height']=_0x39c265[_0x4909e8(0x72b)](_0x4cb6f2['height']),_0x4cb6f2;}}else return VisuMZ['CoreEngine'][_0x471b1c(0x454)][_0x471b1c(0x5a2)](this,_0x4a4fd9);}else return this[_0x471b1c(0x202)](_0x4a4fd9);},TextManager[_0x2805a3(0x202)]=function(_0x7438b2){const _0xe427ad=_0x2805a3;_0x7438b2=String(_0x7438b2||'')['toUpperCase']();const _0x3f14fc=VisuMZ[_0xe427ad(0x284)][_0xe427ad(0x779)]['Param'];if(_0x7438b2===_0xe427ad(0x43c))return $dataSystem[_0xe427ad(0x624)]['params'][0x0];if(_0x7438b2===_0xe427ad(0x294))return $dataSystem[_0xe427ad(0x624)]['params'][0x1];if(_0x7438b2===_0xe427ad(0x753))return $dataSystem[_0xe427ad(0x624)]['params'][0x2];if(_0x7438b2===_0xe427ad(0x21f))return $dataSystem[_0xe427ad(0x624)]['params'][0x3];if(_0x7438b2===_0xe427ad(0x198))return $dataSystem[_0xe427ad(0x624)][_0xe427ad(0x54e)][0x4];if(_0x7438b2===_0xe427ad(0x22c))return $dataSystem[_0xe427ad(0x624)][_0xe427ad(0x54e)][0x5];if(_0x7438b2===_0xe427ad(0x811))return $dataSystem[_0xe427ad(0x624)]['params'][0x6];if(_0x7438b2==='LUK')return $dataSystem[_0xe427ad(0x624)][_0xe427ad(0x54e)][0x7];if(_0x7438b2==='HIT')return _0x3f14fc[_0xe427ad(0x148)];if(_0x7438b2===_0xe427ad(0x7de))return _0x3f14fc[_0xe427ad(0x497)];if(_0x7438b2===_0xe427ad(0x29c))return _0x3f14fc[_0xe427ad(0x6d8)];if(_0x7438b2===_0xe427ad(0x643))return _0x3f14fc[_0xe427ad(0x1fa)];if(_0x7438b2==='MEV')return _0x3f14fc[_0xe427ad(0x477)];if(_0x7438b2===_0xe427ad(0x118))return _0x3f14fc['XParamVocab5'];if(_0x7438b2===_0xe427ad(0x377))return _0x3f14fc['XParamVocab6'];if(_0x7438b2===_0xe427ad(0x778))return _0x3f14fc[_0xe427ad(0xa3)];if(_0x7438b2===_0xe427ad(0x12c))return _0x3f14fc['XParamVocab8'];if(_0x7438b2===_0xe427ad(0x73d))return _0x3f14fc[_0xe427ad(0x164)];if(_0x7438b2==='TGR')return _0x3f14fc[_0xe427ad(0x4df)];if(_0x7438b2==='GRD')return _0x3f14fc[_0xe427ad(0x466)];if(_0x7438b2==='REC')return _0x3f14fc['SParamVocab2'];if(_0x7438b2===_0xe427ad(0x6a7))return _0x3f14fc[_0xe427ad(0x502)];if(_0x7438b2===_0xe427ad(0x44e))return _0x3f14fc[_0xe427ad(0x1c5)];if(_0x7438b2===_0xe427ad(0x4af))return _0x3f14fc[_0xe427ad(0x6f4)];if(_0x7438b2===_0xe427ad(0x481))return _0x3f14fc[_0xe427ad(0x154)];if(_0x7438b2===_0xe427ad(0xb4))return _0x3f14fc[_0xe427ad(0x5a3)];if(_0x7438b2==='FDR')return _0x3f14fc[_0xe427ad(0x475)];if(_0x7438b2===_0xe427ad(0x514))return _0x3f14fc[_0xe427ad(0x76e)];if(VisuMZ[_0xe427ad(0x284)]['CustomParamNames'][_0x7438b2]){if(_0xe427ad(0x4e8)==='BWrHf'){function _0x24cdc3(){const _0x44c869=_0xe427ad;this[_0x44c869(0x30b)]=_0x5cfe14['_scene'][_0x44c869(0x4b7)]()!==_0x44c869(0xe8)?0x0:0x8;}}else return VisuMZ[_0xe427ad(0x284)]['CustomParamNames'][_0x7438b2];}return'';},TextManager['getInputButtonString']=function(_0x45c2a7){const _0x1a681b=_0x2805a3;if(_0x45c2a7==='cancel')_0x45c2a7='escape';let _0x301942=[];for(let _0x585bae in Input[_0x1a681b(0x699)]){_0x585bae=Number(_0x585bae);if(_0x585bae>=0x60&&_0x585bae<=0x69)continue;if([0x12,0x20][_0x1a681b(0x5ea)](_0x585bae))continue;if(_0x45c2a7===Input[_0x1a681b(0x699)][_0x585bae]){if(_0x1a681b(0x5e4)===_0x1a681b(0x289)){function _0x3817a0(){const _0x4f669e=_0x1a681b;this[_0x4f669e(0x671)]()?this[_0x4f669e(0x4e3)]():_0x10b4a7[_0x4f669e(0x284)][_0x4f669e(0x126)][_0x4f669e(0x5a2)](this);}}else _0x301942[_0x1a681b(0x156)](_0x585bae);}}for(let _0x4962f7=0x0;_0x4962f7<_0x301942[_0x1a681b(0x5ab)];_0x4962f7++){if(_0x1a681b(0x6fa)!==_0x1a681b(0x379))_0x301942[_0x4962f7]=TextManager[_0x1a681b(0x19d)][_0x301942[_0x4962f7]];else{function _0x3ff8bf(){const _0xba9232=_0x1a681b;this[_0xba9232(0x5d1)]=_0xba9232(0x6a4);}}}return this[_0x1a681b(0x5e0)](_0x301942);},TextManager[_0x2805a3(0x5e0)]=function(_0x37388b){const _0x556058=_0x2805a3,_0x3c7e89=VisuMZ['CoreEngine']['Settings'][_0x556058(0x682)],_0xbe6be=_0x3c7e89[_0x556058(0xf7)],_0x44a2b0=_0x37388b[_0x556058(0x57d)](),_0x2105d1=_0x556058(0x12e)[_0x556058(0x2fb)](_0x44a2b0);return _0x3c7e89[_0x2105d1]?_0x3c7e89[_0x2105d1]:_0xbe6be[_0x556058(0x2fb)](_0x44a2b0);},TextManager[_0x2805a3(0x63d)]=function(_0x39481e,_0x7c6c12){const _0x560a48=_0x2805a3,_0x5b9ddf=VisuMZ[_0x560a48(0x284)][_0x560a48(0x779)][_0x560a48(0x682)],_0x46e056=_0x5b9ddf[_0x560a48(0x1ba)],_0x1c14ee=this['getInputButtonString'](_0x39481e),_0x342316=this[_0x560a48(0x3a1)](_0x7c6c12);return _0x46e056[_0x560a48(0x2fb)](_0x1c14ee,_0x342316);},VisuMZ[_0x2805a3(0x284)]['ColorManager_loadWindowskin']=ColorManager[_0x2805a3(0x696)],ColorManager['loadWindowskin']=function(){const _0x151cda=_0x2805a3;VisuMZ[_0x151cda(0x284)][_0x151cda(0x370)][_0x151cda(0x5a2)](this),this[_0x151cda(0x6df)]=this[_0x151cda(0x6df)]||{};},ColorManager[_0x2805a3(0x434)]=function(_0x3ca872,_0x2a819e){const _0x2a57c5=_0x2805a3;_0x2a819e=String(_0x2a819e),this[_0x2a57c5(0x6df)]=this[_0x2a57c5(0x6df)]||{};if(_0x2a819e[_0x2a57c5(0x137)](/#(.*)/i))this[_0x2a57c5(0x6df)][_0x3ca872]=_0x2a57c5(0x2a4)['format'](String(RegExp['$1']));else{if(_0x2a57c5(0x54a)!==_0x2a57c5(0x54a)){function _0x181d9b(){const _0x53b617=_0x2a57c5;return this['EnableNameInput']()?_0x525bda[_0x53b617(0x3a1)]('tab'):_0x12a10d[_0x53b617(0x6ac)]['buttonAssistKey1']['call'](this);}}else this[_0x2a57c5(0x6df)][_0x3ca872]=this[_0x2a57c5(0x322)](Number(_0x2a819e));}return this[_0x2a57c5(0x6df)][_0x3ca872];},ColorManager[_0x2805a3(0x116)]=function(_0x3787b2){const _0xd584fd=_0x2805a3;_0x3787b2=String(_0x3787b2);if(_0x3787b2['match'](/#(.*)/i)){if(_0xd584fd(0x547)===_0xd584fd(0x547))return'#%1'['format'](String(RegExp['$1']));else{function _0x2f779e(){const _0x568f7e=_0xd584fd,_0x18acc2=_0x568f7e(0x5bd);this[_0x568f7e(0x6df)]=this['_colorCache']||{};if(this['_colorCache'][_0x18acc2])return this[_0x568f7e(0x6df)][_0x18acc2];const _0x4374de=_0x55e1f2['CoreEngine'][_0x568f7e(0x779)][_0x568f7e(0x2ee)][_0x568f7e(0x13a)];return this[_0x568f7e(0x434)](_0x18acc2,_0x4374de);}}}else return this['textColor'](Number(_0x3787b2));},ColorManager['clearCachedKeys']=function(){const _0x24434d=_0x2805a3;this[_0x24434d(0x6df)]={};},ColorManager[_0x2805a3(0xea)]=function(){const _0x46cfb8=_0x2805a3,_0x1ee75c='_stored_normalColor';this[_0x46cfb8(0x6df)]=this[_0x46cfb8(0x6df)]||{};if(this[_0x46cfb8(0x6df)][_0x1ee75c])return this[_0x46cfb8(0x6df)][_0x1ee75c];const _0x264ea8=VisuMZ['CoreEngine']['Settings'][_0x46cfb8(0x2ee)][_0x46cfb8(0x771)];return this[_0x46cfb8(0x434)](_0x1ee75c,_0x264ea8);},ColorManager['systemColor']=function(){const _0x2d3350=_0x2805a3,_0x106ca8=_0x2d3350(0x740);this[_0x2d3350(0x6df)]=this[_0x2d3350(0x6df)]||{};if(this[_0x2d3350(0x6df)][_0x106ca8])return this[_0x2d3350(0x6df)][_0x106ca8];const _0x32e4d3=VisuMZ[_0x2d3350(0x284)][_0x2d3350(0x779)][_0x2d3350(0x2ee)][_0x2d3350(0x55c)];return this['getColorDataFromPluginParameters'](_0x106ca8,_0x32e4d3);},ColorManager[_0x2805a3(0xcd)]=function(){const _0x4a8482=_0x2805a3,_0x4c74cc=_0x4a8482(0x607);this[_0x4a8482(0x6df)]=this[_0x4a8482(0x6df)]||{};if(this[_0x4a8482(0x6df)][_0x4c74cc])return this[_0x4a8482(0x6df)][_0x4c74cc];const _0x41484d=VisuMZ[_0x4a8482(0x284)][_0x4a8482(0x779)][_0x4a8482(0x2ee)][_0x4a8482(0x376)];return this['getColorDataFromPluginParameters'](_0x4c74cc,_0x41484d);},ColorManager['deathColor']=function(){const _0x4a5230=_0x2805a3,_0x2fd8e5=_0x4a5230(0x5bd);this[_0x4a5230(0x6df)]=this[_0x4a5230(0x6df)]||{};if(this[_0x4a5230(0x6df)][_0x2fd8e5])return this[_0x4a5230(0x6df)][_0x2fd8e5];const _0x5bead3=VisuMZ[_0x4a5230(0x284)][_0x4a5230(0x779)]['Color'][_0x4a5230(0x13a)];return this['getColorDataFromPluginParameters'](_0x2fd8e5,_0x5bead3);},ColorManager[_0x2805a3(0x3ef)]=function(){const _0x417bc2=_0x2805a3,_0x395906=_0x417bc2(0x163);this['_colorCache']=this[_0x417bc2(0x6df)]||{};if(this[_0x417bc2(0x6df)][_0x395906])return this[_0x417bc2(0x6df)][_0x395906];const _0x334522=VisuMZ['CoreEngine'][_0x417bc2(0x779)][_0x417bc2(0x2ee)][_0x417bc2(0x345)];return this[_0x417bc2(0x434)](_0x395906,_0x334522);},ColorManager[_0x2805a3(0x574)]=function(){const _0x4c3d4e=_0x2805a3,_0x4d1124=_0x4c3d4e(0x45c);this[_0x4c3d4e(0x6df)]=this[_0x4c3d4e(0x6df)]||{};if(this[_0x4c3d4e(0x6df)][_0x4d1124])return this['_colorCache'][_0x4d1124];const _0x26459a=VisuMZ[_0x4c3d4e(0x284)][_0x4c3d4e(0x779)][_0x4c3d4e(0x2ee)][_0x4c3d4e(0x52d)];return this['getColorDataFromPluginParameters'](_0x4d1124,_0x26459a);},ColorManager[_0x2805a3(0xcf)]=function(){const _0x7e6b74=_0x2805a3,_0x25ad3c=_0x7e6b74(0x314);this[_0x7e6b74(0x6df)]=this[_0x7e6b74(0x6df)]||{};if(this[_0x7e6b74(0x6df)][_0x25ad3c])return this[_0x7e6b74(0x6df)][_0x25ad3c];const _0x41da81=VisuMZ[_0x7e6b74(0x284)][_0x7e6b74(0x779)][_0x7e6b74(0x2ee)][_0x7e6b74(0x774)];return this['getColorDataFromPluginParameters'](_0x25ad3c,_0x41da81);},ColorManager[_0x2805a3(0x5f8)]=function(){const _0x1ebcc6=_0x2805a3,_0x33d8e='_stored_mpGaugeColor1';this[_0x1ebcc6(0x6df)]=this['_colorCache']||{};if(this[_0x1ebcc6(0x6df)][_0x33d8e])return this[_0x1ebcc6(0x6df)][_0x33d8e];const _0x24d53c=VisuMZ[_0x1ebcc6(0x284)][_0x1ebcc6(0x779)][_0x1ebcc6(0x2ee)][_0x1ebcc6(0x789)];return this[_0x1ebcc6(0x434)](_0x33d8e,_0x24d53c);},ColorManager[_0x2805a3(0x794)]=function(){const _0x2832bd=_0x2805a3,_0x323c2c=_0x2832bd(0x752);this[_0x2832bd(0x6df)]=this[_0x2832bd(0x6df)]||{};if(this[_0x2832bd(0x6df)][_0x323c2c])return this['_colorCache'][_0x323c2c];const _0x3ba8a9=VisuMZ['CoreEngine'][_0x2832bd(0x779)][_0x2832bd(0x2ee)][_0x2832bd(0x662)];return this[_0x2832bd(0x434)](_0x323c2c,_0x3ba8a9);},ColorManager[_0x2805a3(0x670)]=function(){const _0x3602ee=_0x2805a3,_0xe563ba='_stored_mpCostColor';this['_colorCache']=this[_0x3602ee(0x6df)]||{};if(this[_0x3602ee(0x6df)][_0xe563ba])return this['_colorCache'][_0xe563ba];const _0x5910d2=VisuMZ[_0x3602ee(0x284)][_0x3602ee(0x779)][_0x3602ee(0x2ee)][_0x3602ee(0x382)];return this[_0x3602ee(0x434)](_0xe563ba,_0x5910d2);},ColorManager['powerUpColor']=function(){const _0x217892=_0x2805a3,_0x184c8d=_0x217892(0x714);this[_0x217892(0x6df)]=this[_0x217892(0x6df)]||{};if(this[_0x217892(0x6df)][_0x184c8d])return this['_colorCache'][_0x184c8d];const _0x44d13b=VisuMZ[_0x217892(0x284)][_0x217892(0x779)]['Color'][_0x217892(0x803)];return this[_0x217892(0x434)](_0x184c8d,_0x44d13b);},ColorManager[_0x2805a3(0x2c5)]=function(){const _0x28b019=_0x2805a3,_0x217ea9=_0x28b019(0x36b);this[_0x28b019(0x6df)]=this['_colorCache']||{};if(this[_0x28b019(0x6df)][_0x217ea9])return this[_0x28b019(0x6df)][_0x217ea9];const _0x53e185=VisuMZ[_0x28b019(0x284)][_0x28b019(0x779)]['Color'][_0x28b019(0x7b8)];return this[_0x28b019(0x434)](_0x217ea9,_0x53e185);},ColorManager['ctGaugeColor1']=function(){const _0x116bb8=_0x2805a3,_0x4593de=_0x116bb8(0x458);this[_0x116bb8(0x6df)]=this[_0x116bb8(0x6df)]||{};if(this[_0x116bb8(0x6df)][_0x4593de])return this[_0x116bb8(0x6df)][_0x4593de];const _0x552871=VisuMZ[_0x116bb8(0x284)][_0x116bb8(0x779)][_0x116bb8(0x2ee)][_0x116bb8(0x3f3)];return this[_0x116bb8(0x434)](_0x4593de,_0x552871);},ColorManager['ctGaugeColor2']=function(){const _0x2b0dbf=_0x2805a3,_0x43b6d5=_0x2b0dbf(0x757);this[_0x2b0dbf(0x6df)]=this[_0x2b0dbf(0x6df)]||{};if(this[_0x2b0dbf(0x6df)][_0x43b6d5])return this[_0x2b0dbf(0x6df)][_0x43b6d5];const _0x5e047f=VisuMZ[_0x2b0dbf(0x284)][_0x2b0dbf(0x779)][_0x2b0dbf(0x2ee)]['ColorCTGauge2'];return this['getColorDataFromPluginParameters'](_0x43b6d5,_0x5e047f);},ColorManager[_0x2805a3(0x60f)]=function(){const _0x233a5b=_0x2805a3,_0x5b9f4a=_0x233a5b(0xee);this[_0x233a5b(0x6df)]=this[_0x233a5b(0x6df)]||{};if(this[_0x233a5b(0x6df)][_0x5b9f4a])return this[_0x233a5b(0x6df)][_0x5b9f4a];const _0x20373c=VisuMZ[_0x233a5b(0x284)][_0x233a5b(0x779)][_0x233a5b(0x2ee)][_0x233a5b(0x5fe)];return this[_0x233a5b(0x434)](_0x5b9f4a,_0x20373c);},ColorManager[_0x2805a3(0x6fc)]=function(){const _0x31159a=_0x2805a3,_0x5920a9='_stored_tpGaugeColor2';this[_0x31159a(0x6df)]=this[_0x31159a(0x6df)]||{};if(this[_0x31159a(0x6df)][_0x5920a9])return this['_colorCache'][_0x5920a9];const _0x41b10d=VisuMZ[_0x31159a(0x284)][_0x31159a(0x779)][_0x31159a(0x2ee)][_0x31159a(0x7b2)];return this[_0x31159a(0x434)](_0x5920a9,_0x41b10d);},ColorManager['tpCostColor']=function(){const _0x294bc3=_0x2805a3,_0x915a6a=_0x294bc3(0x1db);this[_0x294bc3(0x6df)]=this[_0x294bc3(0x6df)]||{};if(this[_0x294bc3(0x6df)][_0x915a6a])return this[_0x294bc3(0x6df)][_0x915a6a];const _0x44e589=VisuMZ['CoreEngine']['Settings'][_0x294bc3(0x2ee)]['ColorTPCost'];return this[_0x294bc3(0x434)](_0x915a6a,_0x44e589);},ColorManager['pendingColor']=function(){const _0x220747=_0x2805a3,_0x7a7ff9='_stored_pendingColor';this[_0x220747(0x6df)]=this['_colorCache']||{};if(this['_colorCache'][_0x7a7ff9])return this[_0x220747(0x6df)][_0x7a7ff9];const _0x2fc614=VisuMZ['CoreEngine'][_0x220747(0x779)][_0x220747(0x2ee)][_0x220747(0x508)];return this['getColorDataFromPluginParameters'](_0x7a7ff9,_0x2fc614);},ColorManager[_0x2805a3(0x6ae)]=function(){const _0x279054=_0x2805a3,_0x5ba4b0=_0x279054(0x5f3);this['_colorCache']=this[_0x279054(0x6df)]||{};if(this[_0x279054(0x6df)][_0x5ba4b0])return this[_0x279054(0x6df)][_0x5ba4b0];const _0x4f27c7=VisuMZ['CoreEngine']['Settings'][_0x279054(0x2ee)][_0x279054(0x317)];return this[_0x279054(0x434)](_0x5ba4b0,_0x4f27c7);},ColorManager[_0x2805a3(0x236)]=function(){const _0x4020bf=_0x2805a3,_0x1bda84=_0x4020bf(0x536);this[_0x4020bf(0x6df)]=this['_colorCache']||{};if(this['_colorCache'][_0x1bda84])return this[_0x4020bf(0x6df)][_0x1bda84];const _0x42fb32=VisuMZ[_0x4020bf(0x284)][_0x4020bf(0x779)][_0x4020bf(0x2ee)][_0x4020bf(0x6d0)];return this['getColorDataFromPluginParameters'](_0x1bda84,_0x42fb32);},ColorManager[_0x2805a3(0x567)]=function(){const _0x378576=_0x2805a3,_0xd15502='_stored_maxLvGaugeColor1';this[_0x378576(0x6df)]=this['_colorCache']||{};if(this['_colorCache'][_0xd15502])return this[_0x378576(0x6df)][_0xd15502];const _0x1aaa2c=VisuMZ[_0x378576(0x284)][_0x378576(0x779)][_0x378576(0x2ee)]['ColorMaxLvGauge1'];return this[_0x378576(0x434)](_0xd15502,_0x1aaa2c);},ColorManager[_0x2805a3(0x658)]=function(){const _0xb905e3=_0x2805a3,_0x2cd1ab='_stored_maxLvGaugeColor2';this[_0xb905e3(0x6df)]=this['_colorCache']||{};if(this['_colorCache'][_0x2cd1ab])return this[_0xb905e3(0x6df)][_0x2cd1ab];const _0x111c48=VisuMZ[_0xb905e3(0x284)]['Settings']['Color'][_0xb905e3(0x355)];return this[_0xb905e3(0x434)](_0x2cd1ab,_0x111c48);},ColorManager[_0x2805a3(0x7df)]=function(_0x4547be){const _0x17b6fe=_0x2805a3;return VisuMZ[_0x17b6fe(0x284)]['Settings'][_0x17b6fe(0x2ee)][_0x17b6fe(0x1b7)]['call'](this,_0x4547be);},ColorManager[_0x2805a3(0x42a)]=function(_0x1b267a){const _0x438934=_0x2805a3;return VisuMZ['CoreEngine']['Settings'][_0x438934(0x2ee)]['ActorMPColor']['call'](this,_0x1b267a);},ColorManager[_0x2805a3(0x2b8)]=function(_0x1a3c69){const _0x241496=_0x2805a3;return VisuMZ['CoreEngine'][_0x241496(0x779)][_0x241496(0x2ee)][_0x241496(0x414)][_0x241496(0x5a2)](this,_0x1a3c69);},ColorManager['paramchangeTextColor']=function(_0x51742a){const _0x131e9a=_0x2805a3;return VisuMZ['CoreEngine']['Settings']['Color'][_0x131e9a(0x344)]['call'](this,_0x51742a);},ColorManager['damageColor']=function(_0x115693){const _0x25a4a1=_0x2805a3;return VisuMZ[_0x25a4a1(0x284)][_0x25a4a1(0x779)][_0x25a4a1(0x2ee)]['DamageColor'][_0x25a4a1(0x5a2)](this,_0x115693);},ColorManager[_0x2805a3(0x105)]=function(){const _0x363fab=_0x2805a3;return VisuMZ['CoreEngine']['Settings'][_0x363fab(0x2ee)]['OutlineColor'];},ColorManager[_0x2805a3(0x397)]=function(){const _0x3c4ad1=_0x2805a3;return VisuMZ[_0x3c4ad1(0x284)][_0x3c4ad1(0x779)][_0x3c4ad1(0x2ee)][_0x3c4ad1(0x13b)]||_0x3c4ad1(0x3eb);},ColorManager[_0x2805a3(0x1d1)]=function(){const _0x51cf79=_0x2805a3;return VisuMZ[_0x51cf79(0x284)]['Settings'][_0x51cf79(0x2ee)]['OutlineColorGauge']||_0x51cf79(0x625);},ColorManager[_0x2805a3(0x40c)]=function(){const _0xa20f58=_0x2805a3;return VisuMZ[_0xa20f58(0x284)][_0xa20f58(0x779)][_0xa20f58(0x2ee)][_0xa20f58(0x3f6)];},ColorManager[_0x2805a3(0x67b)]=function(){const _0x1956e6=_0x2805a3;return VisuMZ['CoreEngine'][_0x1956e6(0x779)]['Color'][_0x1956e6(0x41c)];},ColorManager[_0x2805a3(0x2fa)]=function(){const _0x1dc9ab=_0x2805a3;return VisuMZ['CoreEngine'][_0x1dc9ab(0x779)][_0x1dc9ab(0x2ee)][_0x1dc9ab(0x57f)];},ColorManager[_0x2805a3(0x38e)]=function(){const _0x3f7097=_0x2805a3;return VisuMZ[_0x3f7097(0x284)][_0x3f7097(0x779)][_0x3f7097(0x2ee)][_0x3f7097(0x6ed)];},SceneManager[_0x2805a3(0x75d)]=[],VisuMZ[_0x2805a3(0x284)]['SceneManager_initialize']=SceneManager[_0x2805a3(0x748)],SceneManager['initialize']=function(){const _0x39a255=_0x2805a3;VisuMZ[_0x39a255(0x284)][_0x39a255(0x3ad)][_0x39a255(0x5a2)](this),this[_0x39a255(0x179)]();},VisuMZ[_0x2805a3(0x284)]['SceneManager_onKeyDown']=SceneManager[_0x2805a3(0x6ef)],SceneManager['onKeyDown']=function(_0x3cf6a7){const _0x6dfd2e=_0x2805a3;if($gameTemp)this[_0x6dfd2e(0xaf)](_0x3cf6a7);VisuMZ[_0x6dfd2e(0x284)]['SceneManager_onKeyDown'][_0x6dfd2e(0x5a2)](this,_0x3cf6a7);},SceneManager['onKeyDownKeysF6F7']=function(_0x4c700c){const _0x3de316=_0x2805a3;if(!_0x4c700c[_0x3de316(0x6e6)]&&!_0x4c700c[_0x3de316(0x25e)])switch(_0x4c700c['keyCode']){case 0x75:this[_0x3de316(0x6a6)]();break;case 0x76:if(Input[_0x3de316(0x8b)](_0x3de316(0xfc))||Input['isPressed'](_0x3de316(0x27d)))return;this[_0x3de316(0x576)]();break;}},SceneManager[_0x2805a3(0x6a6)]=function(){const _0x4212b3=_0x2805a3;if($gameTemp['isPlaytest']()&&VisuMZ[_0x4212b3(0x284)]['Settings']['QoL'][_0x4212b3(0x265)]){if(ConfigManager[_0x4212b3(0x302)]!==0x0){if(_0x4212b3(0x59f)!==_0x4212b3(0x201))ConfigManager[_0x4212b3(0x28f)]=0x0,ConfigManager[_0x4212b3(0x5ad)]=0x0,ConfigManager[_0x4212b3(0x596)]=0x0,ConfigManager['seVolume']=0x0;else{function _0x797dc4(){const _0x27a1df=_0x4212b3;this['_listWindow'][_0x27a1df(0x7ce)](_0x526069[_0x27a1df(0x266)][_0x27a1df(0x4a7)]);}}}else ConfigManager[_0x4212b3(0x28f)]=0x64,ConfigManager['bgsVolume']=0x64,ConfigManager[_0x4212b3(0x596)]=0x64,ConfigManager[_0x4212b3(0x302)]=0x64;ConfigManager[_0x4212b3(0x7d1)]();if(this[_0x4212b3(0x807)][_0x4212b3(0x77a)]===Scene_Options){if(_0x4212b3(0x1ca)!==_0x4212b3(0x1ca)){function _0x398e6c(){const _0x3e8269=_0x4212b3;_0x7c8070['ConvertParams'](_0x591f6c,_0x32b311);const _0x44d457=_0x31c09d[_0x3e8269(0x1af)]||0x1;_0x1d27b8['setWindowPadding'](_0x44d457);}}else{if(this['_scene']['_optionsWindow'])this[_0x4212b3(0x807)][_0x4212b3(0x6b8)]['refresh']();if(this[_0x4212b3(0x807)][_0x4212b3(0x55b)])this[_0x4212b3(0x807)][_0x4212b3(0x55b)][_0x4212b3(0x115)]();}}}},SceneManager[_0x2805a3(0x576)]=function(){const _0x55935c=_0x2805a3;$gameTemp[_0x55935c(0x326)]()&&VisuMZ[_0x55935c(0x284)]['Settings'][_0x55935c(0x5f9)][_0x55935c(0x7d7)]&&($gameTemp[_0x55935c(0x2a2)]=!$gameTemp['_playTestFastMode']);},SceneManager[_0x2805a3(0x179)]=function(){const _0x4aa58b=_0x2805a3;this[_0x4aa58b(0x5be)]=![],this['_hideButtons']=!VisuMZ[_0x4aa58b(0x284)][_0x4aa58b(0x779)]['UI'][_0x4aa58b(0xc6)];},SceneManager['setSideButtonLayout']=function(_0x2f5f46){const _0x25b005=_0x2805a3;VisuMZ[_0x25b005(0x284)][_0x25b005(0x779)]['UI']['SideButtons']&&(this['_sideButtonLayout']=_0x2f5f46);},SceneManager['isSideButtonLayout']=function(){const _0x4dba2e=_0x2805a3;return this[_0x4dba2e(0x5be)];},SceneManager['areButtonsHidden']=function(){const _0x2726b3=_0x2805a3;return this[_0x2726b3(0x538)];},SceneManager[_0x2805a3(0x572)]=function(){const _0x3c5c5b=_0x2805a3;return this[_0x3c5c5b(0x634)]()||this[_0x3c5c5b(0x4c9)]();},VisuMZ[_0x2805a3(0x284)]['SceneManager_isGameActive']=SceneManager[_0x2805a3(0x231)],SceneManager[_0x2805a3(0x231)]=function(){const _0x345f95=_0x2805a3;return VisuMZ[_0x345f95(0x284)][_0x345f95(0x779)][_0x345f95(0x5f9)][_0x345f95(0x462)]?VisuMZ['CoreEngine']['SceneManager_isGameActive'][_0x345f95(0x5a2)](this):!![];},SceneManager[_0x2805a3(0x15d)]=function(_0x4594fe){const _0x2cc1a3=_0x2805a3;if(_0x4594fe instanceof Error){if(_0x2cc1a3(0x7a2)!=='kgrju')this[_0x2cc1a3(0x418)](_0x4594fe);else{function _0x4913a1(){_0x2ff618*=_0x113d76(_0x12e214);}}}else{if(_0x4594fe instanceof Array&&_0x4594fe[0x0]===_0x2cc1a3(0x361)){if(_0x2cc1a3(0x621)!=='MJdlU')this[_0x2cc1a3(0x11c)](_0x4594fe);else{function _0x5ce931(){const _0x105039=_0x2cc1a3;return _0x40cb0b[_0x105039(0x5d1)];}}}else this['catchUnknownError'](_0x4594fe);}this['stop']();},VisuMZ['CoreEngine']['BattleManager_processEscape']=BattleManager['processEscape'],BattleManager[_0x2805a3(0x463)]=function(){const _0x5afebf=_0x2805a3;if(VisuMZ['CoreEngine'][_0x5afebf(0x779)][_0x5afebf(0x5f9)][_0x5afebf(0x6c1)]){if('jUVlQ'!==_0x5afebf(0x668)){function _0x1cb7e7(){const _0x584bbb=_0x5afebf;this['openness']+=this[_0x584bbb(0x7b7)](),this[_0x584bbb(0x51b)]()&&(this[_0x584bbb(0x383)]=![]);}}else this[_0x5afebf(0x268)]();}else return VisuMZ[_0x5afebf(0x284)][_0x5afebf(0x725)][_0x5afebf(0x5a2)](this);},BattleManager['processAlwaysEscape']=function(){const _0x133a4e=_0x2805a3;return $gameParty[_0x133a4e(0x59b)](),SoundManager['playEscape'](),this[_0x133a4e(0x2e0)](),!![];},BattleManager['isTpb']=function(){return $gameSystem['getBattleSystem']()>=0x1;},BattleManager[_0x2805a3(0x15b)]=function(){const _0x44f21d=_0x2805a3;return $gameSystem[_0x44f21d(0x23e)]()===0x1;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x33a)]=Game_Temp[_0x2805a3(0x6ac)][_0x2805a3(0x748)],Game_Temp[_0x2805a3(0x6ac)][_0x2805a3(0x748)]=function(){const _0x2ada68=_0x2805a3;VisuMZ[_0x2ada68(0x284)][_0x2ada68(0x33a)][_0x2ada68(0x5a2)](this),this['forceOutOfPlaytest'](),this[_0x2ada68(0x1c1)]();},Game_Temp[_0x2805a3(0x6ac)][_0x2805a3(0xb7)]=function(){const _0xbbf5c0=_0x2805a3;VisuMZ['CoreEngine'][_0xbbf5c0(0x779)][_0xbbf5c0(0x5f9)][_0xbbf5c0(0x1ea)]&&(this[_0xbbf5c0(0x732)]=![]);},Game_Temp[_0x2805a3(0x6ac)]['createFauxAnimationQueue']=function(){this['_fauxAnimationQueue']=[];},Game_Temp[_0x2805a3(0x6ac)][_0x2805a3(0x12a)]=function(_0x31be9d,_0x168541,_0x2336fe,_0x394cf8){const _0xdac6b5=_0x2805a3;if(!this[_0xdac6b5(0x373)]())return;_0x2336fe=_0x2336fe||![],_0x394cf8=_0x394cf8||![];if($dataAnimations[_0x168541]){const _0x3fa06b={'targets':_0x31be9d,'animationId':_0x168541,'mirror':_0x2336fe,'mute':_0x394cf8};this[_0xdac6b5(0x38a)][_0xdac6b5(0x156)](_0x3fa06b);for(const _0x4c84a8 of _0x31be9d){if(_0x4c84a8[_0xdac6b5(0x62f)]){if('SqRGF'!=='SqRGF'){function _0x4a01ea(){const _0x44856b=_0xdac6b5;this[_0x44856b(0x3ac)]['fontSize']-=0x6;}}else _0x4c84a8[_0xdac6b5(0x62f)]();}}}},Game_Temp[_0x2805a3(0x6ac)]['showFauxAnimations']=function(){return!![];},Game_Temp[_0x2805a3(0x6ac)][_0x2805a3(0x68a)]=function(){const _0x1169f3=_0x2805a3;return this[_0x1169f3(0x38a)]['shift']();},Game_Temp[_0x2805a3(0x6ac)]['setLastPluginCommandInterpreter']=function(_0x2d2306){const _0x31cc70=_0x2805a3;this[_0x31cc70(0x269)]=_0x2d2306;},Game_Temp[_0x2805a3(0x6ac)]['getLastPluginCommandInterpreter']=function(){const _0x121cfd=_0x2805a3;return this[_0x121cfd(0x269)];},Game_Temp[_0x2805a3(0x6ac)]['clearForcedGameTroopSettingsCoreEngine']=function(){const _0x52c337=_0x2805a3;this['_forcedTroopView']=undefined,this[_0x52c337(0x5d1)]=undefined;},Game_Temp[_0x2805a3(0x6ac)]['applyForcedGameTroopSettingsCoreEngine']=function(_0x39030e){const _0x339b3b=_0x2805a3;if($gameMap&&$dataMap&&$dataMap[_0x339b3b(0x22b)]){if('Jqrqv'!==_0x339b3b(0x745)){function _0x5589a7(){const _0x9bf23b=_0x339b3b;this['_helpWindow'][_0x9bf23b(0x7ce)](_0x5bbebe[_0x9bf23b(0x266)]['HelpBgType']);}}else this[_0x339b3b(0x6b9)]($dataMap[_0x339b3b(0x22b)]);}const _0x30724e=$dataTroops[_0x39030e];_0x30724e&&this['parseForcedGameTroopSettingsCoreEngine'](_0x30724e[_0x339b3b(0x7c5)]);},Game_Temp[_0x2805a3(0x6ac)][_0x2805a3(0x6b9)]=function(_0x490858){const _0x1b0472=_0x2805a3;if(!_0x490858)return;if(_0x490858[_0x1b0472(0x137)](/<(?:FRONTVIEW|FRONT VIEW|FV)>/i)){if(_0x1b0472(0x252)!==_0x1b0472(0x65c))this[_0x1b0472(0x388)]='FV';else{function _0x581b88(){const _0x574514=_0x1b0472;return _0x4a9ed4[_0x574514(0x284)][_0x574514(0x779)][_0x574514(0x46b)][_0x574514(0x95)];}}}else{if(_0x490858[_0x1b0472(0x137)](/<(?:SIDEVIEW|SIDE VIEW|SV)>/i))this[_0x1b0472(0x388)]='SV';else{if(_0x490858['match'](/<(?:BATTLEVIEW|BATTLE VIEW):[ ](.*)>/i)){const _0x546821=String(RegExp['$1']);if(_0x546821[_0x1b0472(0x137)](/(?:FRONTVIEW|FRONT VIEW|FV)/i)){if(_0x1b0472(0x4d6)!==_0x1b0472(0x4d6)){function _0x7c30b4(){const _0x55703e=_0x1b0472;this[_0x55703e(0x27e)]={'duration':0x0,'wholeDuration':0x0,'type':_0x55703e(0x250),'targetX':this['x'],'targetY':this['y'],'targetScaleX':this[_0x55703e(0x739)]['x'],'targetScaleY':this['scale']['y'],'targetOpacity':this[_0x55703e(0x747)],'targetBackOpacity':this[_0x55703e(0x260)],'targetContentsOpacity':this[_0x55703e(0xab)]};}}else this[_0x1b0472(0x388)]='FV';}else{if(_0x546821[_0x1b0472(0x137)](/(?:SIDEVIEW|SIDE VIEW|SV)/i)){if(_0x1b0472(0x476)===_0x1b0472(0x476))this[_0x1b0472(0x388)]='SV';else{function _0x597a41(){var _0x276f6b=_0x138c88(_0x35048f['$1']);_0x38f565+=_0x276f6b;}}}}}}}if(_0x490858[_0x1b0472(0x137)](/<(?:DTB)>/i)){if(_0x1b0472(0x33b)===_0x1b0472(0x4ab)){function _0x14870e(){const _0x194618=_0x1b0472;return _0x16db1d[_0x194618(0x6ac)]['itemHeight'][_0x194618(0x5a2)](this)+_0x248c9e['CoreEngine'][_0x194618(0x779)]['Window'][_0x194618(0x17d)];;}}else this[_0x1b0472(0x5d1)]=0x0;}else{if(_0x490858[_0x1b0472(0x137)](/<(?:TPB|ATB)[ ]ACTIVE>/i)){if(_0x1b0472(0x76c)===_0x1b0472(0x106)){function _0x105a42(){var _0x2849b7=_0x1a028c(_0x3e7733['$1']);_0x251cea+=_0x2849b7;}}else this['_forcedBattleSys']=0x1;}else{if(_0x490858['match'](/<(?:TPB|ATB)[ ]WAIT>/i))this[_0x1b0472(0x5d1)]=0x2;else{if(_0x490858['match'](/<(?:CTB)>/i))Imported[_0x1b0472(0x1f5)]&&(this['_forcedBattleSys']=_0x1b0472(0x2d9));else{if(_0x490858[_0x1b0472(0x137)](/<(?:STB)>/i)){if(_0x1b0472(0x30d)!=='WTGzc'){if(Imported[_0x1b0472(0x808)]){if(_0x1b0472(0x3fc)===_0x1b0472(0x7e9)){function _0x3b2665(){const _0x3ecb7d=_0x1b0472;this[_0x3ecb7d(0x5d1)]=_0x3ecb7d(0x2d9);}}else this[_0x1b0472(0x5d1)]=_0x1b0472(0xc3);}}else{function _0x3080b2(){const _0x67f40e=_0x1b0472;_0x8346ce[_0x67f40e(0x284)]['Scene_Options_create'][_0x67f40e(0x5a2)](this),this[_0x67f40e(0x5b0)]();}}}else{if(_0x490858[_0x1b0472(0x137)](/<(?:BTB)>/i)){if(_0x1b0472(0x622)==='bbjIB')Imported['VisuMZ_2_BattleSystemBTB']&&(this[_0x1b0472(0x5d1)]=_0x1b0472(0x653));else{function _0x3f889a(){const _0x59db34=_0x1b0472;if(this[_0x59db34(0x637)]===_0x31185d)this[_0x59db34(0x516)]();return this['_coreEngineShakeStyle'];}}}else{if(_0x490858['match'](/<(?:FTB)>/i))Imported[_0x1b0472(0x31a)]&&(this['_forcedBattleSys']=_0x1b0472(0x23d));else{if(_0x490858['match'](/<(?:OTB)>/i))Imported[_0x1b0472(0xb5)]&&(this[_0x1b0472(0x5d1)]=_0x1b0472(0x6a4));else{if(_0x490858[_0x1b0472(0x137)](/<(?:BATTLEVIEW|BATTLE VIEW):[ ](.*)>/i)){const _0x5a9895=String(RegExp['$1']);if(_0x5a9895[_0x1b0472(0x137)](/DTB/i))this['_forcedBattleSys']=0x0;else{if(_0x5a9895['match'](/(?:TPB|ATB)[ ]ACTIVE/i))this['_forcedBattleSys']=0x1;else{if(_0x5a9895[_0x1b0472(0x137)](/(?:TPB|ATB)[ ]WAIT/i)){if('Sxumv'!=='yXqve')this[_0x1b0472(0x5d1)]=0x2;else{function _0x545af6(){const _0x5e93db=_0x1b0472;if(_0x201cf1)_0x3595b3[_0x5e93db(0x93)](_0x57d96e);}}}else{if(_0x5a9895[_0x1b0472(0x137)](/CTB/i)){if(_0x1b0472(0x219)!==_0x1b0472(0x219)){function _0x28af6a(){const _0x4d8289=_0x1b0472;return _0x2206b0[_0x4d8289(0x325)](_0x902d0a,'[',']');}}else{if(Imported[_0x1b0472(0x1f5)]){if('sMdfd'!=='oBRhN')this[_0x1b0472(0x5d1)]=_0x1b0472(0x2d9);else{function _0x5d6ef3(){const _0xedd318=_0x1b0472;_0x22149b+=_0x306732+_0xedd318(0x13e);}}}}}else{if(_0x5a9895['match'](/STB/i))Imported[_0x1b0472(0x808)]&&(this[_0x1b0472(0x5d1)]=_0x1b0472(0xc3));else{if(_0x5a9895[_0x1b0472(0x137)](/BTB/i)){if(Imported[_0x1b0472(0x521)]){if(_0x1b0472(0x12f)!==_0x1b0472(0x12f)){function _0x2b267c(){const _0x16f0c5=_0x1b0472;return _0xa9dfed&&_0x548458['note']&&_0x21bcce[_0x16f0c5(0x22b)]['match'](/<MINIMUM ENCOUNTER STEPS:[ ](\d+)>/i)?_0x58a788(_0x14fdea['$1']):_0xe2be9[_0x16f0c5(0x284)][_0x16f0c5(0x779)][_0x16f0c5(0x5f9)][_0x16f0c5(0x7c3)];}}else this[_0x1b0472(0x5d1)]=_0x1b0472(0x653);}}else{if(_0x5a9895[_0x1b0472(0x137)](/FTB/i))Imported[_0x1b0472(0x31a)]&&(this['_forcedBattleSys']=_0x1b0472(0x23d));else{if(_0x5a9895[_0x1b0472(0x137)](/OTB/i)){if(Imported[_0x1b0472(0xb5)]){if('exYcm'===_0x1b0472(0x708)){function _0x593ca0(){const _0x38be68=_0x1b0472;return _0x443b40['CoreEngine'][_0x38be68(0x7cc)][_0x38be68(0x5a2)](this,_0x51b89b);}}else this[_0x1b0472(0x5d1)]=_0x1b0472(0x6a4);}}}}}}}}}}}}}}}}}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x758)]=Game_System['prototype'][_0x2805a3(0x748)],Game_System[_0x2805a3(0x6ac)][_0x2805a3(0x748)]=function(){const _0xef54da=_0x2805a3;VisuMZ[_0xef54da(0x284)][_0xef54da(0x758)][_0xef54da(0x5a2)](this),this[_0xef54da(0x816)]();},Game_System['prototype']['initCoreEngine']=function(){const _0x173ca8=_0x2805a3;this[_0x173ca8(0x4d1)]={'SideView':$dataSystem[_0x173ca8(0x6ee)],'BattleSystem':this['initialBattleSystem'](),'FontSize':$dataSystem['advanced'][_0x173ca8(0x614)],'Padding':0xc};},Game_System['prototype'][_0x2805a3(0x256)]=function(){const _0x57eec5=_0x2805a3;if($gameTemp[_0x57eec5(0x388)]==='SV')return!![];else{if($gameTemp[_0x57eec5(0x388)]==='FV'){if(_0x57eec5(0x2cf)===_0x57eec5(0x14d)){function _0x423e03(){const _0x2e7023=_0x57eec5;_0x162ac3['prototype']['update']['call'](this),this['updateShadow']();if(this[_0x2e7023(0x772)])this['updateMotion']();else this[_0x2e7023(0x4d8)]!==''&&(this[_0x2e7023(0x4d8)]='');}}else return![];}}if(this[_0x57eec5(0x4d1)]===undefined)this['initCoreEngine']();if(this[_0x57eec5(0x4d1)]['SideView']===undefined)this[_0x57eec5(0x816)]();return this[_0x57eec5(0x4d1)]['SideView'];},Game_System[_0x2805a3(0x6ac)][_0x2805a3(0x735)]=function(_0x4dfb50){const _0x2d4d71=_0x2805a3;if(this['_CoreEngineSettings']===undefined)this['initCoreEngine']();if(this[_0x2d4d71(0x4d1)][_0x2d4d71(0x738)]===undefined)this['initCoreEngine']();this[_0x2d4d71(0x4d1)][_0x2d4d71(0x738)]=_0x4dfb50;},Game_System[_0x2805a3(0x6ac)][_0x2805a3(0x354)]=function(){const _0xcc7189=_0x2805a3;if(this[_0xcc7189(0x4d1)]===undefined)this[_0xcc7189(0x816)]();this['_CoreEngineSettings'][_0xcc7189(0x4ae)]=this[_0xcc7189(0x318)]();},Game_System['prototype'][_0x2805a3(0x318)]=function(){const _0x488a79=_0x2805a3,_0xbf9897=(VisuMZ[_0x488a79(0x284)][_0x488a79(0x779)][_0x488a79(0x4ae)]||'DATABASE')['toUpperCase']()['trim']();return VisuMZ[_0x488a79(0x284)][_0x488a79(0x45e)](_0xbf9897);},Game_System[_0x2805a3(0x6ac)][_0x2805a3(0x23e)]=function(){const _0x1e9b57=_0x2805a3;if($gameTemp[_0x1e9b57(0x5d1)]!==undefined)return $gameTemp[_0x1e9b57(0x5d1)];if(this['_CoreEngineSettings']===undefined)this[_0x1e9b57(0x816)]();if(this[_0x1e9b57(0x4d1)][_0x1e9b57(0x4ae)]===undefined)this[_0x1e9b57(0x354)]();return this[_0x1e9b57(0x4d1)][_0x1e9b57(0x4ae)];},Game_System[_0x2805a3(0x6ac)][_0x2805a3(0x7d3)]=function(_0x4b131c){const _0x1bc11d=_0x2805a3;if(this[_0x1bc11d(0x4d1)]===undefined)this[_0x1bc11d(0x816)]();if(this[_0x1bc11d(0x4d1)]['BattleSystem']===undefined)this[_0x1bc11d(0x354)]();this['_CoreEngineSettings'][_0x1bc11d(0x4ae)]=_0x4b131c;},Game_System['prototype']['mainFontSize']=function(){const _0x39a083=_0x2805a3;if(this[_0x39a083(0x4d1)]===undefined)this[_0x39a083(0x816)]();if(this['_CoreEngineSettings'][_0x39a083(0x63a)]===undefined)this[_0x39a083(0x816)]();return this[_0x39a083(0x4d1)]['FontSize'];},Game_System[_0x2805a3(0x6ac)][_0x2805a3(0x23f)]=function(_0x37c45e){const _0x1880ce=_0x2805a3;if(this[_0x1880ce(0x4d1)]===undefined)this[_0x1880ce(0x816)]();if(this[_0x1880ce(0x4d1)][_0x1880ce(0x38c)]===undefined)this[_0x1880ce(0x816)]();this['_CoreEngineSettings']['FontSize']=_0x37c45e;},Game_System[_0x2805a3(0x6ac)]['windowPadding']=function(){const _0x262007=_0x2805a3;if(this['_CoreEngineSettings']===undefined)this[_0x262007(0x816)]();if(this[_0x262007(0x4d1)][_0x262007(0x12b)]===undefined)this[_0x262007(0x816)]();return this[_0x262007(0x4d1)][_0x262007(0x12b)];},Game_System['prototype'][_0x2805a3(0x37c)]=function(_0x149838){const _0x5cb625=_0x2805a3;if(this[_0x5cb625(0x4d1)]===undefined)this[_0x5cb625(0x816)]();if(this[_0x5cb625(0x4d1)][_0x5cb625(0x38c)]===undefined)this[_0x5cb625(0x816)]();this[_0x5cb625(0x4d1)][_0x5cb625(0x12b)]=_0x149838;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x8e)]=Game_Screen[_0x2805a3(0x6ac)][_0x2805a3(0x748)],Game_Screen[_0x2805a3(0x6ac)]['initialize']=function(){const _0x3a6136=_0x2805a3;VisuMZ[_0x3a6136(0x284)][_0x3a6136(0x8e)][_0x3a6136(0x5a2)](this),this[_0x3a6136(0x516)]();},Game_Screen[_0x2805a3(0x6ac)][_0x2805a3(0x516)]=function(){const _0x11674f=_0x2805a3,_0x1ae4ae=VisuMZ[_0x11674f(0x284)]['Settings'][_0x11674f(0x74a)];this[_0x11674f(0x637)]=_0x1ae4ae?.[_0x11674f(0xcb)]||_0x11674f(0x595);},Game_Screen[_0x2805a3(0x6ac)]['getCoreEngineScreenShakeStyle']=function(){const _0x3511c4=_0x2805a3;if(this[_0x3511c4(0x637)]===undefined)this[_0x3511c4(0x516)]();return this[_0x3511c4(0x637)];},Game_Screen[_0x2805a3(0x6ac)][_0x2805a3(0x425)]=function(_0x42f47e){const _0x5b3e63=_0x2805a3;if(this[_0x5b3e63(0x637)]===undefined)this[_0x5b3e63(0x516)]();this[_0x5b3e63(0x637)]=_0x42f47e[_0x5b3e63(0x31e)]()[_0x5b3e63(0xe2)]();},Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x7e0)]=function(){const _0x27019c=_0x2805a3;if($gameParty[_0x27019c(0x74e)]())return![];return this['name']()&&this[_0x27019c(0x7c5)]()[_0x27019c(0x272)](0x0)==='!';},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x630)]=Game_Picture[_0x2805a3(0x6ac)]['x'],Game_Picture[_0x2805a3(0x6ac)]['x']=function(){const _0x1a832c=_0x2805a3;return this[_0x1a832c(0x7e0)]()?this[_0x1a832c(0x7eb)]():VisuMZ[_0x1a832c(0x284)][_0x1a832c(0x630)][_0x1a832c(0x5a2)](this);},Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x7eb)]=function(){const _0x295ced=_0x2805a3,_0x429a6f=$gameMap[_0x295ced(0x2ca)]()*$gameMap['tileWidth']();return this['_x']-_0x429a6f;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x438)]=Game_Picture['prototype']['y'],Game_Picture[_0x2805a3(0x6ac)]['y']=function(){const _0x5b38ee=_0x2805a3;return this[_0x5b38ee(0x7e0)]()?this[_0x5b38ee(0x2c7)]():VisuMZ[_0x5b38ee(0x284)][_0x5b38ee(0x438)][_0x5b38ee(0x5a2)](this);},Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x2c7)]=function(){const _0x1c18b3=_0x2805a3,_0x338e73=$gameMap[_0x1c18b3(0x64e)]()*$gameMap['tileHeight']();return this['_y']-_0x338e73;},Game_Picture[_0x2805a3(0x6ac)]['setEasingType']=function(_0x4bb4cc){const _0x34afe8=_0x2805a3;this[_0x34afe8(0x464)]=_0x4bb4cc;},VisuMZ[_0x2805a3(0x284)]['Game_Picture_calcEasing']=Game_Picture['prototype'][_0x2805a3(0x108)],Game_Picture[_0x2805a3(0x6ac)]['calcEasing']=function(_0x5a396f){const _0x59ed96=_0x2805a3;this[_0x59ed96(0x464)]=this['_coreEasingType']||0x0;if([0x0,0x1,0x2,0x3][_0x59ed96(0x5ea)](this[_0x59ed96(0x464)])){if(_0x59ed96(0x53e)!==_0x59ed96(0x53e)){function _0x28dce0(){const _0x3f38b7=_0x59ed96;_0x32c3b1[_0x3f38b7(0x1ef)]();}}else return VisuMZ[_0x59ed96(0x284)][_0x59ed96(0x3b1)][_0x59ed96(0x5a2)](this,_0x5a396f);}else return VisuMZ[_0x59ed96(0x3a3)](_0x5a396f,this['_coreEasingType']);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2e5)]=Game_Action['prototype'][_0x2805a3(0x68c)],Game_Action[_0x2805a3(0x6ac)][_0x2805a3(0x68c)]=function(_0x45e676){const _0x20c03f=_0x2805a3;if(VisuMZ[_0x20c03f(0x284)][_0x20c03f(0x779)]['QoL'][_0x20c03f(0x591)]){if('XMYwV'!==_0x20c03f(0x78c))return this[_0x20c03f(0x594)](_0x45e676);else{function _0x4f7ec8(){const _0x46accd=_0x20c03f;_0x3d166c['CoreEngine']['Game_Temp_initialize'][_0x46accd(0x5a2)](this),this[_0x46accd(0xb7)](),this[_0x46accd(0x1c1)]();}}}else return VisuMZ[_0x20c03f(0x284)][_0x20c03f(0x2e5)][_0x20c03f(0x5a2)](this,_0x45e676);},Game_Action[_0x2805a3(0x6ac)][_0x2805a3(0x594)]=function(_0x93d2f8){const _0x312401=_0x2805a3,_0x745d1=this[_0x312401(0x2c2)](_0x93d2f8),_0x44c687=this[_0x312401(0x210)](_0x93d2f8),_0x5a93f7=this[_0x312401(0x36d)](_0x93d2f8);return _0x745d1*(_0x44c687-_0x5a93f7);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x7cc)]=Game_Action[_0x2805a3(0x6ac)][_0x2805a3(0x306)],Game_Action[_0x2805a3(0x6ac)][_0x2805a3(0x306)]=function(_0x1214d3){const _0x393ef8=_0x2805a3;if(VisuMZ[_0x393ef8(0x284)]['Settings'][_0x393ef8(0x5f9)][_0x393ef8(0x591)])return 0x0;else{if('HfzYn'!==_0x393ef8(0x21c)){function _0x4e068b(){const _0x2b936f=_0x393ef8;this[_0x2b936f(0x3ce)](_0x22171b);}}else return VisuMZ[_0x393ef8(0x284)][_0x393ef8(0x7cc)][_0x393ef8(0x5a2)](this,_0x1214d3);}},Game_Action[_0x2805a3(0x6ac)][_0x2805a3(0x2c2)]=function(_0x4f54be){return this['item']()['successRate']*0.01;},Game_Action['prototype'][_0x2805a3(0x210)]=function(_0x383fb8){const _0x1589ee=_0x2805a3;if(VisuMZ['CoreEngine'][_0x1589ee(0x779)]['QoL'][_0x1589ee(0x5fb)]&&this[_0x1589ee(0x650)]())return 0x1;return this[_0x1589ee(0x5af)]()?VisuMZ[_0x1589ee(0x284)][_0x1589ee(0x779)][_0x1589ee(0x5f9)]['AccuracyBoost']&&this['subject']()[_0x1589ee(0x706)]()?this[_0x1589ee(0x6e7)]()['hit']+0.05:this[_0x1589ee(0x6e7)]()[_0x1589ee(0x74c)]:0x1;},Game_Action[_0x2805a3(0x6ac)]['targetEvaRate']=function(_0x139b1c){const _0xac65f5=_0x2805a3;if(this[_0xac65f5(0x6e7)]()['isActor']()===_0x139b1c[_0xac65f5(0x706)]())return 0x0;if(this[_0xac65f5(0x5af)]())return VisuMZ[_0xac65f5(0x284)][_0xac65f5(0x779)]['QoL']['AccuracyBoost']&&_0x139b1c['isEnemy']()?_0x139b1c[_0xac65f5(0x1a2)]-0.05:_0x139b1c[_0xac65f5(0x1a2)];else return this['isMagical']()?_0x139b1c[_0xac65f5(0x420)]:0x0;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0xfa)]=Game_Action['prototype'][_0x2805a3(0x1f3)],Game_Action[_0x2805a3(0x6ac)]['updateLastTarget']=function(_0x45cdd3){const _0x38db65=_0x2805a3;VisuMZ[_0x38db65(0x284)]['Game_Action_updateLastTarget']['call'](this,_0x45cdd3);if(VisuMZ['CoreEngine'][_0x38db65(0x779)][_0x38db65(0x5f9)][_0x38db65(0x591)])return;const _0x192089=_0x45cdd3[_0x38db65(0x62c)]();if(_0x192089[_0x38db65(0x48f)]){if('qbsVv'!==_0x38db65(0x153))0x1-this[_0x38db65(0x306)](_0x45cdd3)>this[_0x38db65(0x68c)](_0x45cdd3)&&(_0x192089[_0x38db65(0x48f)]=![],_0x192089[_0x38db65(0x7e6)]=!![]);else{function _0x147d80(){const _0xf4b34d=_0x38db65;if(_0xbe553f[_0xf4b34d(0x326)]())_0x3b7d31[_0xf4b34d(0x77e)](_0x11e348);}}}},VisuMZ[_0x2805a3(0x284)]['Game_BattlerBase_initMembers']=Game_BattlerBase[_0x2805a3(0x6ac)]['initMembers'],Game_BattlerBase[_0x2805a3(0x6ac)][_0x2805a3(0x147)]=function(){const _0x14159e=_0x2805a3;this[_0x14159e(0x58e)]={},VisuMZ[_0x14159e(0x284)]['Game_BattlerBase_initMembers'][_0x14159e(0x5a2)](this);},VisuMZ[_0x2805a3(0x284)]['Game_BattlerBase_refresh']=Game_BattlerBase[_0x2805a3(0x6ac)]['refresh'],Game_BattlerBase['prototype']['refresh']=function(){const _0x186767=_0x2805a3;this['_cache']={},VisuMZ[_0x186767(0x284)][_0x186767(0x3c3)]['call'](this);},Game_BattlerBase['prototype']['checkCacheKey']=function(_0x5363d6){const _0x9fe523=_0x2805a3;return this[_0x9fe523(0x58e)]=this[_0x9fe523(0x58e)]||{},this[_0x9fe523(0x58e)][_0x5363d6]!==undefined;},Game_BattlerBase[_0x2805a3(0x6ac)][_0x2805a3(0x742)]=function(_0x8c2ed1){const _0x2d91f0=_0x2805a3,_0x549222=(_0x514963,_0x287e62)=>{const _0x32dc91=_0x5302;if(_0x32dc91(0x6c5)!==_0x32dc91(0x271)){if(!_0x287e62)return _0x514963;if(_0x287e62[_0x32dc91(0x22b)][_0x32dc91(0x137)](VisuMZ[_0x32dc91(0x284)][_0x32dc91(0x799)][_0x32dc91(0x742)][_0x8c2ed1])){if(_0x32dc91(0x3de)!==_0x32dc91(0x3de)){function _0x3dff0b(){const _0x4ee372=_0x32dc91,_0x4472a1=_0x4f7f2c(_0x3f4114['$1']);_0x4472a1!==_0x7041a0[_0x3f9eb7]['version']&&(_0x470708(_0x4ee372(0x1c7)[_0x4ee372(0x2fb)](_0x29b957,_0x4472a1)),_0x454060[_0x4ee372(0x780)]());}}else{var _0x380783=Number(RegExp['$1']);_0x514963+=_0x380783;}}if(_0x287e62[_0x32dc91(0x22b)][_0x32dc91(0x137)](VisuMZ[_0x32dc91(0x284)][_0x32dc91(0x799)]['paramPlusJS'][_0x8c2ed1])){var _0x597aa8=String(RegExp['$1']);try{_0x514963+=eval(_0x597aa8);}catch(_0x207615){if($gameTemp['isPlaytest']())console['log'](_0x207615);}}return _0x514963;}else{function _0x4c71d5(){const _0x2f26a5=_0x32dc91;return _0x2f26a5(0xc3);}}};return this[_0x2d91f0(0x52f)]()[_0x2d91f0(0x7d5)](_0x549222,this[_0x2d91f0(0x4f2)][_0x8c2ed1]);},Game_BattlerBase[_0x2805a3(0x6ac)][_0x2805a3(0xef)]=function(_0x3917cd){const _0x16403e=_0x2805a3;var _0x426cd8=_0x16403e(0xc9)+(this[_0x16403e(0x706)]()?'Actor':_0x16403e(0x4ff))+_0x16403e(0x442)+_0x3917cd;if(this[_0x16403e(0x43e)](_0x426cd8))return this[_0x16403e(0x58e)][_0x426cd8];this[_0x16403e(0x58e)][_0x426cd8]=eval(VisuMZ['CoreEngine'][_0x16403e(0x779)][_0x16403e(0x303)][_0x426cd8]);const _0x1878c9=(_0x10b75b,_0x7fe19c)=>{const _0x1aba7c=_0x16403e;if(!_0x7fe19c)return _0x10b75b;if(_0x7fe19c[_0x1aba7c(0x22b)][_0x1aba7c(0x137)](VisuMZ[_0x1aba7c(0x284)][_0x1aba7c(0x799)]['paramMax'][_0x3917cd])){var _0x185cab=Number(RegExp['$1']);if(_0x185cab===0x0)_0x185cab=Number[_0x1aba7c(0x2cc)];_0x10b75b=Math[_0x1aba7c(0x2dd)](_0x10b75b,_0x185cab);}if(_0x7fe19c['note'][_0x1aba7c(0x137)](VisuMZ[_0x1aba7c(0x284)][_0x1aba7c(0x799)]['paramMaxJS'][_0x3917cd])){var _0xbd03a8=String(RegExp['$1']);try{if(_0x1aba7c(0x3d9)!==_0x1aba7c(0x162))_0x10b75b=Math[_0x1aba7c(0x2dd)](_0x10b75b,Number(eval(_0xbd03a8)));else{function _0x51f2db(){const _0x3c4b75=_0x1aba7c;try{_0x2085d0(_0x10a098);}catch(_0x89324c){_0x9eb0ac[_0x3c4b75(0x326)]()&&(_0x3f644a['log']('Show\x20Scrolling\x20Text\x20Script\x20Error'),_0x5e3cd9[_0x3c4b75(0x77e)](_0x89324c));}return!![];}}}catch(_0x3644cc){if($gameTemp['isPlaytest']())console[_0x1aba7c(0x77e)](_0x3644cc);}}return _0x10b75b;};if(this[_0x16403e(0x58e)][_0x426cd8]===0x0)this[_0x16403e(0x58e)][_0x426cd8]=Number['MAX_SAFE_INTEGER'];return this[_0x16403e(0x58e)][_0x426cd8]=this[_0x16403e(0x52f)]()[_0x16403e(0x7d5)](_0x1878c9,this[_0x16403e(0x58e)][_0x426cd8]),this[_0x16403e(0x58e)][_0x426cd8];},Game_BattlerBase['prototype'][_0x2805a3(0x46c)]=function(_0x5cda65){const _0x59dec0=_0x2805a3,_0x36998b=this[_0x59dec0(0x6af)](Game_BattlerBase['TRAIT_PARAM'],_0x5cda65),_0x5f52c7=(_0x3ca843,_0x256a4e)=>{const _0x4c4bba=_0x59dec0;if(_0x4c4bba(0x4b5)===_0x4c4bba(0x4b5)){if(!_0x256a4e)return _0x3ca843;if(_0x256a4e[_0x4c4bba(0x22b)][_0x4c4bba(0x137)](VisuMZ[_0x4c4bba(0x284)]['RegExp'][_0x4c4bba(0x349)][_0x5cda65])){var _0x2139fe=Number(RegExp['$1'])/0x64;_0x3ca843*=_0x2139fe;}if(_0x256a4e[_0x4c4bba(0x22b)][_0x4c4bba(0x137)](VisuMZ['CoreEngine'][_0x4c4bba(0x799)][_0x4c4bba(0x663)][_0x5cda65])){if(_0x4c4bba(0x34c)==='qYoru'){function _0x3af69f(){const _0x4b05a6=_0x4c4bba;return[0x25,0x26,0x27,0x28][_0x4b05a6(0x141)](this[_0x4b05a6(0x5ed)]);}}else{var _0x2139fe=Number(RegExp['$1']);_0x3ca843*=_0x2139fe;}}if(_0x256a4e[_0x4c4bba(0x22b)][_0x4c4bba(0x137)](VisuMZ[_0x4c4bba(0x284)][_0x4c4bba(0x799)][_0x4c4bba(0x4da)][_0x5cda65])){var _0x79917b=String(RegExp['$1']);try{_0x3ca843*=eval(_0x79917b);}catch(_0x11be1a){if($gameTemp['isPlaytest']())console[_0x4c4bba(0x77e)](_0x11be1a);}}return _0x3ca843;}else{function _0x34d191(){const _0x3bb890=_0x4c4bba;if(!this[_0x3bb890(0x373)]())return;_0x15b729=_0x2a6f10||![],_0x18e772=_0x5969e3||![];if(_0x2730ec[_0x11a137]){const _0x137603={'targets':_0x2694ad,'animationId':_0x5d732c,'mirror':_0x97d285,'mute':_0x42123c};this['_fauxAnimationQueue'][_0x3bb890(0x156)](_0x137603);for(const _0x1a98be of _0x2bbdd0){_0x1a98be[_0x3bb890(0x62f)]&&_0x1a98be[_0x3bb890(0x62f)]();}}}}};return this['traitObjects']()[_0x59dec0(0x7d5)](_0x5f52c7,_0x36998b);},Game_BattlerBase['prototype'][_0x2805a3(0x4de)]=function(_0x453fbf){const _0x39e58f=_0x2805a3,_0x8a2bed=(_0x44f65d,_0x4d0009)=>{const _0x22553c=_0x5302;if('JmOkp'!=='JmOkp'){function _0x1249ba(){const _0x56bac9=_0x5302;if(!this[_0x56bac9(0x27e)])return;this['x']=this[_0x56bac9(0x27e)][_0x56bac9(0x29d)],this['y']=this[_0x56bac9(0x27e)][_0x56bac9(0x3f8)],this[_0x56bac9(0x739)]['x']=this[_0x56bac9(0x27e)]['targetScaleX'],this[_0x56bac9(0x739)]['y']=this[_0x56bac9(0x27e)][_0x56bac9(0x241)],this[_0x56bac9(0x747)]=this[_0x56bac9(0x27e)]['targetOpacity'],this['backOpacity']=this['_coreEasing'][_0x56bac9(0x773)],this['contentsOpacity']=this['_coreEasing'][_0x56bac9(0x4a9)],this[_0x56bac9(0x1f6)](_0x3a19a0,_0x2fdc49,this['x'],this['y'],this[_0x56bac9(0x739)]['x'],this[_0x56bac9(0x739)]['y'],this[_0x56bac9(0x747)],this['backOpacity'],this[_0x56bac9(0xab)]);}}else{if(!_0x4d0009)return _0x44f65d;if(_0x4d0009[_0x22553c(0x22b)][_0x22553c(0x137)](VisuMZ[_0x22553c(0x284)][_0x22553c(0x799)][_0x22553c(0x2f4)][_0x453fbf])){var _0x21ca8b=Number(RegExp['$1']);_0x44f65d+=_0x21ca8b;}if(_0x4d0009[_0x22553c(0x22b)]['match'](VisuMZ[_0x22553c(0x284)]['RegExp'][_0x22553c(0x5de)][_0x453fbf])){var _0x467d4b=String(RegExp['$1']);try{_0x44f65d+=eval(_0x467d4b);}catch(_0xf80cf2){if($gameTemp[_0x22553c(0x326)]())console[_0x22553c(0x77e)](_0xf80cf2);}}return _0x44f65d;}};return this[_0x39e58f(0x52f)]()[_0x39e58f(0x7d5)](_0x8a2bed,0x0);},Game_BattlerBase[_0x2805a3(0x6ac)]['param']=function(_0x450e20){const _0x69527d=_0x2805a3;let _0x47b4b2=_0x69527d(0x186)+_0x450e20+_0x69527d(0x6cb);if(this[_0x69527d(0x43e)](_0x47b4b2))return this[_0x69527d(0x58e)][_0x47b4b2];return this[_0x69527d(0x58e)][_0x47b4b2]=Math[_0x69527d(0x72b)](VisuMZ[_0x69527d(0x284)][_0x69527d(0x779)][_0x69527d(0x303)][_0x69527d(0x255)][_0x69527d(0x5a2)](this,_0x450e20)),this[_0x69527d(0x58e)][_0x47b4b2];},Game_BattlerBase[_0x2805a3(0x6ac)]['xparamPlus']=function(_0x5e0689){const _0x26e522=_0x2805a3,_0x41175b=(_0x4d58a3,_0x4cace4)=>{const _0x3a0ed6=_0x5302;if(_0x3a0ed6(0x41e)==='NCAkt'){if(!_0x4cace4)return _0x4d58a3;if(_0x4cace4[_0x3a0ed6(0x22b)][_0x3a0ed6(0x137)](VisuMZ[_0x3a0ed6(0x284)][_0x3a0ed6(0x799)][_0x3a0ed6(0x7e1)][_0x5e0689])){var _0x263e54=Number(RegExp['$1'])/0x64;_0x4d58a3+=_0x263e54;}if(_0x4cace4[_0x3a0ed6(0x22b)][_0x3a0ed6(0x137)](VisuMZ[_0x3a0ed6(0x284)][_0x3a0ed6(0x799)]['xparamPlus2'][_0x5e0689])){var _0x263e54=Number(RegExp['$1']);_0x4d58a3+=_0x263e54;}if(_0x4cace4[_0x3a0ed6(0x22b)][_0x3a0ed6(0x137)](VisuMZ[_0x3a0ed6(0x284)][_0x3a0ed6(0x799)][_0x3a0ed6(0x552)][_0x5e0689])){var _0x2d568b=String(RegExp['$1']);try{if(_0x3a0ed6(0x2eb)==='PRPXG'){function _0x1bd474(){const _0x362063=_0x3a0ed6;_0x52cfe0['ConvertParams'](_0x47c013,_0x43b4c6);const _0x89eb4f=_0x149e09[_0x362063(0x315)]||0x0;_0x40f647[_0x362063(0x69f)](_0x89eb4f);}}else _0x4d58a3+=eval(_0x2d568b);}catch(_0xb6977a){if($gameTemp[_0x3a0ed6(0x326)]())console[_0x3a0ed6(0x77e)](_0xb6977a);}}return _0x4d58a3;}else{function _0x165bc7(){const _0x25d882=_0x3a0ed6;this[_0x25d882(0x667)]=[],this['_cacheScaleX']=this['scale']['x'],this[_0x25d882(0x69e)]=this[_0x25d882(0x739)]['y'];}}};return this['traitObjects']()[_0x26e522(0x7d5)](_0x41175b,0x0);},Game_BattlerBase[_0x2805a3(0x6ac)][_0x2805a3(0x167)]=function(_0x1c96d3){const _0x91bdf1=_0x2805a3,_0xc441af=(_0x7cd5b8,_0x4dca96)=>{const _0x47ee80=_0x5302;if(!_0x4dca96)return _0x7cd5b8;if(_0x4dca96[_0x47ee80(0x22b)][_0x47ee80(0x137)](VisuMZ[_0x47ee80(0x284)]['RegExp'][_0x47ee80(0x519)][_0x1c96d3])){var _0x246eb4=Number(RegExp['$1'])/0x64;_0x7cd5b8*=_0x246eb4;}if(_0x4dca96['note'][_0x47ee80(0x137)](VisuMZ['CoreEngine']['RegExp'][_0x47ee80(0x590)][_0x1c96d3])){var _0x246eb4=Number(RegExp['$1']);_0x7cd5b8*=_0x246eb4;}if(_0x4dca96[_0x47ee80(0x22b)][_0x47ee80(0x137)](VisuMZ['CoreEngine'][_0x47ee80(0x799)]['xparamRateJS'][_0x1c96d3])){if(_0x47ee80(0x160)===_0x47ee80(0x160)){var _0x126864=String(RegExp['$1']);try{_0x7cd5b8*=eval(_0x126864);}catch(_0x37b9f8){if(_0x47ee80(0x2cd)===_0x47ee80(0x2cd)){if($gameTemp[_0x47ee80(0x326)]())console[_0x47ee80(0x77e)](_0x37b9f8);}else{function _0x55816f(){const _0x3b8279=_0x47ee80;_0xbdf276+=_0x127293+'\x0a',_0x1c9c32+='〘Show\x20Text〙\x0a',_0x2d4c06[_0x3b8279(0x7d6)][0x4]!==''&&_0x1b0824[_0x3b8279(0x7d6)][0x4]!==_0x1d5069&&(_0x1a4aef+=_0x3b8279(0x157)['format'](_0x579f7b['parameters'][0x4]));}}}}else{function _0x4bd75d(){const _0x31141d=_0x47ee80,_0x11372e=_0x31141d(0xee);this[_0x31141d(0x6df)]=this[_0x31141d(0x6df)]||{};if(this[_0x31141d(0x6df)][_0x11372e])return this[_0x31141d(0x6df)][_0x11372e];const _0x325409=_0x454a67['CoreEngine']['Settings'][_0x31141d(0x2ee)][_0x31141d(0x5fe)];return this[_0x31141d(0x434)](_0x11372e,_0x325409);}}}return _0x7cd5b8;};return this[_0x91bdf1(0x52f)]()['reduce'](_0xc441af,0x1);},Game_BattlerBase[_0x2805a3(0x6ac)][_0x2805a3(0x97)]=function(_0x3c2896){const _0x40107a=_0x2805a3,_0x3991df=(_0x47b59c,_0x1d707d)=>{const _0x2efbdf=_0x5302;if(_0x2efbdf(0x5b2)!==_0x2efbdf(0x5b2)){function _0x502651(){const _0x1a1e63=_0x2efbdf;return-0.5*(_0x552d9e[_0x1a1e63(0x597)](0x1-_0xcba62c*_0x530c04)-0x1);}}else{if(!_0x1d707d)return _0x47b59c;if(_0x1d707d['note'][_0x2efbdf(0x137)](VisuMZ[_0x2efbdf(0x284)][_0x2efbdf(0x799)][_0x2efbdf(0x6b2)][_0x3c2896])){var _0x19e682=Number(RegExp['$1'])/0x64;_0x47b59c+=_0x19e682;}if(_0x1d707d[_0x2efbdf(0x22b)][_0x2efbdf(0x137)](VisuMZ[_0x2efbdf(0x284)]['RegExp'][_0x2efbdf(0x3e9)][_0x3c2896])){if(_0x2efbdf(0x421)!==_0x2efbdf(0x421)){function _0x302802(){const _0x35ad53=_0x2efbdf;if(!this[_0x35ad53(0x27e)])return _0x4adacc;return _0x20c725[_0x35ad53(0x3a3)](_0x442c13,this['_coreEasing']['type']||_0x35ad53(0x250));}}else{var _0x19e682=Number(RegExp['$1']);_0x47b59c+=_0x19e682;}}if(_0x1d707d[_0x2efbdf(0x22b)]['match'](VisuMZ[_0x2efbdf(0x284)]['RegExp'][_0x2efbdf(0x2d7)][_0x3c2896])){if(_0x2efbdf(0x60e)==='IKAAX'){function _0x12d323(){const _0x14d148=_0x2efbdf;let _0x135163=this[_0x14d148(0x372)]();this[_0x14d148(0x7f8)]()&&(_0x135163=_0x2172d7[_0x14d148(0x53d)](_0x135163));const _0x2b21b0=this[_0x14d148(0x731)]()-0x1,_0x4a5402=this[_0x14d148(0x35d)]();this[_0x14d148(0x73e)](),this[_0x14d148(0x639)][_0x14d148(0x15c)](_0x135163,0x0,0x0,_0x2b21b0,_0x4a5402,'right');}}else{var _0x1b95de=String(RegExp['$1']);try{_0x47b59c+=eval(_0x1b95de);}catch(_0x1c0044){if($gameTemp[_0x2efbdf(0x326)]())console[_0x2efbdf(0x77e)](_0x1c0044);}}}return _0x47b59c;}};return this[_0x40107a(0x52f)]()['reduce'](_0x3991df,0x0);},Game_BattlerBase[_0x2805a3(0x6ac)]['xparam']=function(_0x2cad09){const _0x19ce3e=_0x2805a3;let _0x457f1b='xparam'+_0x2cad09+_0x19ce3e(0x6cb);if(this[_0x19ce3e(0x43e)](_0x457f1b))return this[_0x19ce3e(0x58e)][_0x457f1b];return this['_cache'][_0x457f1b]=VisuMZ['CoreEngine']['Settings']['Param'][_0x19ce3e(0x489)][_0x19ce3e(0x5a2)](this,_0x2cad09),this[_0x19ce3e(0x58e)][_0x457f1b];},Game_BattlerBase[_0x2805a3(0x6ac)][_0x2805a3(0x290)]=function(_0x831a3c){const _0x1eab67=_0x2805a3,_0x44151f=(_0x300d14,_0x32921e)=>{const _0x25344e=_0x5302;if(!_0x32921e)return _0x300d14;if(_0x32921e[_0x25344e(0x22b)]['match'](VisuMZ[_0x25344e(0x284)][_0x25344e(0x799)][_0x25344e(0x5a0)][_0x831a3c])){if(_0x25344e(0xf1)===_0x25344e(0x721)){function _0x364b68(){_0x43514f+=_0x5998ac(_0x1f0a65);}}else{var _0x40f176=Number(RegExp['$1'])/0x64;_0x300d14+=_0x40f176;}}if(_0x32921e[_0x25344e(0x22b)]['match'](VisuMZ[_0x25344e(0x284)]['RegExp'][_0x25344e(0x6a0)][_0x831a3c])){var _0x40f176=Number(RegExp['$1']);_0x300d14+=_0x40f176;}if(_0x32921e[_0x25344e(0x22b)][_0x25344e(0x137)](VisuMZ[_0x25344e(0x284)][_0x25344e(0x799)][_0x25344e(0x553)][_0x831a3c])){var _0x19e2f1=String(RegExp['$1']);try{_0x300d14+=eval(_0x19e2f1);}catch(_0x29556e){if($gameTemp[_0x25344e(0x326)]())console[_0x25344e(0x77e)](_0x29556e);}}return _0x300d14;};return this[_0x1eab67(0x52f)]()[_0x1eab67(0x7d5)](_0x44151f,0x0);},Game_BattlerBase[_0x2805a3(0x6ac)]['sparamRate']=function(_0x41a894){const _0x3a5821=_0x2805a3,_0x4fbf5b=(_0x22484a,_0x578705)=>{const _0x54a096=_0x5302;if('ujdMy'!==_0x54a096(0x2fd)){if(!_0x578705)return _0x22484a;if(_0x578705['note'][_0x54a096(0x137)](VisuMZ[_0x54a096(0x284)][_0x54a096(0x799)]['sparamRate1'][_0x41a894])){if(_0x54a096(0x66c)!==_0x54a096(0x19e)){var _0x4c44ba=Number(RegExp['$1'])/0x64;_0x22484a*=_0x4c44ba;}else{function _0xe8d5ad(){const _0x362232=_0x54a096;if(this[_0x362232(0x308)]())return 0x1;const _0x7991ea=this['nextLevelExp']()-this[_0x362232(0x133)](),_0x3d07f5=this[_0x362232(0x248)]()-this[_0x362232(0x133)]();return(_0x3d07f5/_0x7991ea)[_0x362232(0x43a)](0x0,0x1);}}}if(_0x578705[_0x54a096(0x22b)][_0x54a096(0x137)](VisuMZ[_0x54a096(0x284)][_0x54a096(0x799)][_0x54a096(0x7d0)][_0x41a894])){if(_0x54a096(0x6f1)!==_0x54a096(0x6f1)){function _0x59f70b(){this['_forcedTroopView']='FV';}}else{var _0x4c44ba=Number(RegExp['$1']);_0x22484a*=_0x4c44ba;}}if(_0x578705['note']['match'](VisuMZ[_0x54a096(0x284)][_0x54a096(0x799)][_0x54a096(0x19f)][_0x41a894])){if('kLAnF'===_0x54a096(0x3b6)){function _0x254635(){const _0x691580=_0x54a096,_0x24a760=_0x10349b('fs');let _0x55663f=_0x691580(0xf3)['format'](_0x5199a4||'0');_0x24a760[_0x691580(0x27b)](_0x55663f,_0x426280,_0x533ade=>{const _0x546518=_0x691580;if(_0x533ade)throw _0x4ccbad;else _0xc19586&&_0xc24025(_0x546518(0x11f)[_0x546518(0x2fb)](_0x55663f));});}}else{var _0x45af1b=String(RegExp['$1']);try{if(_0x54a096(0x641)!==_0x54a096(0x62b))_0x22484a*=eval(_0x45af1b);else{function _0x471dc8(){for(const _0x8349ef of _0x3bf6d0){this['createFauxAnimationSprite']([_0x8349ef],_0x2c0a54,_0x488f93,_0x50ff92,_0x2a7c2e),_0x381dc9+=_0x1371e9;}}}}catch(_0x152763){if('HWTvy'!==_0x54a096(0xfe)){if($gameTemp[_0x54a096(0x326)]())console['log'](_0x152763);}else{function _0xe64e99(){return!![];}}}}}return _0x22484a;}else{function _0x3f4a5d(){const _0x2a671e=_0x54a096;_0x4eda82['VisuMZ_2_BattleSystemFTB']&&(this[_0x2a671e(0x5d1)]=_0x2a671e(0x23d));}}};return this['traitObjects']()[_0x3a5821(0x7d5)](_0x4fbf5b,0x1);},Game_BattlerBase['prototype'][_0x2805a3(0x230)]=function(_0x4c45c5){const _0x17b531=_0x2805a3,_0x4d4895=(_0x4859f7,_0x4942b4)=>{const _0x48eab3=_0x5302;if(!_0x4942b4)return _0x4859f7;if(_0x4942b4[_0x48eab3(0x22b)][_0x48eab3(0x137)](VisuMZ[_0x48eab3(0x284)][_0x48eab3(0x799)][_0x48eab3(0x79d)][_0x4c45c5])){var _0x3d8e96=Number(RegExp['$1'])/0x64;_0x4859f7+=_0x3d8e96;}if(_0x4942b4['note'][_0x48eab3(0x137)](VisuMZ[_0x48eab3(0x284)]['RegExp'][_0x48eab3(0x5c0)][_0x4c45c5])){if('CNQXk'==='CNQXk'){var _0x3d8e96=Number(RegExp['$1']);_0x4859f7+=_0x3d8e96;}else{function _0x3bfa5e(){const _0x4ee745=_0x48eab3;this[_0x4ee745(0x573)](0x0);}}}if(_0x4942b4[_0x48eab3(0x22b)][_0x48eab3(0x137)](VisuMZ[_0x48eab3(0x284)][_0x48eab3(0x799)][_0x48eab3(0xaa)][_0x4c45c5])){if(_0x48eab3(0x788)!=='IuOdH'){var _0xc6ebc4=String(RegExp['$1']);try{_0x4859f7+=eval(_0xc6ebc4);}catch(_0x23bea3){if($gameTemp['isPlaytest']())console[_0x48eab3(0x77e)](_0x23bea3);}}else{function _0x53e168(){const _0x6d8ea9=_0x48eab3;if(this[_0x6d8ea9(0x3ae)]===_0x58e61a)this[_0x6d8ea9(0x4d9)]();return this[_0x6d8ea9(0x3ae)];}}}return _0x4859f7;};return this[_0x17b531(0x52f)]()['reduce'](_0x4d4895,0x0);},Game_BattlerBase[_0x2805a3(0x6ac)][_0x2805a3(0x762)]=function(_0x50b30c){const _0x57c6a6=_0x2805a3;let _0x4dc80c=_0x57c6a6(0x762)+_0x50b30c+_0x57c6a6(0x6cb);if(this[_0x57c6a6(0x43e)](_0x4dc80c))return this[_0x57c6a6(0x58e)][_0x4dc80c];return this[_0x57c6a6(0x58e)][_0x4dc80c]=VisuMZ[_0x57c6a6(0x284)][_0x57c6a6(0x779)][_0x57c6a6(0x303)]['SParameterFormula']['call'](this,_0x50b30c),this[_0x57c6a6(0x58e)][_0x4dc80c];},Game_BattlerBase['prototype'][_0x2805a3(0x2c4)]=function(_0x5c7206,_0x1ef16c){const _0x15bb8d=_0x2805a3;if(typeof paramId===_0x15bb8d(0x801))return this[_0x15bb8d(0x186)](_0x5c7206);_0x5c7206=String(_0x5c7206||'')['toUpperCase']();if(_0x5c7206==='MAXHP')return this[_0x15bb8d(0x186)](0x0);if(_0x5c7206===_0x15bb8d(0x294))return this[_0x15bb8d(0x186)](0x1);if(_0x5c7206==='ATK')return this[_0x15bb8d(0x186)](0x2);if(_0x5c7206==='DEF')return this[_0x15bb8d(0x186)](0x3);if(_0x5c7206===_0x15bb8d(0x198))return this[_0x15bb8d(0x186)](0x4);if(_0x5c7206==='MDF')return this[_0x15bb8d(0x186)](0x5);if(_0x5c7206===_0x15bb8d(0x811))return this[_0x15bb8d(0x186)](0x6);if(_0x5c7206===_0x15bb8d(0x7cd))return this['param'](0x7);if(_0x5c7206==='HIT')return _0x1ef16c?String(Math['round'](this[_0x15bb8d(0x626)](0x0)*0x64))+'%':this[_0x15bb8d(0x626)](0x0);if(_0x5c7206===_0x15bb8d(0x7de))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x626)](0x1)*0x64))+'%':this['xparam'](0x1);if(_0x5c7206==='CRI')return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x626)](0x2)*0x64))+'%':this[_0x15bb8d(0x626)](0x2);if(_0x5c7206==='CEV')return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x626)](0x3)*0x64))+'%':this[_0x15bb8d(0x626)](0x3);if(_0x5c7206==='MEV')return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x626)](0x4)*0x64))+'%':this[_0x15bb8d(0x626)](0x4);if(_0x5c7206==='MRF')return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x626)](0x5)*0x64))+'%':this[_0x15bb8d(0x626)](0x5);if(_0x5c7206===_0x15bb8d(0x377))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this['xparam'](0x6)*0x64))+'%':this['xparam'](0x6);if(_0x5c7206==='HRG')return _0x1ef16c?String(Math['round'](this[_0x15bb8d(0x626)](0x7)*0x64))+'%':this['xparam'](0x7);if(_0x5c7206===_0x15bb8d(0x12c))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x626)](0x8)*0x64))+'%':this['xparam'](0x8);if(_0x5c7206===_0x15bb8d(0x73d))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x626)](0x9)*0x64))+'%':this[_0x15bb8d(0x626)](0x9);if(_0x5c7206==='TGR')return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x762)](0x0)*0x64))+'%':this[_0x15bb8d(0x762)](0x0);if(_0x5c7206==='GRD')return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this['sparam'](0x1)*0x64))+'%':this['sparam'](0x1);if(_0x5c7206===_0x15bb8d(0x46f))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x762)](0x2)*0x64))+'%':this[_0x15bb8d(0x762)](0x2);if(_0x5c7206===_0x15bb8d(0x6a7))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this['sparam'](0x3)*0x64))+'%':this[_0x15bb8d(0x762)](0x3);if(_0x5c7206===_0x15bb8d(0x44e))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x762)](0x4)*0x64))+'%':this[_0x15bb8d(0x762)](0x4);if(_0x5c7206===_0x15bb8d(0x4af))return _0x1ef16c?String(Math['round'](this[_0x15bb8d(0x762)](0x5)*0x64))+'%':this[_0x15bb8d(0x762)](0x5);if(_0x5c7206===_0x15bb8d(0x481))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x762)](0x6)*0x64))+'%':this[_0x15bb8d(0x762)](0x6);if(_0x5c7206==='MDR')return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this['sparam'](0x7)*0x64))+'%':this['sparam'](0x7);if(_0x5c7206===_0x15bb8d(0x487))return _0x1ef16c?String(Math['round'](this[_0x15bb8d(0x762)](0x8)*0x64))+'%':this[_0x15bb8d(0x762)](0x8);if(_0x5c7206===_0x15bb8d(0x514))return _0x1ef16c?String(Math[_0x15bb8d(0x72b)](this[_0x15bb8d(0x762)](0x9)*0x64))+'%':this[_0x15bb8d(0x762)](0x9);if(VisuMZ['CoreEngine']['CustomParamAbb'][_0x5c7206]){if(_0x15bb8d(0x568)==='uahje'){const _0x4dd9b8=VisuMZ[_0x15bb8d(0x284)][_0x15bb8d(0x221)][_0x5c7206],_0x10b605=this[_0x4dd9b8];if(VisuMZ[_0x15bb8d(0x284)][_0x15bb8d(0x9b)][_0x5c7206]===_0x15bb8d(0x527)){if(_0x15bb8d(0x69c)!==_0x15bb8d(0x69c)){function _0xe16acf(){const _0x4ee4f1=_0x15bb8d,_0x5df80a=_0x47bc55[_0x4ee4f1(0x315)](_0x4fd67f);_0x144194[_0x4ee4f1(0x149)](_0x57d2cd,!_0x5df80a);}}else return _0x10b605;}else return _0x1ef16c?String(Math['round'](_0x10b605*0x64))+'%':_0x10b605;}else{function _0xbf58bb(){const _0x5db7d6=_0x15bb8d;_0x464e3b['log'](_0x5db7d6(0xe3)),_0x588fcf['log'](_0x27934d);}}}return'';},Game_BattlerBase[_0x2805a3(0x6ac)]['isDying']=function(){const _0x5d6570=_0x2805a3;return this[_0x5d6570(0x312)]()&&this[_0x5d6570(0xd3)]<this[_0x5d6570(0x7aa)]*VisuMZ[_0x5d6570(0x284)][_0x5d6570(0x779)]['Param'][_0x5d6570(0x295)];},Game_Battler[_0x2805a3(0x6ac)]['performMiss']=function(){const _0x250720=_0x2805a3;SoundManager[_0x250720(0x666)](),this[_0x250720(0x19c)](_0x250720(0x261));},VisuMZ['CoreEngine'][_0x2805a3(0x246)]=Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x5b8)],Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x5b8)]=function(_0x58f6c4){const _0x2b377e=_0x2805a3;if(this[_0x2b377e(0x503)]>0x63)return this[_0x2b377e(0x482)](_0x58f6c4);return VisuMZ[_0x2b377e(0x284)][_0x2b377e(0x246)][_0x2b377e(0x5a2)](this,_0x58f6c4);},Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x482)]=function(_0x33ce00){const _0x91762d=_0x2805a3,_0x3c1a64=this[_0x91762d(0x751)]()[_0x91762d(0x54e)][_0x33ce00][0x63],_0x411c1b=this[_0x91762d(0x751)]()[_0x91762d(0x54e)][_0x33ce00][0x62];return _0x3c1a64+(_0x3c1a64-_0x411c1b)*(this['level']-0x63);},VisuMZ['CoreEngine'][_0x2805a3(0x589)]=Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x4b2)],Game_Actor['prototype'][_0x2805a3(0x4b2)]=function(_0x51d543,_0xd748a4){const _0x4f2a38=_0x2805a3;$gameTemp[_0x4f2a38(0x385)]=!![],VisuMZ[_0x4f2a38(0x284)]['Game_Actor_changeClass']['call'](this,_0x51d543,_0xd748a4),$gameTemp[_0x4f2a38(0x385)]=undefined;},VisuMZ[_0x2805a3(0x284)]['Game_Actor_levelUp']=Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x6c4)],Game_Actor['prototype'][_0x2805a3(0x6c4)]=function(){const _0x5f2a0b=_0x2805a3;VisuMZ[_0x5f2a0b(0x284)][_0x5f2a0b(0x575)]['call'](this);if(!$gameTemp[_0x5f2a0b(0x385)])this[_0x5f2a0b(0x16f)]();},Game_Actor[_0x2805a3(0x6ac)]['levelUpRecovery']=function(){const _0x9f9b79=_0x2805a3;this[_0x9f9b79(0x58e)]={};if(VisuMZ[_0x9f9b79(0x284)][_0x9f9b79(0x779)][_0x9f9b79(0x5f9)][_0x9f9b79(0x485)])this['_hp']=this[_0x9f9b79(0x7aa)];if(VisuMZ[_0x9f9b79(0x284)][_0x9f9b79(0x779)]['QoL'][_0x9f9b79(0x10f)])this[_0x9f9b79(0x323)]=this[_0x9f9b79(0x10b)];},Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x188)]=function(){const _0x3cf041=_0x2805a3;if(this[_0x3cf041(0x308)]())return 0x1;const _0x5a222f=this[_0x3cf041(0x5ca)]()-this[_0x3cf041(0x133)](),_0x2f5674=this[_0x3cf041(0x248)]()-this[_0x3cf041(0x133)]();return(_0x2f5674/_0x5a222f)[_0x3cf041(0x43a)](0x0,0x1);},Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x52f)]=function(){const _0x99ee92=_0x2805a3,_0x261243=Game_Battler[_0x99ee92(0x6ac)][_0x99ee92(0x52f)]['call'](this);for(const _0x2dc3dc of this[_0x99ee92(0x512)]()){_0x2dc3dc&&_0x261243['push'](_0x2dc3dc);}return _0x261243[_0x99ee92(0x156)](this[_0x99ee92(0x751)](),this['actor']()),_0x261243;},Object[_0x2805a3(0x175)](Game_Enemy[_0x2805a3(0x6ac)],_0x2805a3(0x503),{'get':function(){const _0x207784=_0x2805a3;return this[_0x207784(0x3c5)]();},'configurable':!![]}),Game_Enemy['prototype']['getLevel']=function(){const _0x420018=_0x2805a3;return this[_0x420018(0x765)]()[_0x420018(0x503)];},Game_Enemy[_0x2805a3(0x6ac)][_0x2805a3(0x410)]=function(){const _0x50bba0=_0x2805a3;!this[_0x50bba0(0x324)]&&(this[_0x50bba0(0x4cd)]+=Math[_0x50bba0(0x72b)]((Graphics[_0x50bba0(0x80a)]-0x270)/0x2),this[_0x50bba0(0x4cd)]-=Math['floor']((Graphics[_0x50bba0(0x80a)]-Graphics[_0x50bba0(0x7f7)])/0x2),$gameSystem[_0x50bba0(0x256)]()?this[_0x50bba0(0x4ac)]-=Math[_0x50bba0(0x4cb)]((Graphics[_0x50bba0(0x42c)]-Graphics[_0x50bba0(0x30f)])/0x2):this[_0x50bba0(0x4ac)]+=Math[_0x50bba0(0x72b)]((Graphics[_0x50bba0(0x30f)]-0x330)/0x2)),this[_0x50bba0(0x324)]=!![];},Game_Party[_0x2805a3(0x6ac)][_0x2805a3(0x604)]=function(){const _0x59d73e=_0x2805a3;return VisuMZ[_0x59d73e(0x284)][_0x59d73e(0x779)]['Gold']['GoldMax'];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2bf)]=Game_Party[_0x2805a3(0x6ac)][_0x2805a3(0x384)],Game_Party[_0x2805a3(0x6ac)][_0x2805a3(0x384)]=function(_0x4c8775){const _0x44cb7e=_0x2805a3;if(VisuMZ['CoreEngine'][_0x44cb7e(0x779)][_0x44cb7e(0x5f9)][_0x44cb7e(0x4fe)]&&DataManager[_0x44cb7e(0x181)](_0x4c8775))return;VisuMZ[_0x44cb7e(0x284)][_0x44cb7e(0x2bf)][_0x44cb7e(0x5a2)](this,_0x4c8775);},Game_Party[_0x2805a3(0x6ac)][_0x2805a3(0x5c7)]=function(){const _0xe223d2=_0x2805a3,_0x58e9db=VisuMZ['CoreEngine']['Settings'][_0xe223d2(0x5f9)],_0x3a49f3=_0x58e9db[_0xe223d2(0x132)]??0x63;let _0x185e35=[];(_0x58e9db[_0xe223d2(0x484)]??!![])&&(_0x185e35=_0x185e35[_0xe223d2(0xb8)]($dataItems));(_0x58e9db['BTestWeapons']??!![])&&(_0x185e35=_0x185e35['concat']($dataWeapons));if(_0x58e9db['BTestArmors']??!![]){if('kueCZ'!==_0xe223d2(0x3ba))_0x185e35=_0x185e35[_0xe223d2(0xb8)]($dataArmors);else{function _0x1a9a17(){throw _0x502172;}}}for(const _0x545edb of _0x185e35){if(!_0x545edb)continue;if(_0x545edb[_0xe223d2(0x7c5)]['trim']()<=0x0)continue;if(_0x545edb['name'][_0xe223d2(0x137)](/-----/i))continue;this['gainItem'](_0x545edb,_0x3a49f3);}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x333)]=Game_Troop[_0x2805a3(0x6ac)][_0x2805a3(0x353)],Game_Troop[_0x2805a3(0x6ac)][_0x2805a3(0x353)]=function(_0x44fec0){const _0x4016b8=_0x2805a3;$gameTemp['clearForcedGameTroopSettingsCoreEngine'](),$gameTemp[_0x4016b8(0x1b8)](_0x44fec0),VisuMZ[_0x4016b8(0x284)][_0x4016b8(0x333)][_0x4016b8(0x5a2)](this,_0x44fec0);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0xd9)]=Game_Map[_0x2805a3(0x6ac)][_0x2805a3(0x353)],Game_Map[_0x2805a3(0x6ac)][_0x2805a3(0x353)]=function(_0x487087){const _0xc1bd9f=_0x2805a3;VisuMZ[_0xc1bd9f(0x284)]['Game_Map_setup'][_0xc1bd9f(0x5a2)](this,_0x487087),this[_0xc1bd9f(0x4d9)](_0x487087);},Game_Map[_0x2805a3(0x6ac)][_0x2805a3(0x4d9)]=function(){const _0x4087a7=_0x2805a3;this[_0x4087a7(0x3ae)]=VisuMZ[_0x4087a7(0x284)]['Settings'][_0x4087a7(0x5f9)][_0x4087a7(0x293)]||![];if($dataMap&&$dataMap[_0x4087a7(0x22b)]){if($dataMap[_0x4087a7(0x22b)][_0x4087a7(0x137)](/<SHOW TILE SHADOWS>/i))this['_hideTileShadows']=![];if($dataMap[_0x4087a7(0x22b)][_0x4087a7(0x137)](/<HIDE TILE SHADOWS>/i))this['_hideTileShadows']=!![];}},Game_Map[_0x2805a3(0x6ac)][_0x2805a3(0x697)]=function(){const _0x86ff2d=_0x2805a3;if(this['_hideTileShadows']===undefined)this[_0x86ff2d(0x4d9)]();return this[_0x86ff2d(0x3ae)];},VisuMZ['CoreEngine'][_0x2805a3(0x718)]=Game_Character[_0x2805a3(0x6ac)][_0x2805a3(0x4f5)],Game_Character[_0x2805a3(0x6ac)][_0x2805a3(0x4f5)]=function(_0x722bf9){const _0x2c1c1a=_0x2805a3;try{VisuMZ[_0x2c1c1a(0x284)]['Game_Character_processMoveCommand'][_0x2c1c1a(0x5a2)](this,_0x722bf9);}catch(_0x1409c3){if($gameTemp[_0x2c1c1a(0x326)]())console[_0x2c1c1a(0x77e)](_0x1409c3);}},Game_Player['prototype'][_0x2805a3(0xc7)]=function(){const _0x2f2495=_0x2805a3,_0x4faf56=$gameMap[_0x2f2495(0x67e)]();this[_0x2f2495(0x784)]=Math['randomInt'](_0x4faf56)+Math[_0x2f2495(0x1ae)](_0x4faf56)+this[_0x2f2495(0x5d4)]();},Game_Player[_0x2805a3(0x6ac)]['encounterStepsMinimum']=function(){const _0x44c90e=_0x2805a3;if($dataMap&&$dataMap[_0x44c90e(0x22b)]&&$dataMap['note'][_0x44c90e(0x137)](/<MINIMUM ENCOUNTER STEPS:[ ](\d+)>/i))return Number(RegExp['$1']);else{if('dCAgn'!==_0x44c90e(0x406))return VisuMZ['CoreEngine']['Settings'][_0x44c90e(0x5f9)][_0x44c90e(0x7c3)];else{function _0x23038a(){const _0x18035f=_0x44c90e;for(const _0x5b0368 of _0x30fa4b[_0x18035f(0x69d)]){const _0x110db5=new _0x31bed3(_0x5b0368);this[_0x18035f(0x579)](_0x110db5);}}}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x374)]=Game_Event[_0x2805a3(0x6ac)][_0x2805a3(0x42e)],Game_Event[_0x2805a3(0x6ac)][_0x2805a3(0x42e)]=function(_0x3e6ff4,_0x55f6d6){const _0x53cea5=_0x2805a3;if(this[_0x53cea5(0x5d7)]()){if(_0x53cea5(0x4a1)!==_0x53cea5(0x4a1)){function _0x5e8273(){const _0x1d3f91=_0x53cea5;if(this['_coreEngineShakeStyle']===_0xbe3b37)this['initCoreEngineScreenShake']();this[_0x1d3f91(0x637)]=_0x3968df['toLowerCase']()[_0x1d3f91(0xe2)]();}}else return this['checkSmartEventCollision'](_0x3e6ff4,_0x55f6d6);}else{if('qAHXy'===_0x53cea5(0x4aa)){function _0x1b6c19(){const _0x5e7bbd=_0x53cea5;let _0x582040=this[_0x5e7bbd(0x6c7)]();const _0x50dadf=this[_0x5e7bbd(0x787)](),_0xa012ff=this[_0x5e7bbd(0xdb)]();if(this[_0x5e7bbd(0x381)]()&&(_0x582040<_0x50dadf||_0x42d2d7&&_0xa012ff===0x1)){_0x582040+=_0xa012ff;if(_0x582040>=_0x50dadf)_0x582040=_0x50dadf-0x1;this[_0x5e7bbd(0x7e8)](_0x582040);}else!this[_0x5e7bbd(0x381)]()&&((_0x582040<_0x50dadf-_0xa012ff||_0x29b027&&_0xa012ff===0x1)&&this['smoothSelect']((_0x582040+_0xa012ff)%_0x50dadf));}}else return VisuMZ[_0x53cea5(0x284)][_0x53cea5(0x374)][_0x53cea5(0x5a2)](this,_0x3e6ff4,_0x55f6d6);}},Game_Event[_0x2805a3(0x6ac)][_0x2805a3(0x5d7)]=function(){const _0x112ab8=_0x2805a3;return VisuMZ[_0x112ab8(0x284)][_0x112ab8(0x779)]['QoL'][_0x112ab8(0x21a)];},Game_Event[_0x2805a3(0x6ac)][_0x2805a3(0x491)]=function(_0x47f795,_0x32618c){const _0x3becb2=_0x2805a3;if(!this[_0x3becb2(0xd6)]())return![];else{const _0x237cff=$gameMap[_0x3becb2(0x90)](_0x47f795,_0x32618c)['filter'](_0x2ee7b2=>_0x2ee7b2[_0x3becb2(0xd6)]());return _0x237cff[_0x3becb2(0x5ab)]>0x0;}},VisuMZ['CoreEngine'][_0x2805a3(0x6e1)]=Game_Interpreter[_0x2805a3(0x6ac)][_0x2805a3(0x368)],Game_Interpreter['prototype'][_0x2805a3(0x368)]=function(_0xd1ef58){const _0x1ec729=_0x2805a3,_0x4dbb73=this[_0x1ec729(0x593)]();return _0x4dbb73[_0x1ec729(0x137)](/\/\/[ ]SCRIPT[ ]CALL/i)?this[_0x1ec729(0x40e)](_0x4dbb73):VisuMZ[_0x1ec729(0x284)][_0x1ec729(0x6e1)]['call'](this,_0xd1ef58);},Game_Interpreter[_0x2805a3(0x6ac)][_0x2805a3(0x593)]=function(){const _0x3e9b7c=_0x2805a3;let _0x1acd52='',_0x343a72=this[_0x3e9b7c(0x12d)]+0x1;while(this[_0x3e9b7c(0x1e1)][_0x343a72]&&this['_list'][_0x343a72][_0x3e9b7c(0x43f)]===0x195){if('NnJPL'!=='NnJPL'){function _0x365b61(){const _0x3e0999=_0x3e9b7c;this[_0x3e0999(0x76a)][_0x3e0999(0x7ce)](_0x40140e[_0x3e0999(0x266)][_0x3e0999(0x451)]);}}else _0x1acd52+=this['_list'][_0x343a72][_0x3e9b7c(0x7d6)][0x0]+'\x0a',_0x343a72++;}return _0x1acd52;},Game_Interpreter[_0x2805a3(0x6ac)][_0x2805a3(0x40e)]=function(_0x550d69){const _0x2bf6fa=_0x2805a3;try{eval(_0x550d69);}catch(_0x56c294){if(_0x2bf6fa(0x68b)!=='KoJmF'){function _0x4fa6dd(){const _0x3b118e=_0x2bf6fa;let _0x5ca1eb=0x0;for(const _0x38a49f of _0x3676b4['CoreEngine']['Settings'][_0x3b118e(0x303)][_0x3b118e(0x18a)]){const _0x5356aa=this[_0x3b118e(0x2f2)](),_0x1c9019=this[_0x3b118e(0x258)](_0x5ca1eb);this['drawItem'](_0x5356aa,_0x1c9019,_0x38a49f),_0x5ca1eb++;}}}else{if($gameTemp[_0x2bf6fa(0x326)]()){if('XbRLz'==='XbRLz')console[_0x2bf6fa(0x77e)](_0x2bf6fa(0x18e)),console[_0x2bf6fa(0x77e)](_0x56c294);else{function _0x1b6613(){this['renderNoMask'](_0x2f3264);}}}}}return!![];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x814)]=Game_Interpreter[_0x2805a3(0x6ac)]['command111'],Game_Interpreter['prototype'][_0x2805a3(0x755)]=function(_0x30d816){const _0x1ab3d0=_0x2805a3;try{if('AXfqr'!==_0x1ab3d0(0x7ef)){function _0x393c89(){const _0x2a84e6=_0x1ab3d0;_0x11c48c['CoreEngine'][_0x2a84e6(0x779)][_0x2a84e6(0x5cd)][_0x2a84e6(0x3e6)]['drawGameTitle'][_0x2a84e6(0x5a2)](this);if(_0x5b6207[_0x2a84e6(0x782)]!==''&&_0xeef5a7['subtitle']!==_0x2a84e6(0x5aa))this[_0x2a84e6(0x43b)]();if(_0x6d6d27['version']!==''&&_0x330eef[_0x2a84e6(0x3ea)]!==_0x2a84e6(0x2a9))this[_0x2a84e6(0x45b)]();}}else VisuMZ['CoreEngine']['Game_Interpreter_command111']['call'](this,_0x30d816);}catch(_0x45cca7){if(_0x1ab3d0(0x645)===_0x1ab3d0(0x645)){if($gameTemp[_0x1ab3d0(0x326)]()){if('VMmVF'===_0x1ab3d0(0x2d1)){function _0x5c8210(){const _0x13ec5c=_0x1ab3d0;this['_commonEventLayers']++;let _0x5063ae=_0x17e00a[_0x13ec5c(0x284)][_0x13ec5c(0x2a3)](_0x299aee[_0x13ec5c(0x7cf)]);_0x5063ae[_0x13ec5c(0x5ab)]>0x0&&(_0x17ebbf+=_0x1402e9,_0x54f54d+=_0x2b395d,_0x2e4bf1+=_0x13ec5c(0x42d)[_0x13ec5c(0x2fb)](_0x1030f6['id'],_0x472d3f[_0x13ec5c(0x7c5)]),_0x1c59cc+=_0x3a3b9b,_0x164da3+=_0x5063ae,_0x366d9b+=_0x443022,_0x46d487+=_0x13ec5c(0x1b0)[_0x13ec5c(0x2fb)](_0x37ce6c['id'],_0x9319ca['name']),_0x29cfe4+=_0x3df5be),this[_0x13ec5c(0x151)]--;}}else console[_0x1ab3d0(0x77e)](_0x1ab3d0(0x1a1)),console[_0x1ab3d0(0x77e)](_0x45cca7);}this['skipBranch']();}else{function _0x14432c(){const _0x232944=_0x1ab3d0;this[_0x232944(0x6df)]={};}}}return!![];},VisuMZ['CoreEngine'][_0x2805a3(0x448)]=Game_Interpreter['prototype'][_0x2805a3(0x657)],Game_Interpreter[_0x2805a3(0x6ac)][_0x2805a3(0x657)]=function(_0x3c672a){const _0x42ad51=_0x2805a3;try{if(_0x42ad51(0x71f)===_0x42ad51(0x71f))VisuMZ[_0x42ad51(0x284)]['Game_Interpreter_command122'][_0x42ad51(0x5a2)](this,_0x3c672a);else{function _0x44af91(){const _0x38f4b4=_0x42ad51;return _0x9fdda5['CoreEngine'][_0x38f4b4(0x9b)][_0x2b29d2]===_0x38f4b4(0x527)?_0x5a1bb4:_0x46784d((_0x2f31b2*0x64)[_0x38f4b4(0x253)](_0x3c3229))+'%';}}}catch(_0x10d2d2){if($gameTemp[_0x42ad51(0x326)]()){if(_0x42ad51(0x61e)!==_0x42ad51(0x1be))console[_0x42ad51(0x77e)](_0x42ad51(0xe3)),console['log'](_0x10d2d2);else{function _0x29e822(){const _0x16ec13=_0x42ad51,_0x6ba17c=_0x2d72df['y']+(this[_0x16ec13(0x2c1)]()-_0x6398c5[_0x16ec13(0x647)])/0x2;this[_0x16ec13(0x430)](_0x295afd,_0x167918['x'],_0x6ba17c);const _0x3608c0=_0x403dd1[_0x16ec13(0x1ce)]+0x4;_0x1a9d23['x']+=_0x3608c0,_0x4a91fa[_0x16ec13(0x42c)]-=_0x3608c0;}}}}return!![];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x307)]=Game_Interpreter[_0x2805a3(0x6ac)][_0x2805a3(0x66b)],Game_Interpreter['prototype'][_0x2805a3(0x66b)]=function(){const _0x23d491=_0x2805a3;try{VisuMZ[_0x23d491(0x284)][_0x23d491(0x307)]['call'](this);}catch(_0x5434e9){if(_0x23d491(0x55d)===_0x23d491(0x3e3)){function _0x84e3eb(){const _0x2a1732=_0x23d491;let _0x4f78dc=_0x21ba98[_0x2a1732(0x111)],_0x5a980a=_0x4f78dc['length'];for(let _0x259ce2=0x0;_0x259ce2<_0x5a980a;++_0x259ce2){this[_0x2a1732(0x431)]['add'](_0x4f78dc[_0x259ce2])?_0x1e68e9['playOk']():_0x4e01c8['playBuzzer']();}_0x46852a[_0x2a1732(0x3fa)]();}}else $gameTemp[_0x23d491(0x326)]()&&(console[_0x23d491(0x77e)](_0x23d491(0x204)),console[_0x23d491(0x77e)](_0x5434e9));}return!![];},VisuMZ['CoreEngine']['Game_Interpreter_PluginCommand']=Game_Interpreter[_0x2805a3(0x6ac)][_0x2805a3(0x103)],Game_Interpreter['prototype'][_0x2805a3(0x103)]=function(_0x697a1e){const _0x5b88e5=_0x2805a3;return $gameTemp['setLastPluginCommandInterpreter'](this),VisuMZ[_0x5b88e5(0x284)][_0x5b88e5(0x1e0)][_0x5b88e5(0x5a2)](this,_0x697a1e);},Scene_Base[_0x2805a3(0x6ac)]['fadeSpeed']=function(){const _0x2a2ae3=_0x2805a3;return VisuMZ[_0x2a2ae3(0x284)]['Settings']['UI'][_0x2a2ae3(0x1b2)];},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x387)]=function(){const _0x901a69=_0x2805a3;return VisuMZ[_0x901a69(0x284)]['Settings']['UI'][_0x901a69(0x505)];},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x460)]=function(){const _0x425e62=_0x2805a3;return VisuMZ['CoreEngine'][_0x425e62(0x779)]['UI'][_0x425e62(0x130)];},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x4fb)]=function(){const _0x4f5a08=_0x2805a3;return VisuMZ[_0x4f5a08(0x284)][_0x4f5a08(0x779)]['UI'][_0x4f5a08(0x54f)];},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x224)]=function(){const _0x575e99=_0x2805a3;return VisuMZ[_0x575e99(0x284)][_0x575e99(0x779)]['UI'][_0x575e99(0x5a5)];},Scene_Base['prototype'][_0x2805a3(0x7ac)]=function(){const _0x27e990=_0x2805a3;return VisuMZ[_0x27e990(0x284)]['Settings']['UI'][_0x27e990(0x6a2)];},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x5c2)]=function(){const _0x2f724f=_0x2805a3;return VisuMZ[_0x2f724f(0x284)][_0x2f724f(0x779)][_0x2f724f(0x46b)][_0x2f724f(0x1d4)];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x659)]=Scene_Base[_0x2805a3(0x6ac)]['createWindowLayer'],Scene_Base['prototype']['createWindowLayer']=function(){const _0x5ce144=_0x2805a3;VisuMZ[_0x5ce144(0x284)][_0x5ce144(0x659)][_0x5ce144(0x5a2)](this),this['createButtonAssistWindow'](),this[_0x5ce144(0x492)]['x']=Math[_0x5ce144(0x72b)](this[_0x5ce144(0x492)]['x']),this[_0x5ce144(0x492)]['y']=Math[_0x5ce144(0x72b)](this[_0x5ce144(0x492)]['y']);},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x41d)]=function(){},Scene_Base['prototype'][_0x2805a3(0x2ed)]=function(){const _0x4d992e=_0x2805a3;return TextManager[_0x4d992e(0x63d)](_0x4d992e(0x359),_0x4d992e(0x4f8));},Scene_Base[_0x2805a3(0x6ac)]['buttonAssistKey2']=function(){const _0x25da3c=_0x2805a3;return TextManager['getInputButtonString'](_0x25da3c(0x713));},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x1cf)]=function(){const _0x1caf67=_0x2805a3;return TextManager[_0x1caf67(0x3a1)]('shift');},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x165)]=function(){const _0x99a46f=_0x2805a3;return TextManager[_0x99a46f(0x3a1)]('ok');},Scene_Base['prototype']['buttonAssistKey5']=function(){const _0x417135=_0x2805a3;return TextManager[_0x417135(0x3a1)](_0x417135(0x152));},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x615)]=function(){const _0x266669=_0x2805a3;if(this[_0x266669(0x51e)]&&this[_0x266669(0x51e)]['visible']){if(_0x266669(0x4a2)!=='KGHfL')return TextManager[_0x266669(0x4b9)];else{function _0x5a5c46(){const _0x20a15a=_0x266669;_0x2387bf[_0x20a15a(0x284)]['Bitmap_fillRect']['call'](this,_0xebb830,_0x128171,_0x451532,_0x1f4215,_0x248291),this[_0x20a15a(0x226)]();}}}else return'';},Scene_Base[_0x2805a3(0x6ac)]['buttonAssistText2']=function(){return'';},Scene_Base['prototype'][_0x2805a3(0xdd)]=function(){return'';},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x337)]=function(){const _0x3b6cff=_0x2805a3;return TextManager[_0x3b6cff(0x184)];},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x4ed)]=function(){const _0x3815ea=_0x2805a3;return TextManager[_0x3815ea(0x57e)];},Scene_Base[_0x2805a3(0x6ac)]['buttonAssistOffset1']=function(){return 0x0;},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x612)]=function(){return 0x0;},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x16d)]=function(){return 0x0;},Scene_Base[_0x2805a3(0x6ac)][_0x2805a3(0x6c0)]=function(){return 0x0;},Scene_Base['prototype'][_0x2805a3(0x63f)]=function(){return 0x0;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x22d)]=Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x23a)],Scene_Boot[_0x2805a3(0x6ac)]['loadSystemImages']=function(){const _0x1faef4=_0x2805a3;VisuMZ[_0x1faef4(0x284)][_0x1faef4(0x22d)][_0x1faef4(0x5a2)](this),this['loadGameImagesCoreEngine']();},Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x5d3)]=function(){const _0xeae94c=_0x2805a3,_0x50bc1d=[_0xeae94c(0x616),'battlebacks1',_0xeae94c(0x2d6),'characters',_0xeae94c(0x1bc),_0xeae94c(0x6fe),_0xeae94c(0x6ce),_0xeae94c(0x2a1),_0xeae94c(0x3e8),_0xeae94c(0x687),'system',_0xeae94c(0xd4),_0xeae94c(0x2a5),_0xeae94c(0x686)];for(const _0x457c2e of _0x50bc1d){const _0x56168e=VisuMZ[_0xeae94c(0x284)][_0xeae94c(0x779)]['ImgLoad'][_0x457c2e],_0x1f3775=_0xeae94c(0x3dd)[_0xeae94c(0x2fb)](_0x457c2e);for(const _0x15ea3f of _0x56168e){ImageManager['loadBitmap'](_0x1f3775,_0x15ea3f);}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x29b)]=Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x1bd)],Scene_Boot['prototype'][_0x2805a3(0x1bd)]=function(){const _0x3e9c7e=_0x2805a3;if(Utils[_0x3e9c7e(0x6a8)]('test')&&VisuMZ[_0x3e9c7e(0x284)][_0x3e9c7e(0x779)][_0x3e9c7e(0x5f9)]['NewGameBoot'])this[_0x3e9c7e(0x70e)]();else{if(_0x3e9c7e(0x28c)!=='mOxBd'){function _0x2ded3d(){const _0x3750c8=_0x3e9c7e;this[_0x3750c8(0x7c7)]();}}else VisuMZ[_0x3e9c7e(0x284)][_0x3e9c7e(0x29b)][_0x3e9c7e(0x5a2)](this);}},Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x70e)]=function(){const _0x22d54e=_0x2805a3;DataManager[_0x22d54e(0x452)](),SceneManager['goto'](Scene_Map);},Scene_Boot[_0x2805a3(0x6ac)]['adjustBoxSize']=function(){const _0x25dc41=_0x2805a3,_0x5d699e=$dataSystem[_0x25dc41(0x528)]['uiAreaWidth'],_0x26a43b=$dataSystem[_0x25dc41(0x528)][_0x25dc41(0x2da)],_0x3a65d9=VisuMZ[_0x25dc41(0x284)][_0x25dc41(0x779)]['UI'][_0x25dc41(0xe5)];Graphics['boxWidth']=_0x5d699e-_0x3a65d9*0x2,Graphics['boxHeight']=_0x26a43b-_0x3a65d9*0x2,this['determineSideButtonLayoutValid']();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x126)]=Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x113)],Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x113)]=function(){const _0x362000=_0x2805a3;if(this[_0x362000(0x671)]()){if(_0x362000(0x199)!==_0x362000(0x199)){function _0x2a22fe(){const _0x4c4f4b=_0x362000;return _0x7049fb[_0x4c4f4b(0x284)][_0x4c4f4b(0x779)][_0x4c4f4b(0x2ee)][_0x4c4f4b(0x57f)];}}else this[_0x362000(0x4e3)]();}else VisuMZ['CoreEngine'][_0x362000(0x126)][_0x362000(0x5a2)](this);},Scene_Boot[_0x2805a3(0x6ac)]['isFullDocumentTitle']=function(){const _0x175fd1=_0x2805a3;if(Scene_Title[_0x175fd1(0x782)]==='')return![];if(Scene_Title[_0x175fd1(0x782)]===_0x175fd1(0x5aa))return![];if(Scene_Title[_0x175fd1(0x3ea)]==='')return![];if(Scene_Title[_0x175fd1(0x3ea)]==='0.00')return![];return!![];},Scene_Boot['prototype'][_0x2805a3(0x4e3)]=function(){const _0x281ba6=_0x2805a3,_0x158d49=$dataSystem['gameTitle'],_0xdf0a01=Scene_Title[_0x281ba6(0x782)]||'',_0x2b8f86=Scene_Title[_0x281ba6(0x3ea)]||'',_0x58ed52=VisuMZ[_0x281ba6(0x284)][_0x281ba6(0x779)][_0x281ba6(0x5cd)][_0x281ba6(0x3e6)][_0x281ba6(0x1da)],_0xdb1157=_0x58ed52['format'](_0x158d49,_0xdf0a01,_0x2b8f86);document['title']=_0xdb1157;},Scene_Boot[_0x2805a3(0x6ac)][_0x2805a3(0x1ad)]=function(){const _0x4fff3f=_0x2805a3;if(VisuMZ[_0x4fff3f(0x284)][_0x4fff3f(0x779)]['UI'][_0x4fff3f(0x78b)]){if(_0x4fff3f(0x5b6)===_0x4fff3f(0x5b6)){const _0x2db676=Graphics[_0x4fff3f(0x42c)]-Graphics[_0x4fff3f(0x30f)]-VisuMZ[_0x4fff3f(0x284)]['Settings']['UI'][_0x4fff3f(0xe5)]*0x2,_0xbc135f=Sprite_Button['prototype']['blockWidth'][_0x4fff3f(0x5a2)](this)*0x4;if(_0x2db676>=_0xbc135f)SceneManager[_0x4fff3f(0x7c1)](!![]);}else{function _0x2f23be(){const _0x331fb9=_0x4fff3f;_0x18b063[_0x331fb9(0x284)][_0x331fb9(0x263)][_0x331fb9(0x5a2)](this,_0x24367e);if(_0x168c84[_0x331fb9(0x24a)])for(const _0x3ce2c1 of _0x3d1eb2[_0x331fb9(0x24a)]){_0x3ce2c1[_0x331fb9(0x22b)][_0x331fb9(0x137)](/<LEARN AT LEVEL:[ ](\d+)>/i)&&(_0x3ce2c1['level']=_0x4453bb[_0x331fb9(0x2dd)](_0x35c7b1(_0x4c30dc['$1']),0x1));}}}}},Scene_Title['subtitle']=VisuMZ['CoreEngine']['Settings'][_0x2805a3(0x5cd)][_0x2805a3(0x3e6)]['Subtitle'],Scene_Title[_0x2805a3(0x3ea)]=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x5cd)][_0x2805a3(0x3e6)]['Version'],Scene_Title[_0x2805a3(0x69d)]=VisuMZ['CoreEngine']['Settings']['TitlePicButtons'],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x449)]=Scene_Title[_0x2805a3(0x6ac)][_0x2805a3(0x18c)],Scene_Title[_0x2805a3(0x6ac)][_0x2805a3(0x18c)]=function(){const _0x52cfa6=_0x2805a3;VisuMZ['CoreEngine'][_0x52cfa6(0x779)][_0x52cfa6(0x5cd)][_0x52cfa6(0x3e6)][_0x52cfa6(0x18c)][_0x52cfa6(0x5a2)](this);if(Scene_Title[_0x52cfa6(0x782)]!==''&&Scene_Title['subtitle']!==_0x52cfa6(0x5aa))this['drawGameSubtitle']();if(Scene_Title['version']!==''&&Scene_Title['version']!==_0x52cfa6(0x2a9))this[_0x52cfa6(0x45b)]();},Scene_Title[_0x2805a3(0x6ac)]['drawGameSubtitle']=function(){const _0x14e7c5=_0x2805a3;VisuMZ['CoreEngine'][_0x14e7c5(0x779)][_0x14e7c5(0x5cd)][_0x14e7c5(0x3e6)][_0x14e7c5(0x43b)][_0x14e7c5(0x5a2)](this);},Scene_Title[_0x2805a3(0x6ac)][_0x2805a3(0x45b)]=function(){const _0x2b5003=_0x2805a3;VisuMZ[_0x2b5003(0x284)][_0x2b5003(0x779)]['MenuLayout'][_0x2b5003(0x3e6)][_0x2b5003(0x45b)][_0x2b5003(0x5a2)](this);},Scene_Title[_0x2805a3(0x6ac)]['createCommandWindow']=function(){const _0x5ad92c=_0x2805a3;this['createTitleButtons']();const _0x52ae6b=$dataSystem[_0x5ad92c(0xb0)]['background'],_0x237863=this['commandWindowRect']();this['_commandWindow']=new Window_TitleCommand(_0x237863),this[_0x5ad92c(0x195)][_0x5ad92c(0x7ce)](_0x52ae6b);const _0x186b33=this['commandWindowRect']();this[_0x5ad92c(0x195)][_0x5ad92c(0x501)](_0x186b33['x'],_0x186b33['y'],_0x186b33[_0x5ad92c(0x42c)],_0x186b33[_0x5ad92c(0x80a)]),this['addWindow'](this[_0x5ad92c(0x195)]);},Scene_Title[_0x2805a3(0x6ac)][_0x2805a3(0x1e5)]=function(){const _0x6fea5c=_0x2805a3;if(this[_0x6fea5c(0x195)])return this[_0x6fea5c(0x195)][_0x6fea5c(0x787)]();else{if(_0x6fea5c(0x190)===_0x6fea5c(0x61b)){function _0x27557d(){_0x292067=_0x28d1b0['concat'](_0x348dd6);}}else return VisuMZ[_0x6fea5c(0x284)][_0x6fea5c(0x779)]['TitleCommandList'][_0x6fea5c(0x5ab)];}},Scene_Title['prototype']['commandWindowRect']=function(){const _0x3b0b19=_0x2805a3;return VisuMZ[_0x3b0b19(0x284)][_0x3b0b19(0x779)]['MenuLayout'][_0x3b0b19(0x3e6)][_0x3b0b19(0x55f)][_0x3b0b19(0x5a2)](this);},Scene_Title[_0x2805a3(0x6ac)][_0x2805a3(0xed)]=function(){const _0x5687f2=_0x2805a3;for(const _0x260436 of Scene_Title['pictureButtons']){const _0x286fd8=new Sprite_TitlePictureButton(_0x260436);this[_0x5687f2(0x579)](_0x286fd8);}},VisuMZ['CoreEngine'][_0x2805a3(0x26c)]=Scene_Map['prototype'][_0x2805a3(0x748)],Scene_Map['prototype']['initialize']=function(){const _0x5ab7a5=_0x2805a3;VisuMZ[_0x5ab7a5(0x284)]['Scene_Map_initialize'][_0x5ab7a5(0x5a2)](this),$gameTemp[_0x5ab7a5(0x11d)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x766)]=Scene_Map[_0x2805a3(0x6ac)][_0x2805a3(0x600)],Scene_Map[_0x2805a3(0x6ac)][_0x2805a3(0x600)]=function(){const _0x1d56bb=_0x2805a3;VisuMZ[_0x1d56bb(0x284)][_0x1d56bb(0x766)][_0x1d56bb(0x5a2)](this),$gameTemp[_0x1d56bb(0x2a2)]&&!$gameMessage[_0x1d56bb(0x7af)]()&&(this[_0x1d56bb(0x331)](),SceneManager[_0x1d56bb(0x3fe)]());},Scene_Map['prototype'][_0x2805a3(0x37d)]=function(){const _0x178615=_0x2805a3;Scene_Message[_0x178615(0x6ac)][_0x178615(0x37d)][_0x178615(0x5a2)](this),!SceneManager['isNextScene'](Scene_Battle)&&(this[_0x178615(0x72d)]['update'](),this[_0x178615(0x161)][_0x178615(0x506)](),this[_0x178615(0x492)][_0x178615(0x389)]=![],SceneManager[_0x178615(0x428)]()),$gameScreen[_0x178615(0xf6)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2f8)]=Scene_Map['prototype'][_0x2805a3(0x415)],Scene_Map[_0x2805a3(0x6ac)][_0x2805a3(0x415)]=function(){const _0x1e8d27=_0x2805a3;VisuMZ[_0x1e8d27(0x284)]['Scene_Map_createMenuButton']['call'](this);if(SceneManager['isSideButtonLayout']()){if(_0x1e8d27(0xdc)!=='dlRKo'){function _0x32246a(){const _0x427399=_0x1e8d27;return this[_0x427399(0x464)]=this[_0x427399(0x464)]||0x0,[0x0,0x1,0x2,0x3][_0x427399(0x5ea)](this[_0x427399(0x464)])?_0x588d49[_0x427399(0x284)][_0x427399(0x3b1)][_0x427399(0x5a2)](this,_0x48fec0):_0x2d3a01[_0x427399(0x3a3)](_0x2ab968,this[_0x427399(0x464)]);}}else this['moveMenuButtonSideButtonLayout']();}},Scene_Map[_0x2805a3(0x6ac)][_0x2805a3(0x1d6)]=function(){const _0x1a3cc2=_0x2805a3;this[_0x1a3cc2(0x365)]['x']=Graphics['boxWidth']+0x4;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x3f9)]=Scene_Map['prototype'][_0x2805a3(0x3ed)],Scene_Map[_0x2805a3(0x6ac)][_0x2805a3(0x3ed)]=function(){const _0x2d797a=_0x2805a3;VisuMZ[_0x2d797a(0x284)][_0x2d797a(0x3f9)][_0x2d797a(0x5a2)](this),this[_0x2d797a(0x1d9)]();},Scene_Map[_0x2805a3(0x6ac)]['updateDashToggle']=function(){const _0x51c313=_0x2805a3;if(Input[_0x51c313(0x744)]('dashToggle')){if(_0x51c313(0x1e2)!==_0x51c313(0x6d4))ConfigManager['alwaysDash']=!ConfigManager[_0x51c313(0x1fb)],ConfigManager[_0x51c313(0x7d1)]();else{function _0x12fb07(){const _0x3fb84c=_0x51c313;if(this[_0x3fb84c(0x7f8)]())_0x151ac5=_0x41ec2d[_0x3fb84c(0x53d)](_0x3d01d7);_0x4d2edf[_0x3fb84c(0x284)][_0x3fb84c(0x16a)][_0x3fb84c(0x5a2)](this,_0xea2875,_0x8cdd1c,_0x4a6341,_0x48d950,_0x50e224);}}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x419)]=Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x357)],Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x357)]=function(){const _0x13b6be=_0x2805a3;let _0x250324=0x0;if(SceneManager[_0x13b6be(0x572)]()){if(_0x13b6be(0x35c)!==_0x13b6be(0x129))_0x250324=this[_0x13b6be(0x22a)]();else{function _0x31710b(){const _0x1d635e=_0x13b6be;return _0x3a11dd[_0x1d635e(0x266)]['EditRect']['call'](this);}}}else _0x250324=VisuMZ['CoreEngine']['Scene_MenuBase_helpAreaTop'][_0x13b6be(0x5a2)](this);if(this[_0x13b6be(0x31d)]()&&this['getButtonAssistLocation']()===_0x13b6be(0x619)){if(_0x13b6be(0x19a)===_0x13b6be(0x19a))_0x250324+=Window_ButtonAssist[_0x13b6be(0x6ac)]['lineHeight']();else{function _0x2797bd(){const _0x50d7d6=_0x13b6be;this[_0x50d7d6(0x455)]();}}}return _0x250324;},Scene_MenuBase['prototype'][_0x2805a3(0x22a)]=function(){const _0xcfc18e=_0x2805a3;if(this[_0xcfc18e(0x387)]()){if(_0xcfc18e(0x6d6)===_0xcfc18e(0x6d6))return this[_0xcfc18e(0xb9)]();else{function _0x4ae897(){const _0x494c46=_0xcfc18e;_0x53d3a5+=_0x494c46(0x340);}}}else return 0x0;},VisuMZ['CoreEngine'][_0x2805a3(0x5ba)]=Scene_MenuBase[_0x2805a3(0x6ac)]['mainAreaTop'],Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x36e)]=function(){const _0x4f5b53=_0x2805a3;return SceneManager['areButtonsOutsideMainUI']()?this['mainAreaTopSideButtonLayout']():VisuMZ[_0x4f5b53(0x284)][_0x4f5b53(0x5ba)][_0x4f5b53(0x5a2)](this);},Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x5d0)]=function(){const _0x19b13d=_0x2805a3;if(!this[_0x19b13d(0x387)]())return this[_0x19b13d(0x173)]();else{if('yUtWl'===_0x19b13d(0x1a5)){function _0x473c04(){const _0x1cb9bd=_0x19b13d;return _0x42e89e['isSideButtonLayout']()||_0x5f3a90['areButtonsHidden']()?_0x1f31e7[_0x1cb9bd(0x284)]['Settings'][_0x1cb9bd(0x682)]['Location']:_0x1cb9bd(0xe8);}}else return 0x0;}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x59c)]=Scene_MenuBase['prototype'][_0x2805a3(0x44f)],Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x44f)]=function(){const _0x2c7cba=_0x2805a3;let _0x152fc5=0x0;if(SceneManager[_0x2c7cba(0x572)]()){if(_0x2c7cba(0x14a)===_0x2c7cba(0x7a4)){function _0x209728(){const _0x302264=_0x2c7cba,_0x209d61=this[_0x302264(0x134)](_0x56ccc2,_0xee801a);_0x209d61[_0x302264(0x639)][_0x302264(0x15c)](_0x514f3e[_0x3ea5b1],0x0,0x0,_0x4b1b70,_0x2b3b81,_0x302264(0x8c)),_0x209d61['x']=(_0x3f0688-(_0x239ad3[_0x302264(0x5ab)]-0x1)/0x2)*_0x5c22a7,_0x209d61['dy']=-_0x29cd3a;}}else _0x152fc5=this[_0x2c7cba(0x440)]();}else _0x152fc5=VisuMZ[_0x2c7cba(0x284)][_0x2c7cba(0x59c)][_0x2c7cba(0x5a2)](this);return this[_0x2c7cba(0x31d)]()&&this[_0x2c7cba(0x4b7)]()!=='button'&&(_0x152fc5-=Window_ButtonAssist[_0x2c7cba(0x6ac)]['lineHeight']()),_0x152fc5;},Scene_MenuBase['prototype'][_0x2805a3(0x440)]=function(){const _0x92c212=_0x2805a3;return Graphics[_0x92c212(0x7f7)]-this[_0x92c212(0xb6)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x6c9)]=Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x32c)],Scene_MenuBase['prototype'][_0x2805a3(0x32c)]=function(){const _0x400b79=_0x2805a3;this[_0x400b79(0x5e7)]=new PIXI[(_0x400b79(0x240))]['BlurFilter'](clamp=!![]),this[_0x400b79(0x49a)]=new Sprite(),this[_0x400b79(0x49a)][_0x400b79(0x639)]=SceneManager[_0x400b79(0x22f)](),this[_0x400b79(0x49a)][_0x400b79(0x240)]=[this[_0x400b79(0x5e7)]],this[_0x400b79(0x579)](this[_0x400b79(0x49a)]),this[_0x400b79(0x1c2)](0xc0),this[_0x400b79(0x1c2)](this[_0x400b79(0x20c)]()),this['createCustomBackgroundImages']();},Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x20c)]=function(){const _0xc5c4b1=_0x2805a3,_0x23b55a=String(this[_0xc5c4b1(0x77a)][_0xc5c4b1(0x7c5)]),_0x120a5f=this[_0xc5c4b1(0x20e)](_0x23b55a);if(_0x120a5f){if('acsnf'===_0xc5c4b1(0x710)){function _0x21c23c(){const _0x4bd489=_0xc5c4b1;this[_0x4bd489(0x5e7)]=new _0x1054d5[(_0x4bd489(0x240))]['BlurFilter'](_0x58d3fd=!![]),this[_0x4bd489(0x49a)]=new _0x4f2b28(),this[_0x4bd489(0x49a)][_0x4bd489(0x639)]=_0x6c77a3[_0x4bd489(0x22f)](),this[_0x4bd489(0x49a)][_0x4bd489(0x240)]=[this[_0x4bd489(0x5e7)]],this['addChild'](this[_0x4bd489(0x49a)]),this[_0x4bd489(0x1c2)](0xc0),this[_0x4bd489(0x1c2)](this['getBackgroundOpacity']()),this['createCustomBackgroundImages']();}}else return _0x120a5f[_0xc5c4b1(0x319)];}else return 0xc0;},Scene_MenuBase[_0x2805a3(0x6ac)]['createCustomBackgroundImages']=function(){const _0x33e0aa=_0x2805a3,_0x4249b9=String(this[_0x33e0aa(0x77a)][_0x33e0aa(0x7c5)]),_0x1363c9=this[_0x33e0aa(0x20e)](_0x4249b9);if(_0x1363c9&&(_0x1363c9[_0x33e0aa(0x6cd)]!==''||_0x1363c9[_0x33e0aa(0x690)]!=='')){if('crbCK'!==_0x33e0aa(0x251)){function _0x5a98da(){const _0x26c2f1=_0x33e0aa;_0x2cc5e0[_0x26c2f1(0x326)]()&&(_0x738326[_0x26c2f1(0x77e)](_0x26c2f1(0x18e)),_0x45d757['log'](_0x54ebbf));}}else this[_0x33e0aa(0x7a0)]=new Sprite(ImageManager['loadTitle1'](_0x1363c9[_0x33e0aa(0x6cd)])),this['_backSprite2']=new Sprite(ImageManager[_0x33e0aa(0x23c)](_0x1363c9['BgFilename2'])),this[_0x33e0aa(0x579)](this[_0x33e0aa(0x7a0)]),this[_0x33e0aa(0x579)](this[_0x33e0aa(0x168)]),this[_0x33e0aa(0x7a0)]['bitmap']['addLoadListener'](this[_0x33e0aa(0x712)][_0x33e0aa(0x472)](this,this['_backSprite1'])),this[_0x33e0aa(0x168)][_0x33e0aa(0x639)]['addLoadListener'](this[_0x33e0aa(0x712)][_0x33e0aa(0x472)](this,this[_0x33e0aa(0x168)]));}},Scene_MenuBase[_0x2805a3(0x6ac)]['getCustomBackgroundSettings']=function(_0x57f59c){const _0x5d4bb2=_0x2805a3;return VisuMZ[_0x5d4bb2(0x284)][_0x5d4bb2(0x779)][_0x5d4bb2(0x6d1)][_0x57f59c]||VisuMZ[_0x5d4bb2(0x284)][_0x5d4bb2(0x779)][_0x5d4bb2(0x6d1)][_0x5d4bb2(0x694)];},Scene_MenuBase[_0x2805a3(0x6ac)]['adjustSprite']=function(_0x375f7e){const _0xc5ea1a=_0x2805a3;this[_0xc5ea1a(0x6ca)](_0x375f7e),this['centerSprite'](_0x375f7e);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x66d)]=Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x104)],Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x104)]=function(){const _0xc391af=_0x2805a3;VisuMZ['CoreEngine'][_0xc391af(0x66d)][_0xc391af(0x5a2)](this);if(SceneManager[_0xc391af(0x4c9)]()){if('JgHOC'==='OomTI'){function _0x5e13e2(){const _0x7fcd50=_0xc391af;return _0x4f19fa[_0x7fcd50(0x284)]['Settings'][_0x7fcd50(0x5cd)]['Title']['ButtonFadeSpeed'];}}else this[_0xc391af(0x1e7)]();}},Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x1e7)]=function(){this['_cancelButton']['x']=Graphics['boxWidth']+0x4;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x13d)]=Scene_MenuBase[_0x2805a3(0x6ac)]['createPageButtons'],Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x35a)]=function(){const _0xb3674f=_0x2805a3;VisuMZ[_0xb3674f(0x284)][_0xb3674f(0x13d)][_0xb3674f(0x5a2)](this),SceneManager[_0xb3674f(0x4c9)]()&&this[_0xb3674f(0x101)]();},Scene_MenuBase['prototype'][_0x2805a3(0x101)]=function(){const _0x248eae=_0x2805a3;this[_0x248eae(0x51e)]['x']=-0x1*(this[_0x248eae(0x51e)][_0x248eae(0x42c)]+this[_0x248eae(0x4bb)][_0x248eae(0x42c)]+0x8),this[_0x248eae(0x4bb)]['x']=-0x1*(this[_0x248eae(0x4bb)][_0x248eae(0x42c)]+0x4);},Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x31d)]=function(){const _0x46a53c=_0x2805a3;return VisuMZ['CoreEngine']['Settings'][_0x46a53c(0x682)][_0x46a53c(0x375)];},Scene_MenuBase[_0x2805a3(0x6ac)]['getButtonAssistLocation']=function(){const _0x2cc6fb=_0x2805a3;if(SceneManager['isSideButtonLayout']()||SceneManager[_0x2cc6fb(0x634)]()){if(_0x2cc6fb(0x679)==='KAITh'){function _0x28d7a9(){const _0xe95288=_0x2cc6fb,_0x1af6b7=_0xe95288(0x607);this[_0xe95288(0x6df)]=this[_0xe95288(0x6df)]||{};if(this['_colorCache'][_0x1af6b7])return this[_0xe95288(0x6df)][_0x1af6b7];const _0x478966=_0xad2765[_0xe95288(0x284)][_0xe95288(0x779)][_0xe95288(0x2ee)][_0xe95288(0x376)];return this['getColorDataFromPluginParameters'](_0x1af6b7,_0x478966);}}else return VisuMZ['CoreEngine'][_0x2cc6fb(0x779)][_0x2cc6fb(0x682)][_0x2cc6fb(0x3a4)];}else return _0x2cc6fb(0xe8);},Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x41d)]=function(){const _0x3a54b2=_0x2805a3;if(!this[_0x3a54b2(0x31d)]())return;const _0x3ad8b9=this['buttonAssistWindowRect']();this['_buttonAssistWindow']=new Window_ButtonAssist(_0x3ad8b9),this[_0x3a54b2(0x68d)](this[_0x3a54b2(0x33c)]);},Scene_MenuBase[_0x2805a3(0x6ac)][_0x2805a3(0x71a)]=function(){const _0x56e3b3=_0x2805a3;if(this[_0x56e3b3(0x4b7)]()===_0x56e3b3(0xe8)){if(_0x56e3b3(0x3c0)!==_0x56e3b3(0x37a))return this[_0x56e3b3(0x208)]();else{function _0x2a9ae9(){const _0x2c9750=_0x56e3b3;this[_0x2c9750(0x269)]=_0x12f754;}}}else{if(_0x56e3b3(0x131)!==_0x56e3b3(0x348))return this[_0x56e3b3(0x5c3)]();else{function _0x2a8bb9(){const _0x4d4086=_0x56e3b3;this[_0x4d4086(0x79c)]=![];}}}},Scene_MenuBase[_0x2805a3(0x6ac)]['buttonAssistWindowButtonRect']=function(){const _0x2e1f5d=_0x2805a3,_0x2d9469=ConfigManager[_0x2e1f5d(0x6b4)]?(Sprite_Button[_0x2e1f5d(0x6ac)][_0x2e1f5d(0x556)]()+0x6)*0x2:0x0,_0x3ae74d=this[_0x2e1f5d(0x526)](),_0x38b475=Graphics[_0x2e1f5d(0x30f)]-_0x2d9469*0x2,_0x288342=this['buttonAreaHeight']();return new Rectangle(_0x2d9469,_0x3ae74d,_0x38b475,_0x288342);},Scene_MenuBase['prototype'][_0x2805a3(0x5c3)]=function(){const _0x10265a=_0x2805a3,_0x515c2c=Graphics['boxWidth'],_0x12bf38=Window_ButtonAssist[_0x10265a(0x6ac)][_0x10265a(0x2c1)](),_0x53ad40=0x0;let _0x219535=0x0;return this[_0x10265a(0x4b7)]()===_0x10265a(0x619)?_0x219535=0x0:_0x219535=Graphics['boxHeight']-_0x12bf38,new Rectangle(_0x53ad40,_0x219535,_0x515c2c,_0x12bf38);},Scene_Menu['layoutSettings']=VisuMZ['CoreEngine'][_0x2805a3(0x779)][_0x2805a3(0x5cd)][_0x2805a3(0xa8)],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2a6)]=Scene_Menu[_0x2805a3(0x6ac)][_0x2805a3(0x2de)],Scene_Menu[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0x50afe5=_0x2805a3;VisuMZ['CoreEngine']['Scene_Menu_create'][_0x50afe5(0x5a2)](this),this[_0x50afe5(0x5b0)]();},Scene_Menu[_0x2805a3(0x6ac)]['setCoreEngineUpdateWindowBg']=function(){const _0x5e64cb=_0x2805a3;this[_0x5e64cb(0x195)]&&this[_0x5e64cb(0x195)][_0x5e64cb(0x7ce)](Scene_Menu[_0x5e64cb(0x266)][_0x5e64cb(0x4e6)]);if(this[_0x5e64cb(0x5e1)]){if(_0x5e64cb(0x1de)!==_0x5e64cb(0x9f))this[_0x5e64cb(0x5e1)]['setBackgroundType'](Scene_Menu[_0x5e64cb(0x266)]['GoldBgType']);else{function _0x16f1fe(){const _0x3b53ed=_0x5e64cb;if(this[_0x3b53ed(0x69b)](_0x3ddae0))return!![];}}}this[_0x5e64cb(0x76a)]&&this[_0x5e64cb(0x76a)]['setBackgroundType'](Scene_Menu[_0x5e64cb(0x266)][_0x5e64cb(0x451)]);},Scene_Menu['prototype']['commandWindowRect']=function(){const _0x38de2b=_0x2805a3;return Scene_Menu['layoutSettings'][_0x38de2b(0x55f)][_0x38de2b(0x5a2)](this);},Scene_Menu[_0x2805a3(0x6ac)][_0x2805a3(0x17f)]=function(){const _0x354a11=_0x2805a3;return Scene_Menu['layoutSettings'][_0x354a11(0x703)][_0x354a11(0x5a2)](this);},Scene_Menu[_0x2805a3(0x6ac)][_0x2805a3(0xf0)]=function(){const _0x2f2d67=_0x2805a3;return Scene_Menu[_0x2f2d67(0x266)]['StatusRect'][_0x2f2d67(0x5a2)](this);},Scene_Item[_0x2805a3(0x266)]=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)]['MenuLayout'][_0x2805a3(0x701)],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x7bb)]=Scene_Item[_0x2805a3(0x6ac)][_0x2805a3(0x2de)],Scene_Item[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0x5ab9fd=_0x2805a3;VisuMZ[_0x5ab9fd(0x284)][_0x5ab9fd(0x7bb)]['call'](this),this['setCoreEngineUpdateWindowBg']();},Scene_Item[_0x2805a3(0x6ac)]['setCoreEngineUpdateWindowBg']=function(){const _0x24a812=_0x2805a3;if(this[_0x24a812(0x700)]){if(_0x24a812(0x26f)!==_0x24a812(0x2a0))this['_helpWindow'][_0x24a812(0x7ce)](Scene_Item[_0x24a812(0x266)][_0x24a812(0x7c0)]);else{function _0xc1e8fa(){const _0x4ea812=_0x24a812,_0x4b4806=_0x4ea812(0x1db);this['_colorCache']=this[_0x4ea812(0x6df)]||{};if(this[_0x4ea812(0x6df)][_0x4b4806])return this[_0x4ea812(0x6df)][_0x4b4806];const _0x57e957=_0x2a6028['CoreEngine'][_0x4ea812(0x779)][_0x4ea812(0x2ee)][_0x4ea812(0x508)];return this[_0x4ea812(0x434)](_0x4b4806,_0x57e957);}}}if(this[_0x24a812(0x606)]){if(_0x24a812(0x4e5)===_0x24a812(0x4e5))this[_0x24a812(0x606)][_0x24a812(0x7ce)](Scene_Item[_0x24a812(0x266)][_0x24a812(0x4c3)]);else{function _0x1b3cac(){const _0x2de899=_0x24a812;return _0x38b9cd['layoutSettings'][_0x2de899(0x447)]['call'](this);}}}this[_0x24a812(0x632)]&&this[_0x24a812(0x632)][_0x24a812(0x7ce)](Scene_Item['layoutSettings'][_0x24a812(0x102)]),this[_0x24a812(0x719)]&&this[_0x24a812(0x719)][_0x24a812(0x7ce)](Scene_Item[_0x24a812(0x266)]['ActorBgType']);},Scene_Item[_0x2805a3(0x6ac)][_0x2805a3(0x64d)]=function(){const _0x233ff8=_0x2805a3;return Scene_Item[_0x233ff8(0x266)][_0x233ff8(0x3c4)][_0x233ff8(0x5a2)](this);},Scene_Item['prototype'][_0x2805a3(0x48d)]=function(){const _0x223ad2=_0x2805a3;return Scene_Item['layoutSettings'][_0x223ad2(0x73f)][_0x223ad2(0x5a2)](this);},Scene_Item[_0x2805a3(0x6ac)]['itemWindowRect']=function(){const _0x3b8335=_0x2805a3;return Scene_Item[_0x3b8335(0x266)]['ItemRect'][_0x3b8335(0x5a2)](this);},Scene_Item[_0x2805a3(0x6ac)][_0x2805a3(0x3b5)]=function(){const _0xc1e574=_0x2805a3;return Scene_Item['layoutSettings'][_0xc1e574(0x5b7)][_0xc1e574(0x5a2)](this);},Scene_Skill[_0x2805a3(0x266)]=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)]['MenuLayout'][_0x2805a3(0x6ba)],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2e7)]=Scene_Skill['prototype'][_0x2805a3(0x2de)],Scene_Skill[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0xfde976=_0x2805a3;VisuMZ[_0xfde976(0x284)][_0xfde976(0x2e7)][_0xfde976(0x5a2)](this),this[_0xfde976(0x5b0)]();},Scene_Skill['prototype'][_0x2805a3(0x5b0)]=function(){const _0x3cc592=_0x2805a3;if(this[_0x3cc592(0x700)]){if(_0x3cc592(0x649)==='fXyLp')this[_0x3cc592(0x700)][_0x3cc592(0x7ce)](Scene_Skill['layoutSettings'][_0x3cc592(0x7c0)]);else{function _0x3244d8(){const _0x379835=_0x3cc592;if(_0x205857)this[_0x379835(0xaf)](_0x2b882b);_0x4ebac2['CoreEngine'][_0x379835(0x73b)][_0x379835(0x5a2)](this,_0x524d74);}}}this[_0x3cc592(0x504)]&&this[_0x3cc592(0x504)][_0x3cc592(0x7ce)](Scene_Skill['layoutSettings']['SkillTypeBgType']);this[_0x3cc592(0x76a)]&&this[_0x3cc592(0x76a)][_0x3cc592(0x7ce)](Scene_Skill[_0x3cc592(0x266)]['StatusBgType']);if(this[_0x3cc592(0x632)]){if(_0x3cc592(0x80f)===_0x3cc592(0x80f))this[_0x3cc592(0x632)][_0x3cc592(0x7ce)](Scene_Skill[_0x3cc592(0x266)][_0x3cc592(0x102)]);else{function _0x388b0d(){const _0xad2156=_0x3cc592;return _0x2aec38[_0xad2156(0x284)][_0xad2156(0x53b)]['call'](this);}}}if(this[_0x3cc592(0x719)]){if(_0x3cc592(0xe6)===_0x3cc592(0xe6))this[_0x3cc592(0x719)][_0x3cc592(0x7ce)](Scene_Skill[_0x3cc592(0x266)][_0x3cc592(0x6dc)]);else{function _0x43a6bc(){const _0x1f6a4c=_0x3cc592;if(!this[_0x1f6a4c(0x31d)]())return;const _0xbc2580=this[_0x1f6a4c(0x71a)]();this[_0x1f6a4c(0x33c)]=new _0x1a56cd(_0xbc2580),this[_0x1f6a4c(0x68d)](this[_0x1f6a4c(0x33c)]);}}}},Scene_Skill[_0x2805a3(0x6ac)][_0x2805a3(0x64d)]=function(){const _0x1b8ced=_0x2805a3;return Scene_Skill['layoutSettings'][_0x1b8ced(0x3c4)][_0x1b8ced(0x5a2)](this);},Scene_Skill[_0x2805a3(0x6ac)][_0x2805a3(0x4f9)]=function(){const _0x3dd09b=_0x2805a3;return Scene_Skill[_0x3dd09b(0x266)][_0x3dd09b(0x660)][_0x3dd09b(0x5a2)](this);},Scene_Skill['prototype']['statusWindowRect']=function(){const _0x53f2ba=_0x2805a3;return Scene_Skill[_0x53f2ba(0x266)]['StatusRect']['call'](this);},Scene_Skill[_0x2805a3(0x6ac)][_0x2805a3(0x535)]=function(){const _0xd0570c=_0x2805a3;return Scene_Skill[_0xd0570c(0x266)][_0xd0570c(0x286)]['call'](this);},Scene_Skill[_0x2805a3(0x6ac)][_0x2805a3(0x3b5)]=function(){const _0x302ab6=_0x2805a3;return Scene_Skill['layoutSettings'][_0x302ab6(0x5b7)][_0x302ab6(0x5a2)](this);},Scene_Equip[_0x2805a3(0x266)]=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x5cd)]['EquipMenu'],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x26b)]=Scene_Equip[_0x2805a3(0x6ac)][_0x2805a3(0x2de)],Scene_Equip[_0x2805a3(0x6ac)]['create']=function(){const _0x44dab2=_0x2805a3;VisuMZ['CoreEngine'][_0x44dab2(0x26b)][_0x44dab2(0x5a2)](this),this['setCoreEngineUpdateWindowBg']();},Scene_Equip[_0x2805a3(0x6ac)][_0x2805a3(0x5b0)]=function(){const _0x53a059=_0x2805a3;this[_0x53a059(0x700)]&&this[_0x53a059(0x700)][_0x53a059(0x7ce)](Scene_Equip['layoutSettings'][_0x53a059(0x7c0)]);this['_statusWindow']&&this[_0x53a059(0x76a)][_0x53a059(0x7ce)](Scene_Equip[_0x53a059(0x266)][_0x53a059(0x451)]);this[_0x53a059(0x195)]&&this['_commandWindow'][_0x53a059(0x7ce)](Scene_Equip[_0x53a059(0x266)][_0x53a059(0x4e6)]);if(this['_slotWindow']){if(_0x53a059(0x9e)==='pfcCD'){function _0x5213e4(){const _0x1b31ee=_0x53a059;this[_0x1b31ee(0x747)]=0xff;}}else this['_slotWindow']['setBackgroundType'](Scene_Equip[_0x53a059(0x266)][_0x53a059(0x6bb)]);}this[_0x53a059(0x632)]&&this[_0x53a059(0x632)][_0x53a059(0x7ce)](Scene_Equip['layoutSettings'][_0x53a059(0x102)]);},Scene_Equip['prototype'][_0x2805a3(0x64d)]=function(){const _0x431c6e=_0x2805a3;return Scene_Equip[_0x431c6e(0x266)]['HelpRect'][_0x431c6e(0x5a2)](this);},Scene_Equip['prototype'][_0x2805a3(0xf0)]=function(){const _0x375eb6=_0x2805a3;return Scene_Equip[_0x375eb6(0x266)][_0x375eb6(0x2ea)]['call'](this);},Scene_Equip[_0x2805a3(0x6ac)][_0x2805a3(0x309)]=function(){const _0x1e73f3=_0x2805a3;return Scene_Equip[_0x1e73f3(0x266)][_0x1e73f3(0x55f)][_0x1e73f3(0x5a2)](this);},Scene_Equip[_0x2805a3(0x6ac)][_0x2805a3(0x150)]=function(){const _0x52f279=_0x2805a3;return Scene_Equip[_0x52f279(0x266)][_0x52f279(0x1dd)][_0x52f279(0x5a2)](this);},Scene_Equip[_0x2805a3(0x6ac)][_0x2805a3(0x535)]=function(){return Scene_Equip['layoutSettings']['ItemRect']['call'](this);},Scene_Status[_0x2805a3(0x266)]=VisuMZ[_0x2805a3(0x284)]['Settings']['MenuLayout'][_0x2805a3(0x4e7)],VisuMZ['CoreEngine'][_0x2805a3(0x6aa)]=Scene_Status[_0x2805a3(0x6ac)]['create'],Scene_Status[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0x5bb3e8=_0x2805a3;VisuMZ[_0x5bb3e8(0x284)][_0x5bb3e8(0x6aa)][_0x5bb3e8(0x5a2)](this),this[_0x5bb3e8(0x5b0)]();},Scene_Status['prototype'][_0x2805a3(0x5b0)]=function(){const _0x130426=_0x2805a3;if(this[_0x130426(0x5f1)]){if(_0x130426(0x562)!==_0x130426(0x562)){function _0x3df91a(){const _0x414d1c=_0x130426,_0x24af95=_0x7736cd[_0x414d1c(0x284)][_0x414d1c(0x779)][_0x414d1c(0x682)],_0x1cb8ee=_0x24af95[_0x414d1c(0xf7)],_0x5d0874=_0x18ea4d[_0x414d1c(0x57d)](),_0x476770=_0x414d1c(0x12e)[_0x414d1c(0x2fb)](_0x5d0874);return _0x24af95[_0x476770]?_0x24af95[_0x476770]:_0x1cb8ee[_0x414d1c(0x2fb)](_0x5d0874);}}else this[_0x130426(0x5f1)][_0x130426(0x7ce)](Scene_Status['layoutSettings']['ProfileBgType']);}this['_statusWindow']&&this[_0x130426(0x76a)][_0x130426(0x7ce)](Scene_Status[_0x130426(0x266)][_0x130426(0x451)]),this['_statusParamsWindow']&&this[_0x130426(0x44c)][_0x130426(0x7ce)](Scene_Status['layoutSettings'][_0x130426(0x6bd)]),this[_0x130426(0xc5)]&&this['_statusEquipWindow'][_0x130426(0x7ce)](Scene_Status['layoutSettings'][_0x130426(0x7dc)]);},Scene_Status['prototype'][_0x2805a3(0x1f1)]=function(){const _0x597c1b=_0x2805a3;return Scene_Status['layoutSettings']['ProfileRect'][_0x597c1b(0x5a2)](this);},Scene_Status['prototype'][_0x2805a3(0xf0)]=function(){const _0x14a76e=_0x2805a3;return Scene_Status[_0x14a76e(0x266)][_0x14a76e(0x2ea)]['call'](this);},Scene_Status[_0x2805a3(0x6ac)][_0x2805a3(0x31f)]=function(){const _0x19543e=_0x2805a3;return Scene_Status[_0x19543e(0x266)][_0x19543e(0x447)][_0x19543e(0x5a2)](this);},Scene_Status[_0x2805a3(0x6ac)][_0x2805a3(0x5dc)]=function(){const _0x5e2a3f=_0x2805a3;return Scene_Status[_0x5e2a3f(0x266)][_0x5e2a3f(0x7fc)]['call'](this);},Scene_Options[_0x2805a3(0x266)]=VisuMZ[_0x2805a3(0x284)]['Settings'][_0x2805a3(0x5cd)]['OptionsMenu'],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x232)]=Scene_Options['prototype'][_0x2805a3(0x2de)],Scene_Options[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0x543b5e=_0x2805a3;VisuMZ[_0x543b5e(0x284)]['Scene_Options_create']['call'](this),this['setCoreEngineUpdateWindowBg']();},Scene_Options['prototype'][_0x2805a3(0x5b0)]=function(){const _0x431667=_0x2805a3;if(this[_0x431667(0x6b8)]){if('YvfbA'===_0x431667(0x4a5)){function _0xd60235(){const _0x5c8e4e=_0x431667;if(this[_0x5c8e4e(0x25f)]===_0x5c8e4e(0x57c)&&!_0x59be0e[_0x5c8e4e(0x6d2)]())return;if(_0x5ce395['isNumpadPressed']())return;_0x305e1b[_0x5c8e4e(0x284)][_0x5c8e4e(0x77b)]['call'](this,_0x20dfe2),this['switchModes'](_0x5c8e4e(0x5d2));}}else this[_0x431667(0x6b8)][_0x431667(0x7ce)](Scene_Options[_0x431667(0x266)][_0x431667(0x602)]);}},Scene_Options[_0x2805a3(0x6ac)]['optionsWindowRect']=function(){const _0x4e6255=_0x2805a3;return Scene_Options['layoutSettings']['OptionsRect'][_0x4e6255(0x5a2)](this);},Scene_Save[_0x2805a3(0x266)]=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x5cd)][_0x2805a3(0x7dd)],Scene_Save[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0x2c2845=_0x2805a3;Scene_File[_0x2c2845(0x6ac)][_0x2c2845(0x2de)][_0x2c2845(0x5a2)](this),this[_0x2c2845(0x5b0)]();},Scene_Save[_0x2805a3(0x6ac)][_0x2805a3(0x5b0)]=function(){const _0x137f20=_0x2805a3;if(this[_0x137f20(0x700)]){if(_0x137f20(0x769)===_0x137f20(0x769))this['_helpWindow'][_0x137f20(0x7ce)](Scene_Save[_0x137f20(0x266)][_0x137f20(0x7c0)]);else{function _0xf7547(){const _0x2710c8=_0x137f20;return _0x57bcd1['CoreEngine']['Window_ShopSell_isEnabled'][_0x2710c8(0x5a2)](this,_0x3df097);}}}this[_0x137f20(0x55b)]&&this[_0x137f20(0x55b)][_0x137f20(0x7ce)](Scene_Save[_0x137f20(0x266)][_0x137f20(0x4a7)]);},Scene_Save[_0x2805a3(0x6ac)]['helpWindowRect']=function(){const _0x6ed60a=_0x2805a3;return Scene_Save[_0x6ed60a(0x266)][_0x6ed60a(0x3c4)][_0x6ed60a(0x5a2)](this);},Scene_Save[_0x2805a3(0x6ac)][_0x2805a3(0x5ae)]=function(){const _0x3c66a8=_0x2805a3;return Scene_Save[_0x3c66a8(0x266)][_0x3c66a8(0x1f0)][_0x3c66a8(0x5a2)](this);},Scene_Load[_0x2805a3(0x266)]=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x5cd)][_0x2805a3(0x40b)],Scene_Load[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0xf35872=_0x2805a3;Scene_File[_0xf35872(0x6ac)][_0xf35872(0x2de)]['call'](this),this['setCoreEngineUpdateWindowBg']();},Scene_Load[_0x2805a3(0x6ac)]['setCoreEngineUpdateWindowBg']=function(){const _0xb1885=_0x2805a3;if(this[_0xb1885(0x700)]){if(_0xb1885(0xf9)===_0xb1885(0xf9))this['_helpWindow'][_0xb1885(0x7ce)](Scene_Load['layoutSettings']['HelpBgType']);else{function _0x71db6a(){const _0x49e508=_0xb1885;if(_0x574db5&&_0x2029fd[_0x49e508(0x50f)]){if(this[_0x49e508(0x69b)](_0x2128e3))return!![];}}}}this[_0xb1885(0x55b)]&&this[_0xb1885(0x55b)][_0xb1885(0x7ce)](Scene_Load[_0xb1885(0x266)][_0xb1885(0x4a7)]);},Scene_Load['prototype'][_0x2805a3(0x64d)]=function(){const _0x25eef0=_0x2805a3;return Scene_Load[_0x25eef0(0x266)]['HelpRect'][_0x25eef0(0x5a2)](this);},Scene_Load['prototype']['listWindowRect']=function(){const _0xfbdeab=_0x2805a3;return Scene_Load[_0xfbdeab(0x266)][_0xfbdeab(0x1f0)][_0xfbdeab(0x5a2)](this);},Scene_GameEnd['layoutSettings']=VisuMZ[_0x2805a3(0x284)]['Settings'][_0x2805a3(0x5cd)][_0x2805a3(0x2e3)],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x517)]=Scene_GameEnd[_0x2805a3(0x6ac)][_0x2805a3(0x32c)],Scene_GameEnd['prototype'][_0x2805a3(0x32c)]=function(){const _0x1b9974=_0x2805a3;Scene_MenuBase[_0x1b9974(0x6ac)][_0x1b9974(0x32c)][_0x1b9974(0x5a2)](this);},Scene_GameEnd[_0x2805a3(0x6ac)]['createCommandWindow']=function(){const _0x1c3f61=_0x2805a3,_0x3be56e=this[_0x1c3f61(0x309)]();this[_0x1c3f61(0x195)]=new Window_GameEnd(_0x3be56e),this[_0x1c3f61(0x195)][_0x1c3f61(0x47d)](_0x1c3f61(0x152),this[_0x1c3f61(0x20a)][_0x1c3f61(0x472)](this)),this[_0x1c3f61(0x68d)](this[_0x1c3f61(0x195)]),this[_0x1c3f61(0x195)][_0x1c3f61(0x7ce)](Scene_GameEnd[_0x1c3f61(0x266)]['CommandBgType']);},Scene_GameEnd['prototype'][_0x2805a3(0x309)]=function(){const _0x18c0f2=_0x2805a3;return Scene_GameEnd['layoutSettings'][_0x18c0f2(0x55f)][_0x18c0f2(0x5a2)](this);},Scene_Shop['layoutSettings']=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x5cd)][_0x2805a3(0x366)],VisuMZ['CoreEngine']['Scene_Shop_create']=Scene_Shop['prototype'][_0x2805a3(0x2de)],Scene_Shop[_0x2805a3(0x6ac)][_0x2805a3(0x2de)]=function(){const _0x3f0c5c=_0x2805a3;VisuMZ[_0x3f0c5c(0x284)]['Scene_Shop_create']['call'](this),this['setCoreEngineUpdateWindowBg']();},Scene_Shop[_0x2805a3(0x6ac)]['setCoreEngineUpdateWindowBg']=function(){const _0x5f3094=_0x2805a3;this['_helpWindow']&&this[_0x5f3094(0x700)][_0x5f3094(0x7ce)](Scene_Shop[_0x5f3094(0x266)][_0x5f3094(0x7c0)]);if(this[_0x5f3094(0x5e1)]){if(_0x5f3094(0x5ec)===_0x5f3094(0x5ec))this[_0x5f3094(0x5e1)]['setBackgroundType'](Scene_Shop[_0x5f3094(0x266)][_0x5f3094(0x809)]);else{function _0x2c63aa(){const _0x3229fc=_0x5f3094;return this[_0x3229fc(0x765)]()[_0x3229fc(0x503)];}}}this[_0x5f3094(0x195)]&&this[_0x5f3094(0x195)][_0x5f3094(0x7ce)](Scene_Shop[_0x5f3094(0x266)]['CommandBgType']);if(this[_0x5f3094(0xc4)]){if('ctZzt'!==_0x5f3094(0x5b3)){function _0x494013(){return 0xc0;}}else this[_0x5f3094(0xc4)][_0x5f3094(0x7ce)](Scene_Shop[_0x5f3094(0x266)][_0x5f3094(0x716)]);}this[_0x5f3094(0x109)]&&this[_0x5f3094(0x109)][_0x5f3094(0x7ce)](Scene_Shop['layoutSettings']['NumberBgType']);if(this[_0x5f3094(0x76a)]){if('sjmdg'!==_0x5f3094(0x4ea))this[_0x5f3094(0x76a)][_0x5f3094(0x7ce)](Scene_Shop['layoutSettings'][_0x5f3094(0x451)]);else{function _0x34db8d(){return _0x17aa92;}}}if(this[_0x5f3094(0x67a)]){if('KBTUb'!==_0x5f3094(0x367))this[_0x5f3094(0x67a)]['setBackgroundType'](Scene_Shop['layoutSettings']['BuyBgType']);else{function _0xbb926c(){const _0x3b2a12=_0x5f3094;return _0x3b2a12(0xe8);}}}if(this[_0x5f3094(0x606)]){if('EWZVT'!=='EWZVT'){function _0x206ef2(){const _0x23fc4c=_0x5f3094;this[_0x23fc4c(0x700)]&&this[_0x23fc4c(0x700)][_0x23fc4c(0x7ce)](_0x365e9f[_0x23fc4c(0x266)]['HelpBgType']),this[_0x23fc4c(0x55b)]&&this[_0x23fc4c(0x55b)]['setBackgroundType'](_0x5b0de9[_0x23fc4c(0x266)][_0x23fc4c(0x4a7)]);}}else this[_0x5f3094(0x606)][_0x5f3094(0x7ce)](Scene_Shop[_0x5f3094(0x266)][_0x5f3094(0x4c3)]);}if(this[_0x5f3094(0x5c4)]){if('BKwLs'===_0x5f3094(0x259))this[_0x5f3094(0x5c4)][_0x5f3094(0x7ce)](Scene_Shop['layoutSettings'][_0x5f3094(0x7f1)]);else{function _0x19df3f(){const _0x3f1a15=_0x5f3094;return this[_0x3f1a15(0x3c5)]();}}}},Scene_Shop[_0x2805a3(0x6ac)][_0x2805a3(0x64d)]=function(){const _0x4ceaf7=_0x2805a3;return Scene_Shop[_0x4ceaf7(0x266)][_0x4ceaf7(0x3c4)]['call'](this);},Scene_Shop[_0x2805a3(0x6ac)][_0x2805a3(0x17f)]=function(){const _0x156891=_0x2805a3;return Scene_Shop[_0x156891(0x266)][_0x156891(0x703)][_0x156891(0x5a2)](this);},Scene_Shop[_0x2805a3(0x6ac)]['commandWindowRect']=function(){const _0x3955cd=_0x2805a3;return Scene_Shop[_0x3955cd(0x266)][_0x3955cd(0x55f)]['call'](this);},Scene_Shop[_0x2805a3(0x6ac)][_0x2805a3(0xf2)]=function(){const _0x3e0e68=_0x2805a3;return Scene_Shop[_0x3e0e68(0x266)][_0x3e0e68(0x79e)][_0x3e0e68(0x5a2)](this);},Scene_Shop[_0x2805a3(0x6ac)][_0x2805a3(0x6be)]=function(){const _0x57c063=_0x2805a3;return Scene_Shop[_0x57c063(0x266)][_0x57c063(0x628)]['call'](this);},Scene_Shop[_0x2805a3(0x6ac)][_0x2805a3(0xf0)]=function(){const _0x2c1787=_0x2805a3;return Scene_Shop[_0x2c1787(0x266)]['StatusRect']['call'](this);},Scene_Shop[_0x2805a3(0x6ac)][_0x2805a3(0x124)]=function(){const _0x20d96e=_0x2805a3;return Scene_Shop['layoutSettings'][_0x20d96e(0x216)][_0x20d96e(0x5a2)](this);},Scene_Shop['prototype'][_0x2805a3(0x48d)]=function(){const _0x1f9d4a=_0x2805a3;return Scene_Shop['layoutSettings'][_0x1f9d4a(0x73f)][_0x1f9d4a(0x5a2)](this);},Scene_Shop[_0x2805a3(0x6ac)]['sellWindowRect']=function(){const _0x1e7140=_0x2805a3;return Scene_Shop['layoutSettings'][_0x1e7140(0x5a1)][_0x1e7140(0x5a2)](this);},Scene_Name['layoutSettings']=VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)]['MenuLayout'][_0x2805a3(0x48e)],VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x28d)]=Scene_Name[_0x2805a3(0x6ac)][_0x2805a3(0x2de)],Scene_Name[_0x2805a3(0x6ac)]['create']=function(){const _0x413a02=_0x2805a3;VisuMZ['CoreEngine'][_0x413a02(0x28d)]['call'](this),this['setCoreEngineUpdateWindowBg']();},Scene_Name['prototype'][_0x2805a3(0x5b0)]=function(){const _0x4d8b8f=_0x2805a3;if(this['_editWindow']){if(_0x4d8b8f(0x461)!==_0x4d8b8f(0x461)){function _0x52e080(){const _0x6db34f=_0x4d8b8f;if(_0x4def49[_0x6db34f(0x326)]())_0x38a123['log'](_0x396e9e);}}else this[_0x4d8b8f(0x431)][_0x4d8b8f(0x7ce)](Scene_Name[_0x4d8b8f(0x266)][_0x4d8b8f(0x5fc)]);}if(this[_0x4d8b8f(0x581)]){if(_0x4d8b8f(0x25d)!=='blthh'){function _0x3fe144(){const _0x137272=_0x4d8b8f;this['_pictureName'][_0x137272(0x137)](/VisuMZ CoreEngine PictureIcon (\d+)/i)?this[_0x137272(0x2af)](_0x2741a8(_0x47d7fd['$1'])):_0x5d4b1c[_0x137272(0x284)]['Sprite_Picture_loadBitmap'][_0x137272(0x5a2)](this);}}else this[_0x4d8b8f(0x581)][_0x4d8b8f(0x7ce)](Scene_Name['layoutSettings'][_0x4d8b8f(0x543)]);}},Scene_Name[_0x2805a3(0x6ac)][_0x2805a3(0xb6)]=function(){return 0x0;},Scene_Name[_0x2805a3(0x6ac)][_0x2805a3(0x651)]=function(){const _0x5eb69d=_0x2805a3;return Scene_Name[_0x5eb69d(0x266)][_0x5eb69d(0x28a)][_0x5eb69d(0x5a2)](this);},Scene_Name['prototype']['inputWindowRect']=function(){const _0x6f4612=_0x2805a3;return Scene_Name[_0x6f4612(0x266)][_0x6f4612(0x5ce)][_0x6f4612(0x5a2)](this);},Scene_Name[_0x2805a3(0x6ac)][_0x2805a3(0x566)]=function(){const _0x4645fd=_0x2805a3;if(!this[_0x4645fd(0x581)])return![];return VisuMZ[_0x4645fd(0x284)]['Settings'][_0x4645fd(0x613)][_0x4645fd(0x566)];},Scene_Name[_0x2805a3(0x6ac)][_0x2805a3(0x2ed)]=function(){const _0x1c9239=_0x2805a3;if(this[_0x1c9239(0x566)]()){if(_0x1c9239(0x228)!==_0x1c9239(0x672))return TextManager['getInputButtonString']('tab');else{function _0x2bfabc(){const _0x284d74=_0x1c9239,_0x1ed0a2=_0x1c8b53[_0x284d74(0x284)]['Settings']['ButtonAssist'],_0x3e2861=_0x1ed0a2['MultiKeyFmt'],_0x498105=this[_0x284d74(0x3a1)](_0x41bd9c),_0x15b49e=this['getInputButtonString'](_0x235d43);return _0x3e2861['format'](_0x498105,_0x15b49e);}}}else return Scene_MenuBase[_0x1c9239(0x6ac)][_0x1c9239(0x2ed)][_0x1c9239(0x5a2)](this);},Scene_Name[_0x2805a3(0x6ac)]['buttonAssistText1']=function(){const _0x49d21f=_0x2805a3;if(this[_0x49d21f(0x566)]()){const _0xe1bd50=VisuMZ[_0x49d21f(0x284)]['Settings'][_0x49d21f(0x613)];return this[_0x49d21f(0x581)]['_mode']===_0x49d21f(0x57c)?_0xe1bd50['Keyboard']||'Keyboard':_0xe1bd50[_0x49d21f(0x7d4)]||'Manual';}else return Scene_MenuBase[_0x49d21f(0x6ac)][_0x49d21f(0x615)][_0x49d21f(0x5a2)](this);},VisuMZ['CoreEngine'][_0x2805a3(0x749)]=Scene_Name[_0x2805a3(0x6ac)][_0x2805a3(0x123)],Scene_Name[_0x2805a3(0x6ac)][_0x2805a3(0x123)]=function(){const _0x2d437e=_0x2805a3;if(this[_0x2d437e(0x56f)]()){if(_0x2d437e(0xd0)!==_0x2d437e(0xd0)){function _0x353e67(){const _0x554348=_0x2d437e,_0x4d4c6b=[_0x554348(0x616),_0x554348(0xbc),_0x554348(0x2d6),_0x554348(0x7ca),_0x554348(0x1bc),_0x554348(0x6fe),_0x554348(0x6ce),_0x554348(0x2a1),_0x554348(0x3e8),_0x554348(0x687),_0x554348(0x1ff),_0x554348(0xd4),'titles1','titles2'];for(const _0x2a17e3 of _0x4d4c6b){const _0x481575=_0x136492[_0x554348(0x284)][_0x554348(0x779)][_0x554348(0x22e)][_0x2a17e3],_0x4c6731=_0x554348(0x3dd)[_0x554348(0x2fb)](_0x2a17e3);for(const _0x1c933d of _0x481575){_0x21f746[_0x554348(0x10c)](_0x4c6731,_0x1c933d);}}}}else this[_0x2d437e(0x445)]();}else VisuMZ[_0x2d437e(0x284)][_0x2d437e(0x749)]['call'](this);},Scene_Name[_0x2805a3(0x6ac)]['doesNameContainBannedWords']=function(){const _0x1ae610=_0x2805a3,_0x53aad7=VisuMZ['CoreEngine']['Settings'][_0x1ae610(0x613)];if(!_0x53aad7)return![];const _0x558c88=_0x53aad7[_0x1ae610(0x2d2)];if(!_0x558c88)return![];const _0x4e0c8f=this['_editWindow'][_0x1ae610(0x7c5)]()[_0x1ae610(0x31e)]();for(const _0x516512 of _0x558c88){if(_0x4e0c8f[_0x1ae610(0x5ea)](_0x516512[_0x1ae610(0x31e)]()))return!![];}return![];},Scene_Name['prototype']['onInputBannedWords']=function(){const _0x2e5546=_0x2805a3;SoundManager[_0x2e5546(0x405)]();},VisuMZ[_0x2805a3(0x284)]['Scene_Battle_update']=Scene_Battle[_0x2805a3(0x6ac)][_0x2805a3(0x1d5)],Scene_Battle['prototype'][_0x2805a3(0x1d5)]=function(){const _0x461702=_0x2805a3;VisuMZ[_0x461702(0x284)][_0x461702(0x5e3)]['call'](this);if($gameTemp['_playTestFastMode'])this[_0x461702(0x30c)]();},Scene_Battle['prototype'][_0x2805a3(0x30c)]=function(){const _0xe017d7=_0x2805a3;if(!BattleManager['isInputting']()&&!this[_0xe017d7(0x3b4)]&&!$gameMessage[_0xe017d7(0x7af)]()){if(_0xe017d7(0x70f)===_0xe017d7(0x291)){function _0x338231(){return this['_hideButtons'];}}else this[_0xe017d7(0x3b4)]=!![],this[_0xe017d7(0x1d5)](),SceneManager[_0xe017d7(0x3fe)](),this[_0xe017d7(0x3b4)]=![];}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x404)]=Scene_Battle[_0x2805a3(0x6ac)][_0x2805a3(0x104)],Scene_Battle[_0x2805a3(0x6ac)]['createCancelButton']=function(){const _0x4b792f=_0x2805a3;VisuMZ[_0x4b792f(0x284)]['Scene_Battle_createCancelButton']['call'](this),SceneManager[_0x4b792f(0x4c9)]()&&this[_0x4b792f(0x68f)]();},Scene_Battle['prototype'][_0x2805a3(0x68f)]=function(){const _0x32823e=_0x2805a3;this[_0x32823e(0x5eb)]['x']=Graphics[_0x32823e(0x30f)]+0x4;if(this[_0x32823e(0x460)]()){if(_0x32823e(0x6bc)===_0x32823e(0x6bc))this['_cancelButton']['y']=Graphics[_0x32823e(0x7f7)]-this[_0x32823e(0x7ac)]();else{function _0x28bbeb(){const _0x3dbdd9=_0x32823e;if(!!_0x2dbffc[_0x5e768a]){if(_0x43da95['isPlaytest']())_0x8f986c['log'](_0x3dbdd9(0x469)[_0x3dbdd9(0x2fb)](_0x1dd172));}const _0x5402a6=_0x3dbdd9(0x2b7)[_0x3dbdd9(0x2fb)](_0x2569d5,_0x2c5f2f);_0x583b13[_0x3d72ae]=new _0x3bf055(_0x5402a6);}}}else{if('ZTnJP'===_0x32823e(0x796)){function _0x8bebf(){const _0x2cb8aa=_0x32823e;return _0x4a4aa7?_0xcde495(_0x2f7f01[_0x2cb8aa(0x72b)](_0x46a1e6*0x64))+'%':_0x1e4b76;}}else this['_cancelButton']['y']=0x0;}},VisuMZ[_0x2805a3(0x284)]['Sprite_Button_initialize']=Sprite_Button[_0x2805a3(0x6ac)]['initialize'],Sprite_Button[_0x2805a3(0x6ac)][_0x2805a3(0x748)]=function(_0x58ddea){const _0x39a661=_0x2805a3;VisuMZ['CoreEngine']['Sprite_Button_initialize'][_0x39a661(0x5a2)](this,_0x58ddea),this[_0x39a661(0x1eb)]();},Sprite_Button['prototype']['initButtonHidden']=function(){const _0x49887b=_0x2805a3,_0x47a587=VisuMZ[_0x49887b(0x284)][_0x49887b(0x779)]['UI'];this[_0x49887b(0x1df)]=![];switch(this[_0x49887b(0x1f9)]){case _0x49887b(0x152):this['_isButtonHidden']=!_0x47a587['cancelShowButton'];break;case _0x49887b(0x359):case _0x49887b(0x4f8):this[_0x49887b(0x1df)]=!_0x47a587[_0x49887b(0x720)];break;case _0x49887b(0x273):case'up':case _0x49887b(0x16e):case _0x49887b(0x424):case'ok':this[_0x49887b(0x1df)]=!_0x47a587[_0x49887b(0x42b)];break;case _0x49887b(0x435):this[_0x49887b(0x1df)]=!_0x47a587[_0x49887b(0x316)];break;}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x212)]=Sprite_Button[_0x2805a3(0x6ac)]['updateOpacity'],Sprite_Button[_0x2805a3(0x6ac)]['updateOpacity']=function(){const _0x1ccf93=_0x2805a3;if(SceneManager[_0x1ccf93(0x634)]()||this['_isButtonHidden']){if(_0x1ccf93(0x548)===_0x1ccf93(0x548))this[_0x1ccf93(0x6b0)]();else{function _0x1ff9f3(){const _0xbf3414=_0x1ccf93;if(_0x4eb402)_0x33bc01[_0xbf3414(0x197)](_0x22956f);}}}else VisuMZ['CoreEngine']['Sprite_Button_updateOpacity']['call'](this);},Sprite_Button[_0x2805a3(0x6ac)][_0x2805a3(0x6b0)]=function(){const _0x39c2e2=_0x2805a3;this[_0x39c2e2(0x389)]=![],this[_0x39c2e2(0x747)]=0x0,this['x']=Graphics[_0x39c2e2(0x42c)]*0xa,this['y']=Graphics[_0x39c2e2(0x80a)]*0xa;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x182)]=Sprite_Battler[_0x2805a3(0x6ac)][_0x2805a3(0x5dd)],Sprite_Battler[_0x2805a3(0x6ac)][_0x2805a3(0x5dd)]=function(_0x3bf3b0,_0x2ef308,_0xb39584){const _0x4bb244=_0x2805a3;(this[_0x4bb244(0x5a8)]!==_0x3bf3b0||this['_targetOffsetY']!==_0x2ef308)&&(this[_0x4bb244(0x67f)](_0x4bb244(0x146)),this[_0x4bb244(0x56d)]=_0xb39584),VisuMZ[_0x4bb244(0x284)][_0x4bb244(0x182)][_0x4bb244(0x5a2)](this,_0x3bf3b0,_0x2ef308,_0xb39584);},Sprite_Battler[_0x2805a3(0x6ac)][_0x2805a3(0x67f)]=function(_0x30127e){const _0x2db8c7=_0x2805a3;this[_0x2db8c7(0x3b7)]=_0x30127e;},Sprite_Battler[_0x2805a3(0x6ac)][_0x2805a3(0x7bc)]=function(){const _0x42875f=_0x2805a3;if(this[_0x42875f(0x453)]<=0x0)return;const _0x1847eb=this[_0x42875f(0x453)],_0xea4c45=this[_0x42875f(0x56d)],_0x1f47dd=this[_0x42875f(0x3b7)];this['_offsetX']=this['applyEasing'](this[_0x42875f(0x53c)],this[_0x42875f(0x5a8)],_0x1847eb,_0xea4c45,_0x1f47dd),this[_0x42875f(0x791)]=this[_0x42875f(0x490)](this[_0x42875f(0x791)],this[_0x42875f(0x254)],_0x1847eb,_0xea4c45,_0x1f47dd),this[_0x42875f(0x453)]--;if(this['_movementDuration']<=0x0)this[_0x42875f(0x443)]();},Sprite_Battler['prototype'][_0x2805a3(0x490)]=function(_0x4a2739,_0x161cd2,_0x4ea34b,_0x53864e,_0x2b00f5){const _0x2d0d9d=_0x2805a3,_0x2b623d=VisuMZ[_0x2d0d9d(0x3a3)]((_0x53864e-_0x4ea34b)/_0x53864e,_0x2b00f5||_0x2d0d9d(0x146)),_0x4cb4f1=VisuMZ['ApplyEasing']((_0x53864e-_0x4ea34b+0x1)/_0x53864e,_0x2b00f5||_0x2d0d9d(0x146)),_0x1d0d3c=(_0x4a2739-_0x161cd2*_0x2b623d)/(0x1-_0x2b623d);return _0x1d0d3c+(_0x161cd2-_0x1d0d3c)*_0x4cb4f1;},VisuMZ[_0x2805a3(0x284)]['Sprite_Actor_setActorHome']=Sprite_Actor[_0x2805a3(0x6ac)]['setActorHome'],Sprite_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x5ee)]=function(_0x165447){const _0x494504=_0x2805a3;if(VisuMZ[_0x494504(0x284)]['Settings']['UI'][_0x494504(0x5cb)]){if(_0x494504(0x580)!==_0x494504(0x580)){function _0x12a408(){const _0x2af1c5=_0x494504;this[_0x2af1c5(0x76a)]['setBackgroundType'](_0x181a22[_0x2af1c5(0x266)][_0x2af1c5(0x451)]);}}else this['setActorHomeRepositioned'](_0x165447);}else VisuMZ[_0x494504(0x284)][_0x494504(0x2ac)][_0x494504(0x5a2)](this,_0x165447);},Sprite_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x611)]=function(_0x2ce1c7){const _0x4f1eb1=_0x2805a3;let _0x422da1=Math[_0x4f1eb1(0x72b)](Graphics[_0x4f1eb1(0x42c)]/0x2+0xc0);_0x422da1-=Math[_0x4f1eb1(0x4cb)]((Graphics['width']-Graphics[_0x4f1eb1(0x30f)])/0x2),_0x422da1+=_0x2ce1c7*0x20;let _0x3ea808=Graphics[_0x4f1eb1(0x80a)]-0xc8-$gameParty[_0x4f1eb1(0x3d1)]()*0x30;_0x3ea808-=Math['floor']((Graphics[_0x4f1eb1(0x80a)]-Graphics[_0x4f1eb1(0x7f7)])/0x2),_0x3ea808+=_0x2ce1c7*0x30,this['setHome'](_0x422da1,_0x3ea808);},Sprite_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x56c)]=function(){this['startMove'](0x4b0,0x0,0x78);},Sprite_Animation[_0x2805a3(0x6ac)][_0x2805a3(0x760)]=function(_0x52ab59){const _0x114144=_0x2805a3;this[_0x114144(0x5d6)]=_0x52ab59;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x4be)]=Sprite_Animation[_0x2805a3(0x6ac)]['processSoundTimings'],Sprite_Animation['prototype'][_0x2805a3(0x655)]=function(){const _0x536dd0=_0x2805a3;if(this[_0x536dd0(0x5d6)])return;VisuMZ['CoreEngine'][_0x536dd0(0x4be)]['call'](this);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0xcc)]=Sprite_Animation[_0x2805a3(0x6ac)]['setViewport'],Sprite_Animation[_0x2805a3(0x6ac)][_0x2805a3(0x7da)]=function(_0x1b981f){const _0x21a58b=_0x2805a3;if(this['isAnimationOffsetXMirrored']()){if(_0x21a58b(0x610)===_0x21a58b(0x193)){function _0xbb1dad(){const _0x442322=_0x21a58b;_0x308282=_0xb520d[_0x442322(0x72b)](_0x2146e3),_0x3bc4ac=_0x229835[_0x442322(0x72b)](_0x24fd74),_0x4f19c8=_0x21f8f9[_0x442322(0x72b)](_0xe5b205),_0x31bb83['CoreEngine'][_0x442322(0x586)][_0x442322(0x5a2)](this,_0xf1f4bd,_0x107bf5,_0x1c1808,_0x104299),this[_0x442322(0x226)]();}}else this[_0x21a58b(0x1bf)](_0x1b981f);}else VisuMZ[_0x21a58b(0x284)][_0x21a58b(0xcc)][_0x21a58b(0x5a2)](this,_0x1b981f);},Sprite_Animation[_0x2805a3(0x6ac)][_0x2805a3(0x139)]=function(){const _0x26215e=_0x2805a3;if(!this[_0x26215e(0x5bb)])return![];const _0x4938d3=this[_0x26215e(0x5bb)][_0x26215e(0x7c5)]||'';if(_0x4938d3['match'](/<MIRROR OFFSET X>/i))return!![];if(_0x4938d3[_0x26215e(0x137)](/<NO MIRROR OFFSET X>/i))return![];return VisuMZ[_0x26215e(0x284)][_0x26215e(0x779)][_0x26215e(0x5f9)][_0x26215e(0x34d)];},Sprite_Animation[_0x2805a3(0x6ac)]['setViewportCoreEngineFix']=function(_0x3ccf01){const _0x1e81a7=_0x2805a3,_0x1c8fc6=this[_0x1e81a7(0x2c8)],_0x56be37=this['_viewportSize'],_0x21f37b=this[_0x1e81a7(0x5bb)][_0x1e81a7(0x206)]*(this[_0x1e81a7(0x3c8)]?-0x1:0x1)-_0x1c8fc6/0x2,_0x590bb8=this['_animation'][_0x1e81a7(0xec)]-_0x56be37/0x2,_0x431ff8=this[_0x1e81a7(0x1ed)](_0x3ccf01);_0x3ccf01['gl'][_0x1e81a7(0x1f2)](_0x21f37b+_0x431ff8['x'],_0x590bb8+_0x431ff8['y'],_0x1c8fc6,_0x56be37);},Sprite_Animation['prototype'][_0x2805a3(0x50e)]=function(_0x479779){const _0x2e65b2=_0x2805a3;if(_0x479779[_0x2e65b2(0x1e4)]){}const _0x86f8b=this[_0x2e65b2(0x5bb)][_0x2e65b2(0x7c5)];let _0x637fb2=_0x479779[_0x2e65b2(0x80a)]*_0x479779[_0x2e65b2(0x739)]['y'],_0x1afbc9=0x0,_0x2157e1=-_0x637fb2/0x2;if(_0x86f8b[_0x2e65b2(0x137)](/<(?:HEAD|HEADER|TOP)>/i))_0x2157e1=-_0x637fb2;if(_0x86f8b[_0x2e65b2(0x137)](/<(?:FOOT|FOOTER|BOTTOM)>/i))_0x2157e1=0x0;if(_0x86f8b['match'](/<(?:LEFT)>/i))_0x1afbc9=-_0x479779[_0x2e65b2(0x42c)]/0x2;if(_0x86f8b[_0x2e65b2(0x137)](/<(?:RIGHT)>/i))_0x2157e1=_0x479779['width']/0x2;if(_0x86f8b[_0x2e65b2(0x137)](/<ANCHOR X:[ ](\d+\.?\d*)>/i))_0x1afbc9=Number(RegExp['$1'])*_0x479779[_0x2e65b2(0x42c)];_0x86f8b[_0x2e65b2(0x137)](/<ANCHOR Y:[ ](\d+\.?\d*)>/i)&&(_0x2157e1=(0x1-Number(RegExp['$1']))*-_0x637fb2);if(_0x86f8b[_0x2e65b2(0x137)](/<ANCHOR:[ ](\d+\.?\d*),[ ](\d+\.?\d*)>/i)){if(_0x2e65b2(0x300)!==_0x2e65b2(0x300)){function _0x37926f(){const _0x133741=_0x2e65b2;_0x375832[_0x133741(0x284)]['Bitmap_blt'][_0x133741(0x5a2)](this,_0x2f8cb5,_0x58421f,_0x3762a3,_0x5d23d1,_0x6822,_0xb120d5,_0x126e9f,_0x31f651,_0x31ba66),this[_0x133741(0x226)]();}}else _0x1afbc9=Number(RegExp['$1'])*_0x479779[_0x2e65b2(0x42c)],_0x2157e1=(0x1-Number(RegExp['$2']))*-_0x637fb2;}if(_0x86f8b[_0x2e65b2(0x137)](/<OFFSET X:[ ]([\+\-]\d+)>/i))_0x1afbc9+=Number(RegExp['$1']);if(_0x86f8b[_0x2e65b2(0x137)](/<OFFSET Y:[ ]([\+\-]\d+)>/i))_0x2157e1+=Number(RegExp['$1']);_0x86f8b[_0x2e65b2(0x137)](/<OFFSET:[ ]([\+\-]\d+),[ ]([\+\-]\d+)>/i)&&(_0x1afbc9+=Number(RegExp['$1']),_0x2157e1+=Number(RegExp['$2']));const _0xb65972=new Point(_0x1afbc9,_0x2157e1);return _0x479779[_0x2e65b2(0x2f7)](),_0x479779[_0x2e65b2(0x1c6)][_0x2e65b2(0x40a)](_0xb65972);},Sprite_AnimationMV[_0x2805a3(0x6ac)][_0x2805a3(0x760)]=function(_0x442216){const _0x1dd5ff=_0x2805a3;this[_0x1dd5ff(0x5d6)]=_0x442216;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x6eb)]=Sprite_AnimationMV[_0x2805a3(0x6ac)][_0x2805a3(0x815)],Sprite_AnimationMV[_0x2805a3(0x6ac)][_0x2805a3(0x815)]=function(_0x2a1fa3){const _0x28d266=_0x2805a3;if(this[_0x28d266(0x5d6)]){_0x2a1fa3=JsonEx[_0x28d266(0x631)](_0x2a1fa3);if(_0x2a1fa3['se']){if(_0x28d266(0x564)!=='YwEer'){function _0x9e3a06(){this['_cancelButton']['y']=0x0;}}else _0x2a1fa3['se'][_0x28d266(0x1a8)]=0x0;}}VisuMZ[_0x28d266(0x284)][_0x28d266(0x6eb)][_0x28d266(0x5a2)](this,_0x2a1fa3);},Sprite_Damage[_0x2805a3(0x6ac)]['createDigits']=function(_0x2585f4){const _0xe3a1b7=_0x2805a3;let _0x4a8336=Math[_0xe3a1b7(0x8a)](_0x2585f4)[_0xe3a1b7(0x11a)]();this[_0xe3a1b7(0x7f8)]()&&(_0x4a8336=VisuMZ[_0xe3a1b7(0x53d)](_0x4a8336));const _0x1e50f2=this[_0xe3a1b7(0x614)](),_0x548dd1=Math[_0xe3a1b7(0x4cb)](_0x1e50f2*0.75);for(let _0x35aedd=0x0;_0x35aedd<_0x4a8336[_0xe3a1b7(0x5ab)];_0x35aedd++){if(_0xe3a1b7(0xb2)===_0xe3a1b7(0x1cb)){function _0x26818f(){const _0x39d5f4=_0xe3a1b7;_0x4da49a[_0x39d5f4(0x284)][_0x39d5f4(0x404)][_0x39d5f4(0x5a2)](this),_0x3ba651['isSideButtonLayout']()&&this[_0x39d5f4(0x68f)]();}}else{const _0x4cfedc=this[_0xe3a1b7(0x134)](_0x548dd1,_0x1e50f2);_0x4cfedc[_0xe3a1b7(0x639)][_0xe3a1b7(0x15c)](_0x4a8336[_0x35aedd],0x0,0x0,_0x548dd1,_0x1e50f2,_0xe3a1b7(0x8c)),_0x4cfedc['x']=(_0x35aedd-(_0x4a8336[_0xe3a1b7(0x5ab)]-0x1)/0x2)*_0x548dd1,_0x4cfedc['dy']=-_0x35aedd;}}},Sprite_Damage[_0x2805a3(0x6ac)]['useDigitGrouping']=function(){const _0x1c41ba=_0x2805a3;return VisuMZ['CoreEngine']['Settings']['QoL'][_0x1c41ba(0x79b)];},Sprite_Damage[_0x2805a3(0x6ac)]['valueOutlineColor']=function(){const _0x4bc53c=_0x2805a3;return ColorManager[_0x4bc53c(0x397)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x321)]=Sprite_Gauge[_0x2805a3(0x6ac)]['gaugeRate'],Sprite_Gauge['prototype'][_0x2805a3(0x3fd)]=function(){const _0x1c4daf=_0x2805a3;return VisuMZ[_0x1c4daf(0x284)][_0x1c4daf(0x321)]['call'](this)['clamp'](0x0,0x1);},VisuMZ[_0x2805a3(0x284)]['Sprite_Gauge_currentValue']=Sprite_Gauge[_0x2805a3(0x6ac)][_0x2805a3(0x372)],Sprite_Gauge['prototype']['currentValue']=function(){const _0x4b7646=_0x2805a3;let _0x430e4e=VisuMZ[_0x4b7646(0x284)][_0x4b7646(0x142)]['call'](this);return _0x430e4e;},Sprite_Gauge[_0x2805a3(0x6ac)][_0x2805a3(0x6a9)]=function(){const _0x173e23=_0x2805a3;let _0x2d1319=this[_0x173e23(0x372)]();if(this['useDigitGrouping']()){if(_0x173e23(0x450)!==_0x173e23(0x450)){function _0x241015(){const _0x11335b=_0x173e23;if(!_0x2b7c65[_0x11335b(0x326)]())return;if(!_0x2b104a[_0x11335b(0x510)]())return;if(!_0x4f925e[_0x11335b(0x74e)]())return;_0x278457[_0x11335b(0x5a4)](_0x171d1a,_0x3a637a);const _0x1824f4=_0x11335b(0x229)['format'](_0x31279b[_0x11335b(0x6f7)][_0x11335b(0x393)](0x4)),_0x50415f=_0x1cbf17[_0x11335b(0x284)]['ExtractStrFromTroop'](_0x5c05cf['_troopId']);_0x489c24[_0x11335b(0x284)]['ExportString'](_0x50415f,_0x1824f4,!![]);}}else _0x2d1319=VisuMZ[_0x173e23(0x53d)](_0x2d1319);}const _0x2f82cb=this[_0x173e23(0x731)]()-0x1,_0x16f308=this[_0x173e23(0x35d)]();this[_0x173e23(0x73e)](),this[_0x173e23(0x639)][_0x173e23(0x15c)](_0x2d1319,0x0,0x0,_0x2f82cb,_0x16f308,_0x173e23(0xfb));},Sprite_Gauge['prototype']['valueOutlineWidth']=function(){return 0x3;},Sprite_Gauge[_0x2805a3(0x6ac)][_0x2805a3(0x7f8)]=function(){const _0x27202e=_0x2805a3;return VisuMZ[_0x27202e(0x284)][_0x27202e(0x779)][_0x27202e(0x5f9)][_0x27202e(0x29a)];},Sprite_Gauge[_0x2805a3(0x6ac)][_0x2805a3(0x533)]=function(){const _0x18a64d=_0x2805a3;return ColorManager[_0x18a64d(0x1d1)]();},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x13c)]=Sprite_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x10c)],Sprite_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x10c)]=function(){const _0x3f1e8c=_0x2805a3;this[_0x3f1e8c(0x2e2)][_0x3f1e8c(0x137)](/VisuMZ CoreEngine PictureIcon (\d+)/i)?this[_0x3f1e8c(0x2af)](Number(RegExp['$1'])):VisuMZ[_0x3f1e8c(0x284)][_0x3f1e8c(0x13c)][_0x3f1e8c(0x5a2)](this);},Sprite_Picture['prototype'][_0x2805a3(0x2af)]=function(_0x5062da){const _0x100fef=_0x2805a3,_0x541c7a=ImageManager['iconWidth'],_0x3bcbc2=ImageManager[_0x100fef(0x647)],_0x35452b=this[_0x100fef(0x2e2)][_0x100fef(0x137)](/SMOOTH/i);this[_0x100fef(0x639)]=new Bitmap(_0x541c7a,_0x3bcbc2);const _0x116b0b=ImageManager[_0x100fef(0x32a)](_0x100fef(0x4f0)),_0x3e6ec4=_0x5062da%0x10*_0x541c7a,_0x31a0cd=Math[_0x100fef(0x4cb)](_0x5062da/0x10)*_0x3bcbc2;this[_0x100fef(0x639)][_0x100fef(0x15f)]=_0x35452b,this[_0x100fef(0x639)][_0x100fef(0x4b1)](_0x116b0b,_0x3e6ec4,_0x31a0cd,_0x541c7a,_0x3bcbc2,0x0,0x0,_0x541c7a,_0x3bcbc2);};function Sprite_TitlePictureButton(){const _0xaf1098=_0x2805a3;this[_0xaf1098(0x748)](...arguments);}Sprite_TitlePictureButton[_0x2805a3(0x6ac)]=Object[_0x2805a3(0x2de)](Sprite_Clickable[_0x2805a3(0x6ac)]),Sprite_TitlePictureButton[_0x2805a3(0x6ac)]['constructor']=Sprite_TitlePictureButton,Sprite_TitlePictureButton[_0x2805a3(0x6ac)][_0x2805a3(0x748)]=function(_0xbebec7){const _0x1b1cbe=_0x2805a3;Sprite_Clickable[_0x1b1cbe(0x6ac)][_0x1b1cbe(0x748)]['call'](this),this[_0x1b1cbe(0x695)]=_0xbebec7,this['_clickHandler']=null,this[_0x1b1cbe(0x353)]();},Sprite_TitlePictureButton['prototype'][_0x2805a3(0x353)]=function(){const _0x5c05a5=_0x2805a3;this['x']=Graphics[_0x5c05a5(0x42c)],this['y']=Graphics['height'],this['visible']=![],this[_0x5c05a5(0x2f1)]();},Sprite_TitlePictureButton[_0x2805a3(0x6ac)][_0x2805a3(0x2f1)]=function(){const _0x2c0a7c=_0x2805a3;this['bitmap']=ImageManager[_0x2c0a7c(0x392)](this['_data'][_0x2c0a7c(0x792)]),this[_0x2c0a7c(0x639)]['addLoadListener'](this[_0x2c0a7c(0x2df)][_0x2c0a7c(0x472)](this));},Sprite_TitlePictureButton['prototype'][_0x2805a3(0x2df)]=function(){const _0x559649=_0x2805a3;this[_0x559649(0x695)][_0x559649(0x58b)][_0x559649(0x5a2)](this),this[_0x559649(0x695)][_0x559649(0xd5)][_0x559649(0x5a2)](this),this['setClickHandler'](this['_data'][_0x559649(0x486)]['bind'](this));},Sprite_TitlePictureButton[_0x2805a3(0x6ac)][_0x2805a3(0x1d5)]=function(){const _0x415a58=_0x2805a3;Sprite_Clickable['prototype'][_0x415a58(0x1d5)][_0x415a58(0x5a2)](this),this[_0x415a58(0x3d7)](),this[_0x415a58(0x8d)]();},Sprite_TitlePictureButton[_0x2805a3(0x6ac)][_0x2805a3(0x422)]=function(){const _0x18cb30=_0x2805a3;return VisuMZ[_0x18cb30(0x284)]['Settings']['MenuLayout'][_0x18cb30(0x3e6)]['ButtonFadeSpeed'];},Sprite_TitlePictureButton[_0x2805a3(0x6ac)][_0x2805a3(0x3d7)]=function(){const _0x5890cf=_0x2805a3;this[_0x5890cf(0x6ea)]||this[_0x5890cf(0x499)]?this[_0x5890cf(0x747)]=0xff:(this[_0x5890cf(0x747)]+=this[_0x5890cf(0x389)]?this[_0x5890cf(0x422)]():-0x1*this[_0x5890cf(0x422)](),this['opacity']=Math[_0x5890cf(0x24e)](0xc0,this['opacity']));},Sprite_TitlePictureButton[_0x2805a3(0x6ac)][_0x2805a3(0x18d)]=function(_0x14aa88){const _0x1d8a83=_0x2805a3;this[_0x1d8a83(0x270)]=_0x14aa88;},Sprite_TitlePictureButton[_0x2805a3(0x6ac)][_0x2805a3(0x7ec)]=function(){const _0x756cd8=_0x2805a3;this[_0x756cd8(0x270)]&&this['_clickHandler']();},VisuMZ[_0x2805a3(0x284)]['Spriteset_Base_initialize']=Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x748)],Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x748)]=function(){const _0x2f87f1=_0x2805a3;VisuMZ[_0x2f87f1(0x284)]['Spriteset_Base_initialize'][_0x2f87f1(0x5a2)](this),this[_0x2f87f1(0x3f5)]();},Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x3f5)]=function(){const _0x428129=_0x2805a3;this[_0x428129(0x667)]=[],this['_cacheScaleX']=this[_0x428129(0x739)]['x'],this[_0x428129(0x69e)]=this['scale']['y'];},VisuMZ[_0x2805a3(0x284)]['Spriteset_Base_destroy']=Spriteset_Base[_0x2805a3(0x6ac)]['destroy'],Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x1c9)]=function(_0x2ae02a){const _0x49e0bf=_0x2805a3;this['removeAllFauxAnimations'](),VisuMZ[_0x49e0bf(0x284)][_0x49e0bf(0x283)]['call'](this,_0x2ae02a);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x7fb)]=Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x1d5)],Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x1d5)]=function(){const _0x34a8a5=_0x2805a3;VisuMZ[_0x34a8a5(0x284)]['Spriteset_Base_update'][_0x34a8a5(0x5a2)](this),this[_0x34a8a5(0x39b)](),this[_0x34a8a5(0x71b)]();},Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x39b)]=function(){const _0x419df3=_0x2805a3;if(!VisuMZ[_0x419df3(0x284)][_0x419df3(0x779)][_0x419df3(0x5f9)][_0x419df3(0x76f)])return;if(this[_0x419df3(0x20d)]===this['scale']['x']&&this['_cacheScaleY']===this[_0x419df3(0x739)]['y'])return;this[_0x419df3(0x11e)](),this[_0x419df3(0x20d)]=this[_0x419df3(0x739)]['x'],this[_0x419df3(0x69e)]=this[_0x419df3(0x739)]['y'];},Spriteset_Base['prototype'][_0x2805a3(0x11e)]=function(){const _0x5cf631=_0x2805a3;this['scale']['x']!==0x0&&(this['_pictureContainer'][_0x5cf631(0x739)]['x']=0x1/this['scale']['x'],this[_0x5cf631(0x138)]['x']=-(this['x']/this['scale']['x'])),this['scale']['y']!==0x0&&(this[_0x5cf631(0x138)][_0x5cf631(0x739)]['y']=0x1/this[_0x5cf631(0x739)]['y'],this[_0x5cf631(0x138)]['y']=-(this['y']/this[_0x5cf631(0x739)]['y']));},Spriteset_Base['prototype'][_0x2805a3(0x71b)]=function(){const _0x2dbb56=_0x2805a3;for(const _0x34758e of this[_0x2dbb56(0x667)]){if(!_0x34758e[_0x2dbb56(0x42f)]()){if(_0x2dbb56(0x33e)!==_0x2dbb56(0x4b4))this[_0x2dbb56(0x171)](_0x34758e);else{function _0x51b399(){const _0x1a1e26=_0x2dbb56;this[_0x1a1e26(0x6b8)][_0x1a1e26(0x7ce)](_0x6b3644[_0x1a1e26(0x266)][_0x1a1e26(0x602)]);}}}}this[_0x2dbb56(0x7ab)]();},Spriteset_Base[_0x2805a3(0x6ac)]['processFauxAnimationRequests']=function(){const _0x3e922e=_0x2805a3;for(;;){const _0x253f0b=$gameTemp[_0x3e922e(0x68a)]();if(_0x253f0b){if('iySEw'!==_0x3e922e(0x459)){function _0x5f0549(){const _0x532316=_0x3e922e;_0x13dba5[_0x532316(0x284)][_0x532316(0x26d)][_0x532316(0x5a2)](this),this[_0x532316(0x736)]();}}else this[_0x3e922e(0x64b)](_0x253f0b);}else{if(_0x3e922e(0x6a3)===_0x3e922e(0x488)){function _0x593800(){return 7.5625*_0x583d33*_0x42f2da;}}else break;}}},Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x64b)]=function(_0x105410){const _0x1dafaa=_0x2805a3,_0x91e814=$dataAnimations[_0x105410[_0x1dafaa(0x6dd)]],_0x2b113c=_0x105410[_0x1dafaa(0x19b)],_0x4ba249=_0x105410['mirror'],_0xf7ee2=_0x105410['mute'];let _0x4db935=this[_0x1dafaa(0x4e9)]();const _0x40f9a3=this['animationNextDelay']();if(this[_0x1dafaa(0x119)](_0x91e814))for(const _0x1c18b7 of _0x2b113c){this[_0x1dafaa(0x7a7)]([_0x1c18b7],_0x91e814,_0x4ba249,_0x4db935,_0xf7ee2),_0x4db935+=_0x40f9a3;}else{if('LtjvC'===_0x1dafaa(0x145)){function _0x46f3e9(){const _0x306092=_0x1dafaa;_0x106c8e+=this[_0x306092(0x1e1)][_0x589d7c]['parameters'][0x0]+'\x0a',_0x33aa75++;}}else this[_0x1dafaa(0x7a7)](_0x2b113c,_0x91e814,_0x4ba249,_0x4db935,_0xf7ee2);}},Spriteset_Base[_0x2805a3(0x6ac)]['createFauxAnimationSprite']=function(_0x510c53,_0x45d360,_0x279c4e,_0x13f099,_0x3455ec){const _0x10b918=_0x2805a3,_0x2d11e9=this[_0x10b918(0x1e3)](_0x45d360),_0x436a87=new(_0x2d11e9?Sprite_AnimationMV:Sprite_Animation)(),_0xc5cbaf=this[_0x10b918(0x360)](_0x510c53);this[_0x10b918(0x100)](_0x510c53[0x0])&&(_0x279c4e=!_0x279c4e),_0x436a87[_0x10b918(0x652)]=_0x510c53,_0x436a87[_0x10b918(0x353)](_0xc5cbaf,_0x45d360,_0x279c4e,_0x13f099),_0x436a87['setMute'](_0x3455ec),this[_0x10b918(0x401)][_0x10b918(0x579)](_0x436a87),this[_0x10b918(0x667)]['push'](_0x436a87);},Spriteset_Base[_0x2805a3(0x6ac)]['removeFauxAnimation']=function(_0x305fe5){const _0x4c9e43=_0x2805a3;this['_fauxAnimationSprites']['remove'](_0x305fe5),this[_0x4c9e43(0x401)][_0x4c9e43(0x6e5)](_0x305fe5);for(const _0x4a844e of _0x305fe5[_0x4c9e43(0x652)]){_0x4a844e[_0x4c9e43(0x498)]&&_0x4a844e[_0x4c9e43(0x498)]();}_0x305fe5['destroy']();},Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x48b)]=function(){const _0x279ba4=_0x2805a3;for(const _0x58f7b2 of this['_fauxAnimationSprites']){if(_0x279ba4(0x437)===_0x279ba4(0x6e8)){function _0x2385ce(){const _0x1a1b9f=_0x279ba4;if(this['_muteSound'])return;_0x204d81[_0x1a1b9f(0x284)][_0x1a1b9f(0x4be)][_0x1a1b9f(0x5a2)](this);}}else this['removeFauxAnimation'](_0x58f7b2);}},Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x768)]=function(){const _0x13f2b8=_0x2805a3;return this[_0x13f2b8(0x667)][_0x13f2b8(0x5ab)]>0x0;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x26d)]=Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x2d3)],Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x2d3)]=function(){const _0xff7829=_0x2805a3;VisuMZ[_0xff7829(0x284)][_0xff7829(0x26d)]['call'](this),this['updatePositionCoreEngine']();},Spriteset_Base['prototype'][_0x2805a3(0x736)]=function(){const _0xc746b0=_0x2805a3;if(!$gameScreen)return;if($gameScreen['_shakeDuration']<=0x0)return;this['x']-=Math[_0xc746b0(0x72b)]($gameScreen[_0xc746b0(0x3db)]());const _0x324a58=$gameScreen[_0xc746b0(0x64f)]();switch($gameScreen[_0xc746b0(0x64f)]()){case _0xc746b0(0x7a3):this[_0xc746b0(0x493)]();break;case _0xc746b0(0x56a):this[_0xc746b0(0x3f4)]();break;case _0xc746b0(0x23b):this[_0xc746b0(0x603)]();break;default:this[_0xc746b0(0x48a)]();break;}},Spriteset_Base[_0x2805a3(0x6ac)]['updatePositionCoreEngineShakeOriginal']=function(){const _0x474821=_0x2805a3,_0x30c665=VisuMZ[_0x474821(0x284)][_0x474821(0x779)][_0x474821(0x74a)];if(_0x30c665&&_0x30c665[_0x474821(0x400)]){if(_0x474821(0x26a)!==_0x474821(0x26a)){function _0x11a5a(){const _0x163a4f=_0x474821;return this[_0x163a4f(0x7e0)]()?this[_0x163a4f(0x7eb)]():_0x4efada[_0x163a4f(0x284)]['Game_Picture_x'][_0x163a4f(0x5a2)](this);}}else return _0x30c665[_0x474821(0x400)][_0x474821(0x5a2)](this);}this['x']+=Math[_0x474821(0x72b)]($gameScreen['shake']());},Spriteset_Base[_0x2805a3(0x6ac)][_0x2805a3(0x48a)]=function(){const _0x58bce1=_0x2805a3,_0x1b8c3c=VisuMZ['CoreEngine'][_0x58bce1(0x779)]['ScreenShake'];if(_0x1b8c3c&&_0x1b8c3c[_0x58bce1(0x299)])return _0x1b8c3c[_0x58bce1(0x299)][_0x58bce1(0x5a2)](this);const _0x441e3e=$gameScreen[_0x58bce1(0x5b4)]*0.75,_0x42176b=$gameScreen[_0x58bce1(0x1f8)]*0.6,_0x44a79c=$gameScreen[_0x58bce1(0x413)];this['x']+=Math[_0x58bce1(0x72b)](Math[_0x58bce1(0x1ae)](_0x441e3e)-Math['randomInt'](_0x42176b))*(Math[_0x58bce1(0x24e)](_0x44a79c,0x1e)*0.5),this['y']+=Math[_0x58bce1(0x72b)](Math['randomInt'](_0x441e3e)-Math[_0x58bce1(0x1ae)](_0x42176b))*(Math[_0x58bce1(0x24e)](_0x44a79c,0x1e)*0.5);},Spriteset_Base[_0x2805a3(0x6ac)]['updatePositionCoreEngineShakeHorz']=function(){const _0x4dd3e0=_0x2805a3,_0x4087bc=VisuMZ['CoreEngine'][_0x4dd3e0(0x779)][_0x4dd3e0(0x74a)];if(_0x4087bc&&_0x4087bc[_0x4dd3e0(0x5f4)]){if('pbUup'!==_0x4dd3e0(0x6ab))return _0x4087bc[_0x4dd3e0(0x5f4)][_0x4dd3e0(0x5a2)](this);else{function _0x796853(){const _0x528bdf=_0x4dd3e0;_0x36a1bc['CoreEngine'][_0x528bdf(0x26c)][_0x528bdf(0x5a2)](this),_0x3dc2c6[_0x528bdf(0x11d)]();}}}const _0x590745=$gameScreen['_shakePower']*0.75,_0x5ae152=$gameScreen[_0x4dd3e0(0x1f8)]*0.6,_0x1e6639=$gameScreen[_0x4dd3e0(0x413)];this['x']+=Math[_0x4dd3e0(0x72b)](Math[_0x4dd3e0(0x1ae)](_0x590745)-Math['randomInt'](_0x5ae152))*(Math[_0x4dd3e0(0x24e)](_0x1e6639,0x1e)*0.5);},Spriteset_Base['prototype'][_0x2805a3(0x603)]=function(){const _0x2bfbe5=_0x2805a3,_0x50dfdf=VisuMZ[_0x2bfbe5(0x284)][_0x2bfbe5(0x779)][_0x2bfbe5(0x74a)];if(_0x50dfdf&&_0x50dfdf[_0x2bfbe5(0x5d8)])return _0x50dfdf[_0x2bfbe5(0x5d8)][_0x2bfbe5(0x5a2)](this);const _0x47d52c=$gameScreen[_0x2bfbe5(0x5b4)]*0.75,_0x17a6d2=$gameScreen[_0x2bfbe5(0x1f8)]*0.6,_0x4ef367=$gameScreen[_0x2bfbe5(0x413)];this['y']+=Math['round'](Math['randomInt'](_0x47d52c)-Math[_0x2bfbe5(0x1ae)](_0x17a6d2))*(Math[_0x2bfbe5(0x24e)](_0x4ef367,0x1e)*0.5);},Spriteset_Battle[_0x2805a3(0x6ac)][_0x2805a3(0x32c)]=function(){const _0x5f17e6=_0x2805a3;this[_0x5f17e6(0x5e7)]=new PIXI[(_0x5f17e6(0x240))][(_0x5f17e6(0x46e))](clamp=!![]),this[_0x5f17e6(0x49a)]=new Sprite(),this['_backgroundSprite'][_0x5f17e6(0x639)]=SceneManager['backgroundBitmap'](),this[_0x5f17e6(0x49a)][_0x5f17e6(0x240)]=[this[_0x5f17e6(0x5e7)]],this[_0x5f17e6(0x45f)][_0x5f17e6(0x579)](this[_0x5f17e6(0x49a)]);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x36f)]=Spriteset_Battle[_0x2805a3(0x6ac)][_0x2805a3(0x73a)],Spriteset_Battle['prototype'][_0x2805a3(0x73a)]=function(){const _0x96075f=_0x2805a3;VisuMZ[_0x96075f(0x284)][_0x96075f(0x779)]['UI'][_0x96075f(0x608)]&&this['repositionEnemiesByResolution'](),VisuMZ[_0x96075f(0x284)][_0x96075f(0x36f)]['call'](this);},Spriteset_Battle[_0x2805a3(0x6ac)][_0x2805a3(0x2b1)]=function(){const _0x2e82be=_0x2805a3;for(member of $gameTroop['members']()){if('uFDPm'!==_0x2e82be(0x43d)){function _0x31ab9f(){const _0x4f96df=_0x2e82be;return _0x4fa011[_0x4f96df(0x3a1)](_0x4f96df(0x713));}}else member['moveRelativeToResolutionChange']();}},VisuMZ[_0x2805a3(0x284)]['Window_Base_initialize']=Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x748)],Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x748)]=function(_0x4302cc){const _0x10a41f=_0x2805a3;_0x4302cc['x']=Math[_0x10a41f(0x72b)](_0x4302cc['x']),_0x4302cc['y']=Math[_0x10a41f(0x72b)](_0x4302cc['y']),_0x4302cc[_0x10a41f(0x42c)]=Math[_0x10a41f(0x72b)](_0x4302cc[_0x10a41f(0x42c)]),_0x4302cc[_0x10a41f(0x80a)]=Math[_0x10a41f(0x72b)](_0x4302cc[_0x10a41f(0x80a)]),this[_0x10a41f(0x646)](),VisuMZ['CoreEngine'][_0x10a41f(0x3ab)][_0x10a41f(0x5a2)](this,_0x4302cc),this[_0x10a41f(0x4cf)]();},Window_Base['prototype'][_0x2805a3(0x646)]=function(){const _0x13ded9=_0x2805a3;this[_0x13ded9(0x6ff)]=VisuMZ[_0x13ded9(0x284)][_0x13ded9(0x779)]['QoL'][_0x13ded9(0x53f)],this['_digitGroupingEx']=VisuMZ[_0x13ded9(0x284)][_0x13ded9(0x779)]['QoL'][_0x13ded9(0x125)];},Window_Base['prototype']['lineHeight']=function(){const _0x1c3ddc=_0x2805a3;return VisuMZ[_0x1c3ddc(0x284)][_0x1c3ddc(0x779)][_0x1c3ddc(0x46b)][_0x1c3ddc(0xd2)];},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x2f2)]=function(){const _0x3573a5=_0x2805a3;return VisuMZ[_0x3573a5(0x284)][_0x3573a5(0x779)]['Window'][_0x3573a5(0x70b)];},Window_Base['prototype'][_0x2805a3(0x338)]=function(){const _0x39623f=_0x2805a3;this[_0x39623f(0x260)]=VisuMZ[_0x39623f(0x284)]['Settings'][_0x39623f(0x46b)]['BackOpacity'];},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x6a5)]=function(){const _0x3f655a=_0x2805a3;return VisuMZ[_0x3f655a(0x284)][_0x3f655a(0x779)][_0x3f655a(0x46b)]['TranslucentOpacity'];},Window_Base['prototype'][_0x2805a3(0x7b7)]=function(){const _0x157895=_0x2805a3;return VisuMZ[_0x157895(0x284)][_0x157895(0x779)][_0x157895(0x46b)][_0x157895(0x2a8)];},VisuMZ['CoreEngine'][_0x2805a3(0x3a6)]=Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x1d5)],Window_Base['prototype']['update']=function(){const _0x4ccb86=_0x2805a3;VisuMZ[_0x4ccb86(0x284)][_0x4ccb86(0x3a6)][_0x4ccb86(0x5a2)](this),this[_0x4ccb86(0x6fd)]();},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x540)]=function(){const _0x3b6181=_0x2805a3;if(this[_0x3b6181(0x383)]){if(_0x3b6181(0x1e8)!==_0x3b6181(0x1e8)){function _0x33ea2a(){const _0x72b9d1=_0x3b6181;return _0x1af7f9[_0x72b9d1(0x266)][_0x72b9d1(0x3c4)][_0x72b9d1(0x5a2)](this);}}else this[_0x3b6181(0x176)]+=this[_0x3b6181(0x7b7)](),this[_0x3b6181(0x51b)]()&&(this['_opening']=![]);}},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x234)]=function(){const _0x37ff51=_0x2805a3;this[_0x37ff51(0x79c)]&&(this[_0x37ff51(0x176)]-=this[_0x37ff51(0x7b7)](),this[_0x37ff51(0x5c5)]()&&(this[_0x37ff51(0x79c)]=![]));},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x16a)]=Window_Base['prototype'][_0x2805a3(0x15c)],Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x15c)]=function(_0x3d3cd6,_0x57faf5,_0x2cc180,_0x725bd9,_0x55c505){const _0x45669a=_0x2805a3;if(this[_0x45669a(0x7f8)]())_0x3d3cd6=VisuMZ['GroupDigits'](_0x3d3cd6);VisuMZ[_0x45669a(0x284)][_0x45669a(0x16a)][_0x45669a(0x5a2)](this,_0x3d3cd6,_0x57faf5,_0x2cc180,_0x725bd9,_0x55c505);},Window_Base['prototype'][_0x2805a3(0x7f8)]=function(){return this['_digitGrouping'];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x633)]=Window_Base['prototype'][_0x2805a3(0x80e)],Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x80e)]=function(_0x369b0f,_0x361547,_0x398d54,_0x4431f1){const _0x1f3005=_0x2805a3;var _0x3bbe61=VisuMZ[_0x1f3005(0x284)]['Window_Base_createTextState'][_0x1f3005(0x5a2)](this,_0x369b0f,_0x361547,_0x398d54,_0x4431f1);if(this[_0x1f3005(0x585)]())_0x3bbe61[_0x1f3005(0x91)]=VisuMZ[_0x1f3005(0x53d)](_0x3bbe61[_0x1f3005(0x91)]);return _0x3bbe61;},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x585)]=function(){const _0x3d936b=_0x2805a3;return this[_0x3d936b(0x288)];},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x467)]=function(_0x5f22ba){this['_digitGrouping']=_0x5f22ba;},Window_Base['prototype'][_0x2805a3(0xdf)]=function(_0x413b04){const _0x27a603=_0x2805a3;this[_0x27a603(0x288)]=_0x413b04;},VisuMZ['CoreEngine'][_0x2805a3(0x577)]=Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x430)],Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x430)]=function(_0x5e91a6,_0x2fef71,_0x3cebe2){const _0x2af21c=_0x2805a3;_0x2fef71=Math[_0x2af21c(0x72b)](_0x2fef71),_0x3cebe2=Math[_0x2af21c(0x72b)](_0x3cebe2),VisuMZ[_0x2af21c(0x284)][_0x2af21c(0x577)][_0x2af21c(0x5a2)](this,_0x5e91a6,_0x2fef71,_0x3cebe2);},VisuMZ['CoreEngine'][_0x2805a3(0x194)]=Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x39c)],Window_Base[_0x2805a3(0x6ac)]['drawFace']=function(_0x532a00,_0x3944ec,_0x469ae7,_0x3f083d,_0x2f4b46,_0x13137d){const _0x54e356=_0x2805a3;_0x2f4b46=_0x2f4b46||ImageManager['faceWidth'],_0x13137d=_0x13137d||ImageManager[_0x54e356(0x28e)],_0x469ae7=Math['round'](_0x469ae7),_0x3f083d=Math[_0x54e356(0x72b)](_0x3f083d),_0x2f4b46=Math[_0x54e356(0x72b)](_0x2f4b46),_0x13137d=Math['round'](_0x13137d),VisuMZ['CoreEngine'][_0x54e356(0x194)]['call'](this,_0x532a00,_0x3944ec,_0x469ae7,_0x3f083d,_0x2f4b46,_0x13137d);},VisuMZ[_0x2805a3(0x284)]['Window_Base_drawCharacter']=Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x764)],Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x764)]=function(_0x32e7a6,_0x2a78ae,_0x5f04e2,_0x15efb1){const _0x3c1b4c=_0x2805a3;_0x5f04e2=Math['round'](_0x5f04e2),_0x15efb1=Math[_0x3c1b4c(0x72b)](_0x15efb1),VisuMZ[_0x3c1b4c(0x284)]['Window_Base_drawCharacter'][_0x3c1b4c(0x5a2)](this,_0x32e7a6,_0x2a78ae,_0x5f04e2,_0x15efb1);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x242)]=Window_Selectable['prototype']['itemRect'],Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x32e)]=function(_0x4d8f9b){const _0x11583b=_0x2805a3;let _0xc9dfff=VisuMZ[_0x11583b(0x284)]['Window_Selectable_itemRect'][_0x11583b(0x5a2)](this,_0x4d8f9b);return _0xc9dfff['x']=Math['round'](_0xc9dfff['x']),_0xc9dfff['y']=Math[_0x11583b(0x72b)](_0xc9dfff['y']),_0xc9dfff[_0x11583b(0x42c)]=Math['round'](_0xc9dfff[_0x11583b(0x42c)]),_0xc9dfff[_0x11583b(0x80a)]=Math['round'](_0xc9dfff[_0x11583b(0x80a)]),_0xc9dfff;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x205)]=Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x6db)],Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x6db)]=function(_0x3323cd,_0x53cf6d,_0x2858c5){const _0x20942a=_0x2805a3;_0x53cf6d=Math['round'](_0x53cf6d),_0x2858c5=Math['round'](_0x2858c5),VisuMZ[_0x20942a(0x284)][_0x20942a(0x205)][_0x20942a(0x5a2)](this,_0x3323cd,_0x53cf6d,_0x2858c5);},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x4cf)]=function(){const _0x90c0cd=_0x2805a3;this[_0x90c0cd(0x27e)]={'duration':0x0,'wholeDuration':0x0,'type':_0x90c0cd(0x250),'targetX':this['x'],'targetY':this['y'],'targetScaleX':this[_0x90c0cd(0x739)]['x'],'targetScaleY':this[_0x90c0cd(0x739)]['y'],'targetOpacity':this[_0x90c0cd(0x747)],'targetBackOpacity':this[_0x90c0cd(0x260)],'targetContentsOpacity':this[_0x90c0cd(0xab)]};},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x6fd)]=function(){const _0x1e9f5f=_0x2805a3;if(!this['_coreEasing'])return;if(this[_0x1e9f5f(0x27e)][_0x1e9f5f(0x529)]<=0x0)return;this['x']=this[_0x1e9f5f(0x465)](this['x'],this[_0x1e9f5f(0x27e)][_0x1e9f5f(0x29d)]),this['y']=this[_0x1e9f5f(0x465)](this['y'],this[_0x1e9f5f(0x27e)][_0x1e9f5f(0x3f8)]),this[_0x1e9f5f(0x739)]['x']=this[_0x1e9f5f(0x465)](this[_0x1e9f5f(0x739)]['x'],this[_0x1e9f5f(0x27e)]['targetScaleX']),this[_0x1e9f5f(0x739)]['y']=this[_0x1e9f5f(0x465)](this[_0x1e9f5f(0x739)]['y'],this[_0x1e9f5f(0x27e)][_0x1e9f5f(0x241)]),this[_0x1e9f5f(0x747)]=this[_0x1e9f5f(0x465)](this[_0x1e9f5f(0x747)],this[_0x1e9f5f(0x27e)][_0x1e9f5f(0x4a3)]),this[_0x1e9f5f(0x260)]=this[_0x1e9f5f(0x465)](this['backOpacity'],this[_0x1e9f5f(0x27e)][_0x1e9f5f(0x773)]),this[_0x1e9f5f(0xab)]=this['applyCoreEasing'](this[_0x1e9f5f(0xab)],this[_0x1e9f5f(0x27e)][_0x1e9f5f(0x4a9)]),this['_coreEasing'][_0x1e9f5f(0x529)]--;},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x465)]=function(_0x387cf9,_0x35ce21){const _0x16eff3=_0x2805a3;if(!this[_0x16eff3(0x27e)])return _0x35ce21;const _0xb4a614=this['_coreEasing'][_0x16eff3(0x529)],_0x5b1675=this[_0x16eff3(0x27e)]['wholeDuration'],_0x4de710=this[_0x16eff3(0x636)]((_0x5b1675-_0xb4a614)/_0x5b1675),_0x32a866=this[_0x16eff3(0x636)]((_0x5b1675-_0xb4a614+0x1)/_0x5b1675),_0x32c571=(_0x387cf9-_0x35ce21*_0x4de710)/(0x1-_0x4de710);return _0x32c571+(_0x35ce21-_0x32c571)*_0x32a866;},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x636)]=function(_0x1c526c){const _0xc6deaa=_0x2805a3;if(!this[_0xc6deaa(0x27e)])return _0x1c526c;return VisuMZ['ApplyEasing'](_0x1c526c,this[_0xc6deaa(0x27e)][_0xc6deaa(0x495)]||_0xc6deaa(0x250));},Window_Base[_0x2805a3(0x6ac)]['anchorCoreEasing']=function(_0x2b63c3,_0x4d6991){const _0x316ac6=_0x2805a3;if(!this[_0x316ac6(0x27e)])return;this['x']=this[_0x316ac6(0x27e)][_0x316ac6(0x29d)],this['y']=this[_0x316ac6(0x27e)]['targetY'],this['scale']['x']=this[_0x316ac6(0x27e)]['targetScaleX'],this[_0x316ac6(0x739)]['y']=this[_0x316ac6(0x27e)][_0x316ac6(0x241)],this[_0x316ac6(0x747)]=this[_0x316ac6(0x27e)]['targetOpacity'],this[_0x316ac6(0x260)]=this[_0x316ac6(0x27e)]['targetBackOpacity'],this[_0x316ac6(0xab)]=this[_0x316ac6(0x27e)]['targetContentsOpacity'],this[_0x316ac6(0x1f6)](_0x2b63c3,_0x4d6991,this['x'],this['y'],this[_0x316ac6(0x739)]['x'],this['scale']['y'],this[_0x316ac6(0x747)],this['backOpacity'],this['contentsOpacity']);},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x1f6)]=function(_0x24e1f6,_0x3f472d,_0x2299cd,_0x1078aa,_0x9b52c9,_0x1fd00d,_0x293bcc,_0x17f6e4,_0x46297a){const _0x5103e1=_0x2805a3;this[_0x5103e1(0x27e)]={'duration':_0x24e1f6,'wholeDuration':_0x24e1f6,'type':_0x3f472d,'targetX':_0x2299cd,'targetY':_0x1078aa,'targetScaleX':_0x9b52c9,'targetScaleY':_0x1fd00d,'targetOpacity':_0x293bcc,'targetBackOpacity':_0x17f6e4,'targetContentsOpacity':_0x46297a};},Window_Base[_0x2805a3(0x6ac)]['drawCurrencyValue']=function(_0x2b9d44,_0x329dcf,_0x54d82d,_0x2a69fd,_0x26d490){const _0x4182a0=_0x2805a3;this[_0x4182a0(0x209)](),this[_0x4182a0(0x3ac)]['fontSize']=VisuMZ[_0x4182a0(0x284)]['Settings'][_0x4182a0(0x7b4)][_0x4182a0(0x72c)];const _0x38422d=VisuMZ[_0x4182a0(0x284)][_0x4182a0(0x779)]['Gold'][_0x4182a0(0x741)];if(_0x38422d>0x0&&_0x329dcf===TextManager[_0x4182a0(0x3c7)]){if(_0x4182a0(0x496)==='ZCXTI'){const _0x1f3ab3=_0x2a69fd+(this[_0x4182a0(0x2c1)]()-ImageManager[_0x4182a0(0x647)])/0x2;this[_0x4182a0(0x430)](_0x38422d,_0x54d82d+(_0x26d490-ImageManager[_0x4182a0(0x1ce)]),_0x1f3ab3),_0x26d490-=ImageManager[_0x4182a0(0x1ce)]+0x4;}else{function _0xab8a0b(){const _0x259055=_0x4182a0,_0x3ee038=_0x259055(0x740);this['_colorCache']=this[_0x259055(0x6df)]||{};if(this[_0x259055(0x6df)][_0x3ee038])return this[_0x259055(0x6df)][_0x3ee038];const _0x3027b4=_0x5bbdec[_0x259055(0x284)]['Settings']['Color'][_0x259055(0x55c)];return this[_0x259055(0x434)](_0x3ee038,_0x3027b4);}}}else{if(_0x4182a0(0x786)!=='aeVoi')this['changeTextColor'](ColorManager[_0x4182a0(0x1a7)]()),this['drawText'](_0x329dcf,_0x54d82d,_0x2a69fd,_0x26d490,_0x4182a0(0xfb)),_0x26d490-=this['textWidth'](_0x329dcf)+0x6;else{function _0x5e3385(){const _0x3473f=_0x4182a0,_0x4b501a=_0x3473f(0x757);this[_0x3473f(0x6df)]=this['_colorCache']||{};if(this[_0x3473f(0x6df)][_0x4b501a])return this['_colorCache'][_0x4b501a];const _0x480d36=_0x43a08e[_0x3473f(0x284)][_0x3473f(0x779)][_0x3473f(0x2ee)][_0x3473f(0x10e)];return this[_0x3473f(0x434)](_0x4b501a,_0x480d36);}}}this[_0x4182a0(0x262)]();const _0x19d96d=this[_0x4182a0(0x32d)](this[_0x4182a0(0x6ff)]?VisuMZ['GroupDigits'](_0x2b9d44):_0x2b9d44);_0x19d96d>_0x26d490?this[_0x4182a0(0x15c)](VisuMZ['CoreEngine']['Settings'][_0x4182a0(0x7b4)][_0x4182a0(0x48c)],_0x54d82d,_0x2a69fd,_0x26d490,'right'):this[_0x4182a0(0x15c)](_0x2b9d44,_0x54d82d,_0x2a69fd,_0x26d490,'right'),this[_0x4182a0(0x209)]();},Window_Base['prototype'][_0x2805a3(0x9c)]=function(_0x1ecf1c,_0xff308c,_0x328fd8,_0x3a47af,_0x3a3b17){const _0x4a3757=_0x2805a3,_0x45b499=ImageManager[_0x4a3757(0x32a)](_0x4a3757(0x4f0)),_0x382d04=ImageManager[_0x4a3757(0x1ce)],_0x3d3140=ImageManager[_0x4a3757(0x647)],_0x1d05aa=_0x1ecf1c%0x10*_0x382d04,_0x46eeac=Math[_0x4a3757(0x4cb)](_0x1ecf1c/0x10)*_0x3d3140,_0x4176bc=_0x3a47af,_0x4b8c5b=_0x3a47af;this['contents'][_0x4a3757(0x122)][_0x4a3757(0x3c9)]=_0x3a3b17,this[_0x4a3757(0x3ac)]['blt'](_0x45b499,_0x1d05aa,_0x46eeac,_0x382d04,_0x3d3140,_0xff308c,_0x328fd8,_0x4176bc,_0x4b8c5b),this[_0x4a3757(0x3ac)]['_context'][_0x4a3757(0x3c9)]=!![];},Window_Base['prototype']['drawGauge']=function(_0x361e54,_0x1d4d27,_0x17dad9,_0x2909bb,_0x5c5f5d,_0x58791d){const _0x490fa6=_0x2805a3,_0x5122f7=Math[_0x490fa6(0x4cb)]((_0x17dad9-0x2)*_0x2909bb),_0x592316=Sprite_Gauge[_0x490fa6(0x6ac)][_0x490fa6(0x282)][_0x490fa6(0x5a2)](this),_0x1d1fcf=_0x1d4d27+this[_0x490fa6(0x2c1)]()-_0x592316-0x2;this[_0x490fa6(0x3ac)][_0x490fa6(0x7b9)](_0x361e54,_0x1d1fcf,_0x17dad9,_0x592316,ColorManager[_0x490fa6(0x3ef)]()),this['contents'][_0x490fa6(0x177)](_0x361e54+0x1,_0x1d1fcf+0x1,_0x5122f7,_0x592316-0x2,_0x5c5f5d,_0x58791d);},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x63b)]=function(_0x832525){const _0x2ca5e5=_0x2805a3;let _0xa24ea4=this['index']();const _0x53a414=this[_0x2ca5e5(0x787)](),_0x29a8b8=this['maxCols']();if(this[_0x2ca5e5(0x381)]()&&(_0xa24ea4<_0x53a414||_0x832525&&_0x29a8b8===0x1)){_0xa24ea4+=_0x29a8b8;if(_0xa24ea4>=_0x53a414)_0xa24ea4=_0x53a414-0x1;this[_0x2ca5e5(0x7e8)](_0xa24ea4);}else{if(!this[_0x2ca5e5(0x381)]()){if(_0x2ca5e5(0x335)===_0x2ca5e5(0x53a)){function _0x33fad2(){const _0x517039=_0x2ca5e5;this[_0x517039(0x195)]['setBackgroundType'](_0x510a45[_0x517039(0x266)]['CommandBgType']);}}else(_0xa24ea4<_0x53a414-_0x29a8b8||_0x832525&&_0x29a8b8===0x1)&&this[_0x2ca5e5(0x7e8)]((_0xa24ea4+_0x29a8b8)%_0x53a414);}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0xa1)]=Window_Selectable['prototype']['cursorDown'],Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x63b)]=function(_0x2e3f90){const _0x43a521=_0x2805a3;this[_0x43a521(0x381)]()&&_0x2e3f90&&this[_0x43a521(0xdb)]()===0x1&&this[_0x43a521(0x6c7)]()===this['maxItems']()-0x1?this[_0x43a521(0x7e8)](0x0):VisuMZ['CoreEngine'][_0x43a521(0xa1)][_0x43a521(0x5a2)](this,_0x2e3f90);},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x36c)]=function(_0x1227fb){const _0x191481=_0x2805a3;let _0x57e7f8=Math['max'](0x0,this[_0x191481(0x6c7)]());const _0x2462c6=this['maxItems'](),_0x91c633=this[_0x191481(0xdb)]();if(this['isUseModernControls']()&&_0x57e7f8>0x0||_0x1227fb&&_0x91c633===0x1){_0x57e7f8-=_0x91c633;if(_0x57e7f8<=0x0)_0x57e7f8=0x0;this[_0x191481(0x7e8)](_0x57e7f8);}else{if(!this['isUseModernControls']()){if(_0x57e7f8>=_0x91c633||_0x1227fb&&_0x91c633===0x1){if('sJDBw'!=='npAzn')this[_0x191481(0x7e8)]((_0x57e7f8-_0x91c633+_0x2462c6)%_0x2462c6);else{function _0x391973(){const _0x5c5004=_0x191481,_0x4f0c2a=_0x558324[_0x5c5004(0x27f)](_0x1d860e);_0x35f134?(this[_0x5c5004(0x9c)](_0x4f0c2a,_0x29ca95,_0x10cd14,this[_0x5c5004(0x2ec)]()),_0x1a7e01-=this[_0x5c5004(0x2ec)]()+0x2,_0x5d1c3b+=this[_0x5c5004(0x2ec)]()+0x2):(this[_0x5c5004(0x430)](_0x4f0c2a,_0x3df90a+0x2,_0x9e4683+0x2),_0x29dced-=_0x4d9c0e['iconWidth']+0x4,_0x412762+=_0x57eadd[_0x5c5004(0x1ce)]+0x4);}}}}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x29f)]=Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x36c)],Window_Selectable['prototype'][_0x2805a3(0x36c)]=function(_0x47cddc){const _0x1b3b28=_0x2805a3;if(this[_0x1b3b28(0x381)]()&&_0x47cddc&&this[_0x1b3b28(0xdb)]()===0x1&&this['index']()===0x0)this[_0x1b3b28(0x7e8)](this[_0x1b3b28(0x787)]()-0x1);else{if(_0x1b3b28(0x1fd)!=='rYDhW')VisuMZ[_0x1b3b28(0x284)][_0x1b3b28(0x29f)][_0x1b3b28(0x5a2)](this,_0x47cddc);else{function _0x17482d(){const _0x3cd6c0=_0x1b3b28;return _0x141f65[_0x3cd6c0(0x72b)](_0x1d1e72[_0x3cd6c0(0x284)]['Bitmap_measureTextWidth']['call'](this,_0xd3c5a));}}}},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x381)]=function(){const _0x5e689e=_0x2805a3;return VisuMZ[_0x5e689e(0x284)][_0x5e689e(0x779)][_0x5e689e(0x5f9)][_0x5e689e(0x3cb)];},VisuMZ['CoreEngine'][_0x2805a3(0xbe)]=Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x783)],Window_Selectable['prototype']['processCursorMove']=function(){const _0xea54bc=_0x2805a3;this[_0xea54bc(0x381)]()?(this[_0xea54bc(0x395)](),this[_0xea54bc(0x26e)]()):VisuMZ[_0xea54bc(0x284)][_0xea54bc(0xbe)][_0xea54bc(0x5a2)](this);},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x28b)]=function(){return!![];},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x395)]=function(){const _0x11a7d5=_0x2805a3;if(this[_0x11a7d5(0x4c2)]()){if(_0x11a7d5(0x371)!==_0x11a7d5(0x76d)){const _0x6b068b=this['index']();if(Input[_0x11a7d5(0x67c)]('down')){if(Input[_0x11a7d5(0x8b)](_0x11a7d5(0xfc))&&this[_0x11a7d5(0x28b)]())this[_0x11a7d5(0x328)]();else{if(_0x11a7d5(0x7e7)!==_0x11a7d5(0x2b5))this[_0x11a7d5(0x63b)](Input['isTriggered'](_0x11a7d5(0x273)));else{function _0x4641d1(){const _0x538912=_0x11a7d5;_0x5da4d7['CoreEngine']['Graphics_centerElement'][_0x538912(0x5a2)](this,_0xcc96d5),this[_0x538912(0x313)](_0x1116c6);}}}}if(Input['isRepeated']('up')){if(_0x11a7d5(0x4bd)===_0x11a7d5(0x4bd)){if(Input[_0x11a7d5(0x8b)](_0x11a7d5(0xfc))&&this['allowShiftScrolling']())this[_0x11a7d5(0x75a)]();else{if(_0x11a7d5(0x39a)===_0x11a7d5(0x3c2)){function _0x392413(){_0x47b7aa+=_0x2cb8ca(_0x4a7080);}}else this[_0x11a7d5(0x36c)](Input[_0x11a7d5(0x744)]('up'));}}else{function _0x3d3e67(){_0x726198=_0x1812a6,this['setAction'](_0x5d26df,_0x2e7934);}}}if(Input[_0x11a7d5(0x67c)](_0x11a7d5(0xfb))){if('KlkmP'!==_0x11a7d5(0x5f6))this[_0x11a7d5(0x675)](Input[_0x11a7d5(0x744)](_0x11a7d5(0xfb)));else{function _0x32469e(){const _0x31773e=_0x11a7d5;_0x58ec06=_0xa7622d(_0xf7e3c4||'')[_0x31773e(0x599)]();const _0x288ec0=_0x4e7b6a[_0x31773e(0x284)][_0x31773e(0x779)][_0x31773e(0x303)];if(_0x1f619f===_0x31773e(0x43c))return _0x57e13e[_0x31773e(0x624)][_0x31773e(0x54e)][0x0];if(_0x5e3f78===_0x31773e(0x294))return _0x40e505[_0x31773e(0x624)][_0x31773e(0x54e)][0x1];if(_0xe54ef===_0x31773e(0x753))return _0x16d413['terms'][_0x31773e(0x54e)][0x2];if(_0x5c063c==='DEF')return _0x3db6d2[_0x31773e(0x624)][_0x31773e(0x54e)][0x3];if(_0x4b7b41===_0x31773e(0x198))return _0x2eb1f4[_0x31773e(0x624)][_0x31773e(0x54e)][0x4];if(_0x266bf4==='MDF')return _0x5493ec[_0x31773e(0x624)]['params'][0x5];if(_0x221d90===_0x31773e(0x811))return _0x15f1e3[_0x31773e(0x624)][_0x31773e(0x54e)][0x6];if(_0x35fe3a===_0x31773e(0x7cd))return _0x2b7f85['terms']['params'][0x7];if(_0x270b7===_0x31773e(0x297))return _0x288ec0[_0x31773e(0x148)];if(_0x52ef17===_0x31773e(0x7de))return _0x288ec0[_0x31773e(0x497)];if(_0x5d39f2===_0x31773e(0x29c))return _0x288ec0['XParamVocab2'];if(_0x22eacf===_0x31773e(0x643))return _0x288ec0[_0x31773e(0x1fa)];if(_0xb066e7===_0x31773e(0x2c9))return _0x288ec0[_0x31773e(0x477)];if(_0x7cd1fc===_0x31773e(0x118))return _0x288ec0['XParamVocab5'];if(_0x5d82b2===_0x31773e(0x377))return _0x288ec0[_0x31773e(0x532)];if(_0x1952a2==='HRG')return _0x288ec0[_0x31773e(0xa3)];if(_0x215dd8===_0x31773e(0x12c))return _0x288ec0['XParamVocab8'];if(_0x2f68a2===_0x31773e(0x73d))return _0x288ec0['XParamVocab9'];if(_0x2d7cfc===_0x31773e(0x468))return _0x288ec0[_0x31773e(0x4df)];if(_0x201f5f===_0x31773e(0x61f))return _0x288ec0[_0x31773e(0x466)];if(_0x57c34e===_0x31773e(0x46f))return _0x288ec0[_0x31773e(0x4f1)];if(_0x5bb440===_0x31773e(0x6a7))return _0x288ec0[_0x31773e(0x502)];if(_0x48ea31===_0x31773e(0x44e))return _0x288ec0[_0x31773e(0x1c5)];if(_0x4d5b2c===_0x31773e(0x4af))return _0x288ec0[_0x31773e(0x6f4)];if(_0x142abc==='PDR')return _0x288ec0['SParamVocab6'];if(_0x2be6d6===_0x31773e(0xb4))return _0x288ec0[_0x31773e(0x5a3)];if(_0x5aa7e9==='FDR')return _0x288ec0[_0x31773e(0x475)];if(_0x2a0ee4===_0x31773e(0x514))return _0x288ec0[_0x31773e(0x76e)];if(_0x31334a[_0x31773e(0x284)][_0x31773e(0x4b6)][_0x230269])return _0x4242ef[_0x31773e(0x284)][_0x31773e(0x4b6)][_0x162c22];return'';}}}Input[_0x11a7d5(0x67c)]('left')&&this[_0x11a7d5(0x65b)](Input[_0x11a7d5(0x744)](_0x11a7d5(0x174)));if(!this[_0x11a7d5(0x6b5)](_0x11a7d5(0x4f8))&&Input[_0x11a7d5(0x67c)]('pagedown')){if(_0x11a7d5(0x509)!==_0x11a7d5(0x534))this[_0x11a7d5(0x328)]();else{function _0x67e0b2(){const _0x4f15e6=_0x11a7d5;if(!_0x17571d['isPlaytest']())return;if(!_0x536b71[_0x4f15e6(0x510)]())return;_0x451a3d[_0x4f15e6(0x807)][_0x4f15e6(0x664)]=![],_0x482f4c['CoreEngine']['ExportStrFromAllMaps']();}}}!this[_0x11a7d5(0x6b5)](_0x11a7d5(0x359))&&Input[_0x11a7d5(0x67c)](_0x11a7d5(0x359))&&this[_0x11a7d5(0x75a)](),this[_0x11a7d5(0x6c7)]()!==_0x6b068b&&this[_0x11a7d5(0x5bc)]();}else{function _0x529c54(){const _0x38ccd4=_0x11a7d5;return _0x4630dd[_0x38ccd4(0x284)][_0x38ccd4(0x779)][_0x38ccd4(0x2ee)][_0x38ccd4(0x44d)];}}}},Window_Selectable['prototype'][_0x2805a3(0x26e)]=function(){const _0x1b1d01=_0x2805a3;if(this[_0x1b1d01(0x4c2)]()){if('BkKUi'!==_0x1b1d01(0x7ad)){function _0x282182(){const _0x12c012=_0x1b1d01;this[_0x12c012(0x700)][_0x12c012(0x7ce)](_0x1bcb36[_0x12c012(0x266)]['HelpBgType']);}}else{const _0x54c88f=this[_0x1b1d01(0x6c7)]();Input[_0x1b1d01(0x744)](_0x1b1d01(0x3c1))&&this[_0x1b1d01(0x7e8)](Math['min'](this[_0x1b1d01(0x6c7)](),0x0)),Input[_0x1b1d01(0x744)]('end')&&this[_0x1b1d01(0x7e8)](Math[_0x1b1d01(0x2dd)](this['index'](),this[_0x1b1d01(0x787)]()-0x1)),this[_0x1b1d01(0x6c7)]()!==_0x54c88f&&this['playCursorSound']();}}},VisuMZ['CoreEngine'][_0x2805a3(0x65f)]=Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x8d)],Window_Selectable['prototype'][_0x2805a3(0x8d)]=function(){const _0xb318e9=_0x2805a3;this[_0xb318e9(0x381)]()?this[_0xb318e9(0x63e)]():VisuMZ['CoreEngine'][_0xb318e9(0x65f)][_0xb318e9(0x5a2)](this);},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x63e)]=function(){const _0x25618c=_0x2805a3;VisuMZ[_0x25618c(0x284)][_0x25618c(0x65f)][_0x25618c(0x5a2)](this);},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x4fc)]=function(){const _0x27fbdf=_0x2805a3;return VisuMZ['CoreEngine']['Settings']['Window'][_0x27fbdf(0x95)];},Window_Selectable[_0x2805a3(0x6ac)]['rowSpacing']=function(){const _0x47729a=_0x2805a3;return VisuMZ['CoreEngine'][_0x47729a(0x779)][_0x47729a(0x46b)]['RowSpacing'];},Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x7f6)]=function(){const _0x17c16a=_0x2805a3;return Window_Scrollable[_0x17c16a(0x6ac)][_0x17c16a(0x7f6)][_0x17c16a(0x5a2)](this)+VisuMZ[_0x17c16a(0x284)][_0x17c16a(0x779)][_0x17c16a(0x46b)][_0x17c16a(0x17d)];;},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x350)]=Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x3f2)],Window_Selectable[_0x2805a3(0x6ac)][_0x2805a3(0x3f2)]=function(_0x1258c9){const _0x25d691=_0x2805a3,_0x14a09e=VisuMZ[_0x25d691(0x284)][_0x25d691(0x779)][_0x25d691(0x46b)];if(_0x14a09e[_0x25d691(0x235)]===![])return;if(_0x14a09e[_0x25d691(0x3d2)])_0x14a09e[_0x25d691(0x3d2)][_0x25d691(0x5a2)](this,_0x1258c9);else{if(_0x25d691(0xc2)!==_0x25d691(0x531))VisuMZ[_0x25d691(0x284)][_0x25d691(0x350)][_0x25d691(0x5a2)](this,_0x1258c9);else{function _0x548c80(){const _0x2037df=_0x25d691;_0x48e50a[_0x2037df(0x284)]['Scene_Battle_createSpriteset'][_0x2037df(0x5a2)](this);const _0x3d5ee1=this[_0x2037df(0x72d)][_0x2037df(0x525)];if(_0x3d5ee1)this['addChild'](_0x3d5ee1);}}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x6cf)]=Window_Gold['prototype'][_0x2805a3(0x115)],Window_Gold[_0x2805a3(0x6ac)][_0x2805a3(0x115)]=function(){const _0x2707cc=_0x2805a3;if(this[_0x2707cc(0x678)]()){if('ljEGM'!==_0x2707cc(0x3d6))this[_0x2707cc(0x797)]();else{function _0x4c0655(){const _0x18cf28=_0x2707cc,_0x401137=_0x6fb3b4[_0x18cf28(0xfc)]();_0x401137[_0x18cf28(0x38f)]&&_0x401137[_0x18cf28(0x389)]&&_0x401137[_0x18cf28(0x176)]>0x0&&(_0x42fdfa['stencilFunc'](_0x105905['EQUAL'],0x0,~0x0),_0x123ced[_0x18cf28(0x70a)](_0x1c4cd0[_0x18cf28(0x34f)],_0x2bbeff['KEEP'],_0x5b5217[_0x18cf28(0x34f)]),_0x401137['render'](_0x1d2ea0),_0x49a9d8[_0x18cf28(0x4b8)][_0x18cf28(0x49c)](),_0x5047b0[_0x18cf28(0x3fa)](),_0x6af7d9['stencilFunc'](_0x2656bc[_0x18cf28(0x239)],0x1,~0x0),_0x5907e9[_0x18cf28(0x70a)](_0xc3442['REPLACE'],_0x18abdf[_0x18cf28(0x311)],_0x2bded5[_0x18cf28(0x311)]),_0x489cc8[_0x18cf28(0x55a)](_0x387ba8[_0x18cf28(0x7ee)],_0x5d50a3[_0x18cf28(0x71d)]),_0x1cad97['render'](_0x579538),_0x1e3c3c[_0x18cf28(0x4b8)][_0x18cf28(0x49c)](),_0x39f61c['blendFunc'](_0x233a80[_0x18cf28(0x71d)],_0x3bc009[_0x18cf28(0x274)]));}}}else VisuMZ[_0x2707cc(0x284)][_0x2707cc(0x6cf)][_0x2707cc(0x5a2)](this);},Window_Gold[_0x2805a3(0x6ac)][_0x2805a3(0x678)]=function(){const _0x228309=_0x2805a3;if(TextManager['currencyUnit']!==this[_0x228309(0x3c7)]())return![];return VisuMZ[_0x228309(0x284)]['Settings'][_0x228309(0x7b4)][_0x228309(0x24c)];},Window_Gold[_0x2805a3(0x6ac)][_0x2805a3(0x797)]=function(){const _0x2ddbae=_0x2805a3;this[_0x2ddbae(0x209)](),this[_0x2ddbae(0x3ac)][_0x2ddbae(0x3fa)](),this['contents'][_0x2ddbae(0x614)]=VisuMZ[_0x2ddbae(0x284)][_0x2ddbae(0x779)][_0x2ddbae(0x7b4)][_0x2ddbae(0x72c)];const _0x2501b0=VisuMZ[_0x2ddbae(0x284)][_0x2ddbae(0x779)][_0x2ddbae(0x7b4)]['GoldIcon'],_0x46286c=this[_0x2ddbae(0x47f)](0x0);if(_0x2501b0>0x0){if('LhBoU'===_0x2ddbae(0x24d)){const _0x197c77=_0x46286c['y']+(this['lineHeight']()-ImageManager[_0x2ddbae(0x647)])/0x2;this[_0x2ddbae(0x430)](_0x2501b0,_0x46286c['x'],_0x197c77);const _0x2de2b6=ImageManager[_0x2ddbae(0x1ce)]+0x4;_0x46286c['x']+=_0x2de2b6,_0x46286c[_0x2ddbae(0x42c)]-=_0x2de2b6;}else{function _0x1b7526(){const _0x5167fd=_0x2ddbae;return _0x37bfc3['layoutSettings'][_0x5167fd(0x2ea)][_0x5167fd(0x5a2)](this);}}}this[_0x2ddbae(0x3df)](ColorManager[_0x2ddbae(0x1a7)]()),this[_0x2ddbae(0x15c)](this['currencyUnit'](),_0x46286c['x'],_0x46286c['y'],_0x46286c[_0x2ddbae(0x42c)],_0x2ddbae(0x174));const _0x392ebb=this['textWidth'](this[_0x2ddbae(0x3c7)]())+0x6;;_0x46286c['x']+=_0x392ebb,_0x46286c['width']-=_0x392ebb,this[_0x2ddbae(0x262)]();const _0x453808=this[_0x2ddbae(0x315)](),_0x4af0a9=this[_0x2ddbae(0x32d)](this[_0x2ddbae(0x6ff)]?VisuMZ[_0x2ddbae(0x53d)](this[_0x2ddbae(0x315)]()):this[_0x2ddbae(0x315)]());if(_0x4af0a9>_0x46286c['width'])this['drawText'](VisuMZ[_0x2ddbae(0x284)][_0x2ddbae(0x779)]['Gold']['GoldOverlap'],_0x46286c['x'],_0x46286c['y'],_0x46286c[_0x2ddbae(0x42c)],_0x2ddbae(0xfb));else{if(_0x2ddbae(0x144)!==_0x2ddbae(0x6ad))this[_0x2ddbae(0x15c)](this[_0x2ddbae(0x315)](),_0x46286c['x'],_0x46286c['y'],_0x46286c[_0x2ddbae(0x42c)],_0x2ddbae(0xfb));else{function _0x15d44e(){return'';}}}this[_0x2ddbae(0x209)]();},Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x408)]=function(_0x322b52,_0x16046a,_0x5513c5,_0x2e9601,_0x597d68){const _0x2cfc3f=_0x2805a3;_0x2e9601=String(_0x2e9601||'')[_0x2cfc3f(0x599)]();if(VisuMZ[_0x2cfc3f(0x284)][_0x2cfc3f(0x779)]['Param'][_0x2cfc3f(0x522)]){const _0x320d4f=VisuMZ[_0x2cfc3f(0x27f)](_0x2e9601);_0x597d68?(this[_0x2cfc3f(0x9c)](_0x320d4f,_0x322b52,_0x16046a,this[_0x2cfc3f(0x2ec)]()),_0x5513c5-=this[_0x2cfc3f(0x2ec)]()+0x2,_0x322b52+=this[_0x2cfc3f(0x2ec)]()+0x2):(this['drawIcon'](_0x320d4f,_0x322b52+0x2,_0x16046a+0x2),_0x5513c5-=ImageManager['iconWidth']+0x4,_0x322b52+=ImageManager[_0x2cfc3f(0x1ce)]+0x4);}const _0x5de96d=TextManager['param'](_0x2e9601);this[_0x2cfc3f(0x209)](),this[_0x2cfc3f(0x3df)](ColorManager[_0x2cfc3f(0x1a7)]()),_0x597d68?(this[_0x2cfc3f(0x3ac)][_0x2cfc3f(0x614)]=this[_0x2cfc3f(0x3bb)](),this['contents'][_0x2cfc3f(0x15c)](_0x5de96d,_0x322b52,_0x16046a,_0x5513c5,this['gaugeLineHeight'](),'left')):this[_0x2cfc3f(0x15c)](_0x5de96d,_0x322b52,_0x16046a,_0x5513c5),this[_0x2cfc3f(0x209)]();},Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x3bb)]=function(){return $gameSystem['mainFontSize']()-0x8;},Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x723)]=function(_0x87841f,_0x2778ae,_0x3dd52c,_0x520fed){const _0x2a5f6d=_0x2805a3;_0x520fed=_0x520fed||0xa8,this[_0x2a5f6d(0x262)]();if(VisuMZ[_0x2a5f6d(0x284)][_0x2a5f6d(0x779)]['UI'][_0x2a5f6d(0x763)]){if(_0x2a5f6d(0x223)!=='KAmwX'){function _0x4d9137(){const _0x51aa85=_0x2a5f6d;if(!_0x5ea0ad)return;if(!_0x4ed7d7[_0x51aa85(0x706)]())return;const _0x5368ed=0x80,_0x35dbf7=_0x47b8ec[_0x51aa85(0x188)]();let _0x1057b3=_0x4ad416[_0x51aa85(0x6ae)](),_0x31b386=_0xc1a1c6[_0x51aa85(0x236)]();_0x35dbf7>=0x1&&(_0x1057b3=_0x3ec4ea[_0x51aa85(0x567)](),_0x31b386=_0x76f241['maxLvGaugeColor2']()),this['drawGauge'](_0x345777,_0x1d1ec6,_0x5368ed,_0x35dbf7,_0x1057b3,_0x31b386);}}else this[_0x2a5f6d(0x47b)](_0x87841f['currentClass']()[_0x2a5f6d(0x7c5)],_0x2778ae,_0x3dd52c,_0x520fed);}else{if(_0x2a5f6d(0x513)!==_0x2a5f6d(0x60d)){const _0x3178a6=_0x87841f[_0x2a5f6d(0x751)]()[_0x2a5f6d(0x7c5)]['replace'](/\\I\[(\d+)\]/gi,'');this['drawText'](_0x3178a6,_0x2778ae,_0x3dd52c,_0x520fed);}else{function _0x151fe5(){const _0x271db7=_0x2a5f6d;_0x54067c['CoreEngine'][_0x271db7(0x3d5)][_0x271db7(0x5a2)](this),this[_0x271db7(0x74b)]={'x':0x0,'y':0x0},this['_targetAnchor']={'x':0x0,'y':0x0};}}}},Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x11b)]=function(_0x2a8559,_0x1a7372,_0x49e4a5,_0xcd6309){const _0x3465de=_0x2805a3;_0xcd6309=_0xcd6309||0x10e,this[_0x3465de(0x262)]();if(VisuMZ[_0x3465de(0x284)][_0x3465de(0x779)]['UI'][_0x3465de(0x65e)]){if('tLjvj'===_0x3465de(0x17b)){function _0x55bdb7(){const _0x26e892=_0x3465de;if(_0x22815d===0x8)return![];return _0x5ce7db[_0x26e892(0x284)][_0x26e892(0xda)][_0x26e892(0x5a2)](this,_0x11a357);}}else this[_0x3465de(0x47b)](_0x2a8559['nickname'](),_0x1a7372,_0x49e4a5,_0xcd6309);}else{const _0x50f738=_0x2a8559[_0x3465de(0x7a8)]()[_0x3465de(0x7c6)](/\\I\[(\d+)\]/gi,'');this['drawText'](_0x2a8559[_0x3465de(0x7a8)](),_0x1a7372,_0x49e4a5,_0xcd6309);}},VisuMZ[_0x2805a3(0x284)]['Window_StatusBase_drawActorLevel']=Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x592)],Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x592)]=function(_0xffac8f,_0x4c474f,_0x301100){const _0x46032a=_0x2805a3;if(this['isExpGaugeDrawn']())this['drawActorExpGauge'](_0xffac8f,_0x4c474f,_0x301100);VisuMZ[_0x46032a(0x284)]['Window_StatusBase_drawActorLevel'][_0x46032a(0x5a2)](this,_0xffac8f,_0x4c474f,_0x301100);},Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x51c)]=function(){const _0x3f9086=_0x2805a3;return VisuMZ['CoreEngine'][_0x3f9086(0x779)]['UI'][_0x3f9086(0x6e0)];},Window_StatusBase[_0x2805a3(0x6ac)][_0x2805a3(0x7fd)]=function(_0x265dea,_0x3e1673,_0x145853){const _0x175539=_0x2805a3;if(!_0x265dea)return;if(!_0x265dea[_0x175539(0x706)]())return;const _0x18feed=0x80,_0x305187=_0x265dea[_0x175539(0x188)]();let _0x4a00b6=ColorManager[_0x175539(0x6ae)](),_0x20b5f1=ColorManager[_0x175539(0x236)]();_0x305187>=0x1&&(_0x4a00b6=ColorManager[_0x175539(0x567)](),_0x20b5f1=ColorManager[_0x175539(0x658)]()),this[_0x175539(0x98)](_0x3e1673,_0x145853,_0x18feed,_0x305187,_0x4a00b6,_0x20b5f1);},Window_EquipStatus[_0x2805a3(0x6ac)][_0x2805a3(0x665)]=function(){const _0x55eff8=_0x2805a3;let _0x123d01=0x0;for(const _0x5a7f4a of VisuMZ[_0x55eff8(0x284)]['Settings'][_0x55eff8(0x303)]['DisplayedParams']){const _0x58eebf=this['itemPadding'](),_0x143dcd=this[_0x55eff8(0x258)](_0x123d01);this[_0x55eff8(0x3a5)](_0x58eebf,_0x143dcd,_0x5a7f4a),_0x123d01++;}},Window_EquipStatus[_0x2805a3(0x6ac)][_0x2805a3(0xa0)]=function(_0x546b85,_0x31510f,_0x37992f){const _0xe13bec=_0x2805a3,_0x47d121=this[_0xe13bec(0x4a6)]()-this[_0xe13bec(0x2f2)]()*0x2;this['drawParamText'](_0x546b85,_0x31510f,_0x47d121,_0x37992f,![]);},Window_EquipStatus[_0x2805a3(0x6ac)]['drawCurrentParam']=function(_0x38f54d,_0x43b2d0,_0x425e69){const _0x1e10ac=_0x2805a3,_0x246375=this[_0x1e10ac(0x279)]();this['resetTextColor'](),this['drawText'](this[_0x1e10ac(0x772)][_0x1e10ac(0x2c4)](_0x425e69,!![]),_0x38f54d,_0x43b2d0,_0x246375,_0x1e10ac(0xfb));},Window_EquipStatus[_0x2805a3(0x6ac)]['drawRightArrow']=function(_0x128af9,_0x1f7a5a){const _0x2cd82f=_0x2805a3,_0x30f297=this['rightArrowWidth']();this[_0x2cd82f(0x3df)](ColorManager[_0x2cd82f(0x1a7)]());const _0x5a63ae=VisuMZ['CoreEngine']['Settings']['UI'][_0x2cd82f(0x1cc)];this[_0x2cd82f(0x15c)](_0x5a63ae,_0x128af9,_0x1f7a5a,_0x30f297,'center');},Window_EquipStatus[_0x2805a3(0x6ac)][_0x2805a3(0x545)]=function(_0x5bda3c,_0x3c4992,_0x4e77a6){const _0x2129e4=_0x2805a3,_0x41185e=this[_0x2129e4(0x279)](),_0x515bc9=this[_0x2129e4(0x4c5)][_0x2129e4(0x2c4)](_0x4e77a6),_0x4e3fe7=_0x515bc9-this[_0x2129e4(0x772)]['paramValueByName'](_0x4e77a6);this[_0x2129e4(0x3df)](ColorManager['paramchangeTextColor'](_0x4e3fe7)),this['drawText'](this[_0x2129e4(0x4c5)]['paramValueByName'](_0x4e77a6,!![]),_0x5bda3c,_0x3c4992,_0x41185e,_0x2129e4(0xfb));},VisuMZ[_0x2805a3(0x284)]['Window_EquipItem_isEnabled']=Window_EquipItem['prototype'][_0x2805a3(0x72e)],Window_EquipItem[_0x2805a3(0x6ac)][_0x2805a3(0x72e)]=function(_0x3d1b48){const _0x2ec100=_0x2805a3;return _0x3d1b48&&this[_0x2ec100(0x772)]?this['_actor'][_0x2ec100(0x114)](_0x3d1b48):VisuMZ[_0x2ec100(0x284)][_0x2ec100(0x166)][_0x2ec100(0x5a2)](this,_0x3d1b48);},Window_StatusParams[_0x2805a3(0x6ac)][_0x2805a3(0x787)]=function(){const _0x3d33b5=_0x2805a3;return VisuMZ[_0x3d33b5(0x284)][_0x3d33b5(0x779)][_0x3d33b5(0x303)][_0x3d33b5(0x18a)][_0x3d33b5(0x5ab)];},Window_StatusParams[_0x2805a3(0x6ac)][_0x2805a3(0x3a5)]=function(_0x526adb){const _0x5934d1=_0x2805a3,_0x185dd0=this[_0x5934d1(0x47f)](_0x526adb),_0x3d6b27=VisuMZ[_0x5934d1(0x284)]['Settings'][_0x5934d1(0x303)][_0x5934d1(0x18a)][_0x526adb],_0x4aabee=TextManager[_0x5934d1(0x186)](_0x3d6b27),_0x479756=this[_0x5934d1(0x772)][_0x5934d1(0x2c4)](_0x3d6b27,!![]);this[_0x5934d1(0x408)](_0x185dd0['x'],_0x185dd0['y'],0xa0,_0x3d6b27,![]),this[_0x5934d1(0x262)](),this[_0x5934d1(0x15c)](_0x479756,_0x185dd0['x']+0xa0,_0x185dd0['y'],0x3c,_0x5934d1(0xfb));};if(VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x779)][_0x2805a3(0x613)]['EnableNameInput']){VisuMZ[_0x2805a3(0x284)]['Settings']['KeyboardInput']['QwertyLayout']&&(Window_NameInput[_0x2805a3(0x207)]=['Q','W','E','R','T','Y','U','I','O','P','A','S','D','F','G','H','J','K','L','\x27','`','Z','X','C','V','B','N','M',',','.','q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l',':','~','z','x','c','v','b','n','m','\x22',';','1','2','3','4','5','6','7','8','9','0','!','@','#','$','%','^','&','*','(',')','<','>','[',']','-','_','/','\x20','Page','OK']);;VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x6c2)]=Window_NameInput[_0x2805a3(0x6ac)]['initialize'],Window_NameInput['prototype'][_0x2805a3(0x748)]=function(_0x143c8e){const _0x5c8262=_0x2805a3;this[_0x5c8262(0x25f)]=this[_0x5c8262(0x6cc)](),VisuMZ[_0x5c8262(0x284)]['Window_NameInput_initialize'][_0x5c8262(0x5a2)](this,_0x143c8e);if(this['_mode']===_0x5c8262(0x5d2)){if(_0x5c8262(0x59d)!==_0x5c8262(0x58a))this[_0x5c8262(0x573)](0x0);else{function _0x19c95c(){const _0x30c1ca=_0x5c8262;_0x58ccf3['CoreEngine']['Bitmap_clearRect']['call'](this,_0x500b90,_0x422c50,_0x364fd5,_0xf14e5c),this[_0x30c1ca(0x226)]();}}}else{if(_0x5c8262(0x813)===_0x5c8262(0x813))Input[_0x5c8262(0x3fa)](),this[_0x5c8262(0x62a)]();else{function _0x2034e3(){const _0x3ddd2b=_0x5c8262;if(_0x2eefdc['isPlaytest']())_0x4d696d[_0x3ddd2b(0x77e)](_0x2ff9f5);}}}},Window_NameInput[_0x2805a3(0x6ac)]['defaultInputMode']=function(){const _0x2399f9=_0x2805a3;if(Input[_0x2399f9(0x65a)]())return'default';return VisuMZ['CoreEngine'][_0x2399f9(0x779)][_0x2399f9(0x613)][_0x2399f9(0x50a)]||'keyboard';},VisuMZ['CoreEngine'][_0x2805a3(0x3fb)]=Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x601)],Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x601)]=function(){const _0x2dc9f1=_0x2805a3;if(!this[_0x2dc9f1(0x51b)]())return;if(!this[_0x2dc9f1(0x1fe)])return;if(this['_mode']==='keyboard'&&Input[_0x2dc9f1(0x6f6)]()){if('oPkMx'!=='zFNCG')this['switchModes'](_0x2dc9f1(0x5d2));else{function _0x4326d8(){const _0x1e1d16=_0x2dc9f1;return _0x31f00c[_0x1e1d16(0x284)][_0x1e1d16(0x779)][_0x1e1d16(0x5f9)][_0x1e1d16(0x21a)];}}}else{if(Input[_0x2dc9f1(0x805)]('backspace'))Input[_0x2dc9f1(0x3fa)](),this[_0x2dc9f1(0x4d3)]();else{if(Input[_0x2dc9f1(0x744)](_0x2dc9f1(0x713))){if(_0x2dc9f1(0x41a)===_0x2dc9f1(0x729)){function _0x2b8b71(){const _0x52d98a=_0x2dc9f1;return _0x4cabc&&_0x5aaea4[_0x52d98a(0x807)]?_0x2da620[_0x52d98a(0x807)][_0x52d98a(0x5c2)]():!![];}}else{Input[_0x2dc9f1(0x3fa)]();if(this[_0x2dc9f1(0x25f)]==='keyboard'){if(_0x2dc9f1(0x327)!==_0x2dc9f1(0x2b3))this[_0x2dc9f1(0x35f)]('default');else{function _0x2c47e0(){const _0x49514d=_0x2dc9f1,_0x2a0508=_0x33a4a1[_0x49514d(0x595)]()<=_0x3a6b59;_0x60123['setValue'](_0x3117b7,_0x2a0508);}}}else{if('YsqQY'==='YsqQY')this['switchModes'](_0x2dc9f1(0x57c));else{function _0x4469c5(){const _0x26ae42=_0x2dc9f1;_0x406b92[_0x26ae42(0x326)]()&&(_0x117dc6[_0x26ae42(0x77e)]('Script\x20Call\x20Error'),_0x380ef9[_0x26ae42(0x77e)](_0x44e8d2));}}}}}else{if(this[_0x2dc9f1(0x25f)]===_0x2dc9f1(0x57c)){if(_0x2dc9f1(0x330)!==_0x2dc9f1(0x5ff))this[_0x2dc9f1(0x455)]();else{function _0x448d1e(){const _0x512d59=_0x2dc9f1;return _0x539b48['CoreEngine'][_0x512d59(0x779)]['UI'][_0x512d59(0x6a2)];}}}else{if(Input['isSpecialCode'](_0x2dc9f1(0x1d7)))Input[_0x2dc9f1(0x3fa)](),this[_0x2dc9f1(0x35f)](_0x2dc9f1(0x57c));else{if(_0x2dc9f1(0x5fd)===_0x2dc9f1(0x5fd))VisuMZ[_0x2dc9f1(0x284)][_0x2dc9f1(0x3fb)][_0x2dc9f1(0x5a2)](this);else{function _0x5d12af(){const _0x4bff4a=_0x2dc9f1;return this['getButtonAssistLocation']()==='button'?this[_0x4bff4a(0x208)]():this[_0x4bff4a(0x5c3)]();}}}}}}}},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x479)]=Window_NameInput['prototype'][_0x2805a3(0x8d)],Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x8d)]=function(){const _0x29ebc1=_0x2805a3;if(!this[_0x29ebc1(0x3f0)]())return;if(this[_0x29ebc1(0x25f)]===_0x29ebc1(0x57c)){if(TouchInput[_0x29ebc1(0x744)]()&&this[_0x29ebc1(0xe4)]())this[_0x29ebc1(0x35f)](_0x29ebc1(0x5d2));else{if(TouchInput[_0x29ebc1(0x70c)]()){if(_0x29ebc1(0x72a)!==_0x29ebc1(0x112))this['switchModes'](_0x29ebc1(0x5d2));else{function _0x56f108(){const _0x56dfc0=_0x29ebc1;_0x41deef[_0x56dfc0(0x3da)]=_0x48390e[_0x56dfc0(0x2db)][_0x56dfc0(0x172)];}}}}}else{if(_0x29ebc1(0x4e0)!==_0x29ebc1(0x29e))VisuMZ[_0x29ebc1(0x284)][_0x29ebc1(0x479)][_0x29ebc1(0x5a2)](this);else{function _0x6e70a7(){const _0x4f7010=_0x29ebc1;_0x18eae4[_0x4f7010(0x3d2)][_0x4f7010(0x5a2)](this,_0xe6d911);}}}},Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x455)]=function(){const _0x4dd324=_0x2805a3;if(Input[_0x4dd324(0x805)](_0x4dd324(0x143))){if(_0x4dd324(0x5b9)!==_0x4dd324(0x5b9)){function _0x298c83(){const _0x1c9093=_0x4dd324;_0x54f808[_0x1c9093(0x77e)](_0x1c9093(0x18e)),_0x11d702[_0x1c9093(0x77e)](_0x4ce624);}}else Input[_0x4dd324(0x3fa)](),this[_0x4dd324(0x68e)]();}else{if(Input[_0x4dd324(0x111)]!==undefined){let _0xade7b1=Input['_inputString'],_0x3eb7a8=_0xade7b1[_0x4dd324(0x5ab)];for(let _0x263e81=0x0;_0x263e81<_0x3eb7a8;++_0x263e81){if(_0x4dd324(0x9d)!==_0x4dd324(0x9d)){function _0x2a0d6e(){const _0x50092b=_0x4dd324;this['cursorRight'](_0x2ddf97['isTriggered'](_0x50092b(0xfb)));}}else{if(this['_editWindow'][_0x4dd324(0x352)](_0xade7b1[_0x263e81]))SoundManager[_0x4dd324(0x1ef)]();else{if(_0x4dd324(0x62d)===_0x4dd324(0x62d))SoundManager[_0x4dd324(0x405)]();else{function _0x221b4f(){const _0x2a1889=_0x4dd324;if(_0x41c395[_0x2a1889(0x326)]())_0x357988[_0x2a1889(0x77e)](_0x2ff5f8);}}}}}Input[_0x4dd324(0x3fa)]();}}},Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x35f)]=function(_0x423e78){const _0x4d303e=_0x2805a3;let _0xaf92d9=this[_0x4d303e(0x25f)];this[_0x4d303e(0x25f)]=_0x423e78,_0xaf92d9!==this['_mode']&&(this[_0x4d303e(0x115)](),SoundManager[_0x4d303e(0x1ef)](),this[_0x4d303e(0x25f)]===_0x4d303e(0x5d2)?this[_0x4d303e(0x573)](0x0):this[_0x4d303e(0x573)](-0x1));},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x1dc)]=Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x63b)],Window_NameInput[_0x2805a3(0x6ac)]['cursorDown']=function(_0x1898b2){const _0x47007a=_0x2805a3;if(this[_0x47007a(0x25f)]===_0x47007a(0x57c)&&!Input[_0x47007a(0x6d2)]())return;if(Input[_0x47007a(0x4f7)]())return;VisuMZ[_0x47007a(0x284)][_0x47007a(0x1dc)][_0x47007a(0x5a2)](this,_0x1898b2),this[_0x47007a(0x35f)]('default');},VisuMZ['CoreEngine']['Window_NameInput_cursorUp']=Window_NameInput[_0x2805a3(0x6ac)]['cursorUp'],Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x36c)]=function(_0x2f7fb9){const _0x36be41=_0x2805a3;if(this[_0x36be41(0x25f)]===_0x36be41(0x57c)&&!Input['isArrowPressed']())return;if(Input[_0x36be41(0x4f7)]())return;VisuMZ['CoreEngine']['Window_NameInput_cursorUp'][_0x36be41(0x5a2)](this,_0x2f7fb9),this[_0x36be41(0x35f)](_0x36be41(0x5d2));},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x77b)]=Window_NameInput['prototype'][_0x2805a3(0x675)],Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x675)]=function(_0x3cdb36){const _0x1f7a8d=_0x2805a3;if(this[_0x1f7a8d(0x25f)]==='keyboard'&&!Input[_0x1f7a8d(0x6d2)]())return;if(Input['isNumpadPressed']())return;VisuMZ[_0x1f7a8d(0x284)][_0x1f7a8d(0x77b)][_0x1f7a8d(0x5a2)](this,_0x3cdb36),this[_0x1f7a8d(0x35f)]('default');},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x320)]=Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x65b)],Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x65b)]=function(_0x3beac5){const _0x3d0c2a=_0x2805a3;if(this[_0x3d0c2a(0x25f)]==='keyboard'&&!Input['isArrowPressed']())return;if(Input['isNumpadPressed']())return;VisuMZ[_0x3d0c2a(0x284)][_0x3d0c2a(0x320)]['call'](this,_0x3beac5),this[_0x3d0c2a(0x35f)](_0x3d0c2a(0x5d2));},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x14e)]=Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x328)],Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x328)]=function(){const _0x196d93=_0x2805a3;if(this[_0x196d93(0x25f)]==='keyboard')return;if(Input[_0x196d93(0x4f7)]())return;VisuMZ[_0x196d93(0x284)][_0x196d93(0x14e)][_0x196d93(0x5a2)](this),this['switchModes'](_0x196d93(0x5d2));},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x180)]=Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x75a)],Window_NameInput[_0x2805a3(0x6ac)]['cursorPageup']=function(){const _0x3098ff=_0x2805a3;if(this[_0x3098ff(0x25f)]===_0x3098ff(0x57c))return;if(Input[_0x3098ff(0x4f7)]())return;VisuMZ[_0x3098ff(0x284)][_0x3098ff(0x180)][_0x3098ff(0x5a2)](this),this[_0x3098ff(0x35f)](_0x3098ff(0x5d2));},VisuMZ['CoreEngine']['Window_NameInput_refresh']=Window_NameInput['prototype'][_0x2805a3(0x115)],Window_NameInput[_0x2805a3(0x6ac)][_0x2805a3(0x115)]=function(){const _0x3098ac=_0x2805a3;if(this[_0x3098ac(0x25f)]===_0x3098ac(0x57c)){this['contents'][_0x3098ac(0x3fa)](),this['contentsBack'][_0x3098ac(0x3fa)](),this[_0x3098ac(0x262)]();let _0x4fff3e=VisuMZ[_0x3098ac(0x284)][_0x3098ac(0x779)][_0x3098ac(0x613)][_0x3098ac(0x4c4)][_0x3098ac(0x524)]('\x0a'),_0x2c9024=_0x4fff3e[_0x3098ac(0x5ab)],_0x40051d=(this[_0x3098ac(0x46a)]-_0x2c9024*this[_0x3098ac(0x2c1)]())/0x2;for(let _0x50be8e=0x0;_0x50be8e<_0x2c9024;++_0x50be8e){if(_0x3098ac(0x37e)!==_0x3098ac(0x56b)){let _0x5053e5=_0x4fff3e[_0x50be8e],_0x5de715=this[_0x3098ac(0x72f)](_0x5053e5)['width'],_0x37c3fb=Math[_0x3098ac(0x4cb)]((this[_0x3098ac(0x3ac)][_0x3098ac(0x42c)]-_0x5de715)/0x2);this['drawTextEx'](_0x5053e5,_0x37c3fb,_0x40051d),_0x40051d+=this[_0x3098ac(0x2c1)]();}else{function _0x151701(){const _0x14d07f=_0x3098ac,_0x4a330c=_0x51a6d5[_0x14d07f(0x284)][_0x14d07f(0x779)][_0x14d07f(0x5f9)][_0x14d07f(0x426)]||0x0;if(_0x4a330c>0x0)_0x5dae43[_0x14d07f(0x704)](_0x4a330c);}}}}else VisuMZ[_0x3098ac(0x284)][_0x3098ac(0x4bc)][_0x3098ac(0x5a2)](this);};};VisuMZ['CoreEngine'][_0x2805a3(0x17a)]=Window_ShopSell['prototype'][_0x2805a3(0x72e)],Window_ShopSell[_0x2805a3(0x6ac)][_0x2805a3(0x72e)]=function(_0x5262be){const _0x2a8a7a=_0x2805a3;if(VisuMZ[_0x2a8a7a(0x284)]['Settings'][_0x2a8a7a(0x5f9)][_0x2a8a7a(0x4fe)]&&DataManager[_0x2a8a7a(0x181)](_0x5262be)){if(_0x2a8a7a(0x4f3)==='TvXYF')return![];else{function _0x3ef30c(){_0x574e23=_0x2227fa['concat'](_0x5010dc);}}}else{if(_0x2a8a7a(0x2cb)===_0x2a8a7a(0x507)){function _0x163820(){const _0x5efbf7=_0x2a8a7a;this[_0x5efbf7(0x115)](),_0x18e01e[_0x5efbf7(0x1ef)](),this[_0x5efbf7(0x25f)]===_0x5efbf7(0x5d2)?this[_0x5efbf7(0x573)](0x0):this['select'](-0x1);}}else return VisuMZ[_0x2a8a7a(0x284)]['Window_ShopSell_isEnabled']['call'](this,_0x5262be);}},Window_NumberInput[_0x2805a3(0x6ac)]['isUseModernControls']=function(){return![];};VisuMZ[_0x2805a3(0x284)]['Settings']['KeyboardInput'][_0x2805a3(0x211)]&&(VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x2bd)]=Window_NumberInput[_0x2805a3(0x6ac)][_0x2805a3(0x386)],Window_NumberInput['prototype'][_0x2805a3(0x386)]=function(){const _0x524524=_0x2805a3;VisuMZ[_0x524524(0x284)][_0x524524(0x2bd)][_0x524524(0x5a2)](this),this[_0x524524(0x573)](this[_0x524524(0x1b9)]-0x1);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x40f)]=Window_NumberInput[_0x2805a3(0x6ac)][_0x2805a3(0x609)],Window_NumberInput[_0x2805a3(0x6ac)][_0x2805a3(0x609)]=function(){const _0x1ee97f=_0x2805a3;if(!this[_0x1ee97f(0x3f0)]())return;if(Input[_0x1ee97f(0x4f7)]())this[_0x1ee97f(0x544)]();else{if(Input[_0x1ee97f(0x805)]('backspace'))this[_0x1ee97f(0x727)]();else{if(Input['_inputSpecialKeyCode']===0x2e)this[_0x1ee97f(0x474)]();else{if(Input[_0x1ee97f(0x5ed)]===0x24)this[_0x1ee97f(0xe1)]();else{if(Input['_inputSpecialKeyCode']===0x23)this['processKeyboardEnd']();else{if(_0x1ee97f(0x189)!==_0x1ee97f(0x688))VisuMZ[_0x1ee97f(0x284)][_0x1ee97f(0x40f)][_0x1ee97f(0x5a2)](this),Input[_0x1ee97f(0x3fa)]();else{function _0x1eac3b(){const _0x532a10=_0x1ee97f;return _0x4376a0[_0x532a10(0x284)][_0x532a10(0x779)][_0x532a10(0x2ee)][_0x532a10(0x6ed)];}}}}}}}},Window_NumberInput['prototype'][_0x2805a3(0x783)]=function(){const _0x3d10e8=_0x2805a3;if(!this['isCursorMovable']())return;Input['isNumpadPressed']()?this['processKeyboardDigitChange']():Window_Selectable['prototype']['processCursorMove'][_0x3d10e8(0x5a2)](this);},Window_NumberInput[_0x2805a3(0x6ac)][_0x2805a3(0x26e)]=function(){},Window_NumberInput['prototype'][_0x2805a3(0x544)]=function(){const _0x51a164=_0x2805a3;if(String(this[_0x51a164(0x2aa)])[_0x51a164(0x5ab)]>=this[_0x51a164(0x1b9)])return;this[_0x51a164(0x2aa)]=Number(String(this[_0x51a164(0x2aa)])+Input[_0x51a164(0x111)]);const _0x33eb30='9'['repeat'](this[_0x51a164(0x1b9)]);this[_0x51a164(0x2aa)]=this[_0x51a164(0x2aa)][_0x51a164(0x43a)](0x0,_0x33eb30),Input['clear'](),this[_0x51a164(0x115)](),SoundManager['playCursor'](),this[_0x51a164(0x573)](this[_0x51a164(0x1b9)]-0x1);},Window_NumberInput['prototype'][_0x2805a3(0x727)]=function(){const _0x52ab49=_0x2805a3;this[_0x52ab49(0x2aa)]=Number(String(this['_number'])[_0x52ab49(0x1b4)](0x0,-0x1)),this[_0x52ab49(0x2aa)]=Math['max'](0x0,this[_0x52ab49(0x2aa)]),Input['clear'](),this[_0x52ab49(0x115)](),SoundManager['playCursor'](),this[_0x52ab49(0x573)](this[_0x52ab49(0x1b9)]-0x1);},Window_NumberInput['prototype'][_0x2805a3(0x474)]=function(){const _0x4dd58d=_0x2805a3;this[_0x4dd58d(0x2aa)]=Number(String(this[_0x4dd58d(0x2aa)])[_0x4dd58d(0x456)](0x1)),this[_0x4dd58d(0x2aa)]=Math[_0x4dd58d(0x2dd)](0x0,this[_0x4dd58d(0x2aa)]),Input[_0x4dd58d(0x3fa)](),this['refresh'](),SoundManager[_0x4dd58d(0x196)](),this[_0x4dd58d(0x573)](this['_maxDigits']-0x1);});;Window_TitleCommand[_0x2805a3(0x79f)]=VisuMZ['CoreEngine'][_0x2805a3(0x779)][_0x2805a3(0x6de)],Window_TitleCommand[_0x2805a3(0x6ac)][_0x2805a3(0x45d)]=function(){const _0xccbe4e=_0x2805a3;this[_0xccbe4e(0x7c7)]();},Window_TitleCommand[_0x2805a3(0x6ac)][_0x2805a3(0x7c7)]=function(){const _0x3e9ff4=_0x2805a3;for(const _0x52c33a of Window_TitleCommand[_0x3e9ff4(0x79f)]){if(_0x52c33a[_0x3e9ff4(0x4ad)][_0x3e9ff4(0x5a2)](this)){if(_0x3e9ff4(0x78e)===_0x3e9ff4(0x78e)){const _0x320959=_0x52c33a[_0x3e9ff4(0x37f)];let _0x459f8c=_0x52c33a['TextStr'];if(['',_0x3e9ff4(0x691)][_0x3e9ff4(0x5ea)](_0x459f8c))_0x459f8c=_0x52c33a['TextJS'][_0x3e9ff4(0x5a2)](this);const _0x235c60=_0x52c33a[_0x3e9ff4(0x203)][_0x3e9ff4(0x5a2)](this),_0x28406f=_0x52c33a['ExtJS'][_0x3e9ff4(0x5a2)](this);this[_0x3e9ff4(0x7f3)](_0x459f8c,_0x320959,_0x235c60,_0x28406f),this[_0x3e9ff4(0x47d)](_0x320959,_0x52c33a['CallHandlerJS']['bind'](this,_0x28406f));}else{function _0x13fd18(){const _0x2676e5=_0x3e9ff4;let _0x59e991=_0x194bcb[_0x2676e5(0x72b)](_0x27107e[_0x2676e5(0x42c)]/0x2+0xc0);_0x59e991-=_0x20edc7[_0x2676e5(0x4cb)]((_0x124b87[_0x2676e5(0x42c)]-_0x65a452['boxWidth'])/0x2),_0x59e991+=_0x3142a3*0x20;let _0x46cad5=_0x375a89[_0x2676e5(0x80a)]-0xc8-_0x16d89c[_0x2676e5(0x3d1)]()*0x30;_0x46cad5-=_0x186cac[_0x2676e5(0x4cb)]((_0x4c4220[_0x2676e5(0x80a)]-_0x4e97c1[_0x2676e5(0x7f7)])/0x2),_0x46cad5+=_0xcd64a7*0x30,this['setHome'](_0x59e991,_0x46cad5);}}}}},Window_GameEnd[_0x2805a3(0x79f)]=VisuMZ['CoreEngine'][_0x2805a3(0x779)][_0x2805a3(0x5cd)][_0x2805a3(0x2e3)][_0x2805a3(0x746)],Window_GameEnd[_0x2805a3(0x6ac)][_0x2805a3(0x45d)]=function(){const _0x3ddf1e=_0x2805a3;this[_0x3ddf1e(0x7c7)]();},Window_GameEnd[_0x2805a3(0x6ac)][_0x2805a3(0x7c7)]=function(){const _0x1870b7=_0x2805a3;for(const _0x5aafa8 of Window_GameEnd[_0x1870b7(0x79f)]){if(_0x5aafa8[_0x1870b7(0x4ad)][_0x1870b7(0x5a2)](this)){const _0x5319ef=_0x5aafa8[_0x1870b7(0x37f)];let _0x1adf66=_0x5aafa8[_0x1870b7(0x51a)];if(['',_0x1870b7(0x691)][_0x1870b7(0x5ea)](_0x1adf66))_0x1adf66=_0x5aafa8[_0x1870b7(0x280)][_0x1870b7(0x5a2)](this);const _0x4d8ff9=_0x5aafa8['EnableJS'][_0x1870b7(0x5a2)](this),_0x4a089d=_0x5aafa8[_0x1870b7(0x4db)][_0x1870b7(0x5a2)](this);this[_0x1870b7(0x7f3)](_0x1adf66,_0x5319ef,_0x4d8ff9,_0x4a089d),this[_0x1870b7(0x47d)](_0x5319ef,_0x5aafa8[_0x1870b7(0x486)][_0x1870b7(0x472)](this,_0x4a089d));}}};function _0x5302(_0x50952b,_0x551649){_0x50952b=_0x50952b-0x8a;let _0x5ef903=_0x5ef9[_0x50952b];return _0x5ef903;}function Window_ButtonAssist(){this['initialize'](...arguments);}Window_ButtonAssist[_0x2805a3(0x6ac)]=Object[_0x2805a3(0x2de)](Window_Base[_0x2805a3(0x6ac)]),Window_ButtonAssist['prototype'][_0x2805a3(0x77a)]=Window_ButtonAssist,Window_ButtonAssist[_0x2805a3(0x6ac)][_0x2805a3(0x748)]=function(_0x407d2e){const _0x13fd54=_0x2805a3;this['_data']={},Window_Base['prototype'][_0x13fd54(0x748)]['call'](this,_0x407d2e),this[_0x13fd54(0x7ce)](VisuMZ['CoreEngine'][_0x13fd54(0x779)][_0x13fd54(0x682)]['BgType']||0x0),this['refresh']();},Window_ButtonAssist[_0x2805a3(0x6ac)][_0x2805a3(0x5b5)]=function(){const _0x3f8cd9=_0x2805a3;this[_0x3f8cd9(0x3ac)][_0x3f8cd9(0x614)]<=0x60&&(this[_0x3f8cd9(0x3ac)][_0x3f8cd9(0x614)]+=0x6);},Window_ButtonAssist[_0x2805a3(0x6ac)][_0x2805a3(0x2bc)]=function(){const _0x4cff8c=_0x2805a3;if(this[_0x4cff8c(0x3ac)][_0x4cff8c(0x614)]>=0x18){if('DgfQw'!==_0x4cff8c(0x692)){function _0x434bc4(){const _0x1abd4f=_0x4cff8c,_0x37416b=_0x4d8520[_0x1abd4f(0x284)][_0x1abd4f(0x779)][_0x1abd4f(0x613)];if(!_0x37416b)return![];const _0x1c7f79=_0x37416b[_0x1abd4f(0x2d2)];if(!_0x1c7f79)return![];const _0x6659e0=this[_0x1abd4f(0x431)][_0x1abd4f(0x7c5)]()['toLowerCase']();for(const _0x19153e of _0x1c7f79){if(_0x6659e0[_0x1abd4f(0x5ea)](_0x19153e['toLowerCase']()))return!![];}return![];}}else this[_0x4cff8c(0x3ac)]['fontSize']-=0x6;}},Window_ButtonAssist[_0x2805a3(0x6ac)][_0x2805a3(0x1d5)]=function(){const _0x3f783b=_0x2805a3;Window_Base[_0x3f783b(0x6ac)][_0x3f783b(0x1d5)][_0x3f783b(0x5a2)](this),this[_0x3f783b(0x417)]();},Window_ButtonAssist[_0x2805a3(0x6ac)]['updatePadding']=function(){const _0x5f53ae=_0x2805a3;this[_0x5f53ae(0x30b)]=SceneManager[_0x5f53ae(0x807)]['getButtonAssistLocation']()!==_0x5f53ae(0xe8)?0x0:0x8;},Window_ButtonAssist[_0x2805a3(0x6ac)]['updateKeyText']=function(){const _0xe6c5fa=_0x2805a3,_0xc871f2=SceneManager['_scene'];for(let _0x19704c=0x1;_0x19704c<=0x5;_0x19704c++){if('guJCu'==='guJCu'){if(this['_data'][_0xe6c5fa(0x539)['format'](_0x19704c)]!==_0xc871f2['buttonAssistKey%1'[_0xe6c5fa(0x2fb)](_0x19704c)]()){if(_0xe6c5fa(0x578)!==_0xe6c5fa(0x578)){function _0x2044c6(){const _0xb604f3=_0xe6c5fa;_0xf476a7+=_0xb604f3(0x1d8)['format'](_0x2b3f5f[_0xb604f3(0x7d6)][0x0]);}}else return this[_0xe6c5fa(0x115)]();}if(this[_0xe6c5fa(0x695)][_0xe6c5fa(0x6d5)['format'](_0x19704c)]!==_0xc871f2[_0xe6c5fa(0x800)['format'](_0x19704c)]())return this[_0xe6c5fa(0x115)]();}else{function _0x37fd66(){const _0x57cb8b=_0xe6c5fa;_0x176d96=_0x507570[_0x57cb8b(0x284)][_0x57cb8b(0x59c)]['call'](this);}}}},Window_ButtonAssist['prototype']['refresh']=function(){const _0x38d537=_0x2805a3;this[_0x38d537(0x3ac)][_0x38d537(0x3fa)]();for(let _0x4afbfc=0x1;_0x4afbfc<=0x5;_0x4afbfc++){if(_0x38d537(0x1ee)!=='qJgmS')this[_0x38d537(0x3ce)](_0x4afbfc);else{function _0x2bc802(){const _0x373105=_0x38d537;_0x249abd[_0x373105(0x156)](_0x35cdc8);}}}},Window_ButtonAssist['prototype']['drawSegment']=function(_0x123dc2){const _0x2f6e02=_0x2805a3,_0x2992a4=this[_0x2f6e02(0xe0)]/0x5,_0xe6f0e3=SceneManager[_0x2f6e02(0x807)],_0x4b72b1=_0xe6f0e3[_0x2f6e02(0x75c)[_0x2f6e02(0x2fb)](_0x123dc2)](),_0x5dbd3a=_0xe6f0e3['buttonAssistText%1'[_0x2f6e02(0x2fb)](_0x123dc2)]();this[_0x2f6e02(0x695)][_0x2f6e02(0x539)[_0x2f6e02(0x2fb)](_0x123dc2)]=_0x4b72b1,this[_0x2f6e02(0x695)][_0x2f6e02(0x6d5)['format'](_0x123dc2)]=_0x5dbd3a;if(_0x4b72b1==='')return;if(_0x5dbd3a==='')return;const _0x3789e9=_0xe6f0e3[_0x2f6e02(0xce)[_0x2f6e02(0x2fb)](_0x123dc2)](),_0x4d2040=this['itemPadding'](),_0x10545c=_0x2992a4*(_0x123dc2-0x1)+_0x4d2040+_0x3789e9,_0x1d686f=VisuMZ[_0x2f6e02(0x284)][_0x2f6e02(0x779)][_0x2f6e02(0x682)][_0x2f6e02(0x7b0)];this['drawTextEx'](_0x1d686f['format'](_0x4b72b1,_0x5dbd3a),_0x10545c,0x0,_0x2992a4-_0x4d2040*0x2);},VisuMZ[_0x2805a3(0x47e)]=function(_0x4f2b5){const _0x35c7b3=_0x2805a3;if(Utils['isOptionValid'](_0x35c7b3(0x5e9))){if(_0x35c7b3(0x394)===_0x35c7b3(0x394)){var _0x220b6b=require(_0x35c7b3(0x4a0))[_0x35c7b3(0x46b)][_0x35c7b3(0x6bf)]();SceneManager[_0x35c7b3(0x276)]();if(_0x4f2b5)setTimeout(_0x220b6b[_0x35c7b3(0x332)]['bind'](_0x220b6b),0x190);}else{function _0x16f894(){const _0x1fb179=_0x35c7b3;_0x4cf3dc=_0x1faf7f[_0x1fb179(0x72b)](_0x3bf6f0),_0x437135=_0x3a4ecb[_0x1fb179(0x72b)](_0x29c648),_0x3688ac[_0x1fb179(0x284)][_0x1fb179(0x205)][_0x1fb179(0x5a2)](this,_0x169d2c,_0xb4dab0,_0x178fed);}}}},VisuMZ[_0x2805a3(0x3a3)]=function(_0x226a09,_0x2efc19){const _0x36a89d=_0x2805a3;_0x2efc19=_0x2efc19[_0x36a89d(0x599)]();var _0x24922b=1.70158,_0x3165d2=0.7;switch(_0x2efc19){case'LINEAR':return _0x226a09;case _0x36a89d(0x4c0):return-0x1*Math[_0x36a89d(0x75b)](_0x226a09*(Math['PI']/0x2))+0x1;case _0x36a89d(0x304):return Math[_0x36a89d(0xb3)](_0x226a09*(Math['PI']/0x2));case'INOUTSINE':return-0.5*(Math[_0x36a89d(0x75b)](Math['PI']*_0x226a09)-0x1);case _0x36a89d(0x58d):return _0x226a09*_0x226a09;case _0x36a89d(0x20b):return _0x226a09*(0x2-_0x226a09);case _0x36a89d(0x4f4):return _0x226a09<0.5?0x2*_0x226a09*_0x226a09:-0x1+(0x4-0x2*_0x226a09)*_0x226a09;case'INCUBIC':return _0x226a09*_0x226a09*_0x226a09;case'OUTCUBIC':var _0x263e32=_0x226a09-0x1;return _0x263e32*_0x263e32*_0x263e32+0x1;case _0x36a89d(0x4eb):return _0x226a09<0.5?0x4*_0x226a09*_0x226a09*_0x226a09:(_0x226a09-0x1)*(0x2*_0x226a09-0x2)*(0x2*_0x226a09-0x2)+0x1;case'INQUART':return _0x226a09*_0x226a09*_0x226a09*_0x226a09;case'OUTQUART':var _0x263e32=_0x226a09-0x1;return 0x1-_0x263e32*_0x263e32*_0x263e32*_0x263e32;case'INOUTQUART':var _0x263e32=_0x226a09-0x1;return _0x226a09<0.5?0x8*_0x226a09*_0x226a09*_0x226a09*_0x226a09:0x1-0x8*_0x263e32*_0x263e32*_0x263e32*_0x263e32;case _0x36a89d(0x390):return _0x226a09*_0x226a09*_0x226a09*_0x226a09*_0x226a09;case'OUTQUINT':var _0x263e32=_0x226a09-0x1;return 0x1+_0x263e32*_0x263e32*_0x263e32*_0x263e32*_0x263e32;case _0x36a89d(0x380):var _0x263e32=_0x226a09-0x1;return _0x226a09<0.5?0x10*_0x226a09*_0x226a09*_0x226a09*_0x226a09*_0x226a09:0x1+0x10*_0x263e32*_0x263e32*_0x263e32*_0x263e32*_0x263e32;case'INEXPO':if(_0x226a09===0x0){if(_0x36a89d(0x7c9)!==_0x36a89d(0x7c9)){function _0x3289b8(){const _0x4757fa=_0x36a89d;this['_backgroundFilter']=new _0x2a7058[(_0x4757fa(0x240))][(_0x4757fa(0x46e))](_0x23c8bc=!![]),this[_0x4757fa(0x49a)]=new _0x4c1423(),this['_backgroundSprite'][_0x4757fa(0x639)]=_0x432ff1[_0x4757fa(0x22f)](),this[_0x4757fa(0x49a)]['filters']=[this[_0x4757fa(0x5e7)]],this[_0x4757fa(0x45f)][_0x4757fa(0x579)](this[_0x4757fa(0x49a)]);}}else return 0x0;}return Math['pow'](0x2,0xa*(_0x226a09-0x1));case'OUTEXPO':if(_0x226a09===0x1)return 0x1;return-Math[_0x36a89d(0x7e3)](0x2,-0xa*_0x226a09)+0x1;case _0x36a89d(0x429):if(_0x226a09===0x0||_0x226a09===0x1){if(_0x36a89d(0x775)===_0x36a89d(0x775))return _0x226a09;else{function _0x4f0018(){const _0x422df6=_0x36a89d,_0x311666='_stored_mpGaugeColor1';this[_0x422df6(0x6df)]=this[_0x422df6(0x6df)]||{};if(this[_0x422df6(0x6df)][_0x311666])return this[_0x422df6(0x6df)][_0x311666];const _0x54bd8d=_0xbafaea[_0x422df6(0x284)][_0x422df6(0x779)][_0x422df6(0x2ee)][_0x422df6(0x789)];return this[_0x422df6(0x434)](_0x311666,_0x54bd8d);}}}var _0x27d1f2=_0x226a09*0x2,_0x342981=_0x27d1f2-0x1;if(_0x27d1f2<0x1){if(_0x36a89d(0x18b)!==_0x36a89d(0x1bb))return 0.5*Math[_0x36a89d(0x7e3)](0x2,0xa*_0x342981);else{function _0x33454f(){const _0x36ca95=_0x36a89d;_0x2b074e(_0x36ca95(0x341)['format'](_0x11733c,_0x185af0,_0x5366b6)),_0x2c13b5[_0x36ca95(0x780)]();}}}return 0.5*(-Math['pow'](0x2,-0xa*_0x342981)+0x2);case'INCIRC':var _0x27d1f2=_0x226a09/0x1;return-0x1*(Math[_0x36a89d(0x597)](0x1-_0x27d1f2*_0x226a09)-0x1);case _0x36a89d(0x74d):var _0x263e32=_0x226a09-0x1;return Math['sqrt'](0x1-_0x263e32*_0x263e32);case _0x36a89d(0x5f7):var _0x27d1f2=_0x226a09*0x2,_0x342981=_0x27d1f2-0x2;if(_0x27d1f2<0x1){if(_0x36a89d(0x565)!==_0x36a89d(0x549))return-0.5*(Math['sqrt'](0x1-_0x27d1f2*_0x27d1f2)-0x1);else{function _0x3c69f5(){const _0x39933e=_0x36a89d;_0x19c5bd[_0x39933e(0x284)][_0x39933e(0xd9)][_0x39933e(0x5a2)](this,_0x5db7f9),this[_0x39933e(0x4d9)](_0x1842d8);}}}return 0.5*(Math['sqrt'](0x1-_0x342981*_0x342981)+0x1);case'INBACK':return _0x226a09*_0x226a09*((_0x24922b+0x1)*_0x226a09-_0x24922b);case'OUTBACK':var _0x27d1f2=_0x226a09/0x1-0x1;return _0x27d1f2*_0x27d1f2*((_0x24922b+0x1)*_0x27d1f2+_0x24922b)+0x1;break;case _0x36a89d(0x24f):var _0x27d1f2=_0x226a09*0x2,_0x2dae7b=_0x27d1f2-0x2,_0x14e812=_0x24922b*1.525;if(_0x27d1f2<0x1)return 0.5*_0x27d1f2*_0x27d1f2*((_0x14e812+0x1)*_0x27d1f2-_0x14e812);return 0.5*(_0x2dae7b*_0x2dae7b*((_0x14e812+0x1)*_0x2dae7b+_0x14e812)+0x2);case _0x36a89d(0x812):if(_0x226a09===0x0||_0x226a09===0x1)return _0x226a09;var _0x27d1f2=_0x226a09/0x1,_0x342981=_0x27d1f2-0x1,_0x3578f9=0x1-_0x3165d2,_0x14e812=_0x3578f9/(0x2*Math['PI'])*Math[_0x36a89d(0x178)](0x1);return-(Math[_0x36a89d(0x7e3)](0x2,0xa*_0x342981)*Math[_0x36a89d(0xb3)]((_0x342981-_0x14e812)*(0x2*Math['PI'])/_0x3578f9));case'OUTELASTIC':var _0x3578f9=0x1-_0x3165d2,_0x27d1f2=_0x226a09*0x2;if(_0x226a09===0x0||_0x226a09===0x1)return _0x226a09;var _0x14e812=_0x3578f9/(0x2*Math['PI'])*Math[_0x36a89d(0x178)](0x1);return Math['pow'](0x2,-0xa*_0x27d1f2)*Math[_0x36a89d(0xb3)]((_0x27d1f2-_0x14e812)*(0x2*Math['PI'])/_0x3578f9)+0x1;case'INOUTELASTIC':var _0x3578f9=0x1-_0x3165d2;if(_0x226a09===0x0||_0x226a09===0x1)return _0x226a09;var _0x27d1f2=_0x226a09*0x2,_0x342981=_0x27d1f2-0x1,_0x14e812=_0x3578f9/(0x2*Math['PI'])*Math[_0x36a89d(0x178)](0x1);if(_0x27d1f2<0x1){if(_0x36a89d(0x39e)===_0x36a89d(0x39e))return-0.5*(Math[_0x36a89d(0x7e3)](0x2,0xa*_0x342981)*Math[_0x36a89d(0xb3)]((_0x342981-_0x14e812)*(0x2*Math['PI'])/_0x3578f9));else{function _0x235897(){const _0x57d827=_0x36a89d;this[_0x57d827(0x5d1)]=0x0;}}}return Math[_0x36a89d(0x7e3)](0x2,-0xa*_0x342981)*Math[_0x36a89d(0xb3)]((_0x342981-_0x14e812)*(0x2*Math['PI'])/_0x3578f9)*0.5+0x1;case _0x36a89d(0x1e6):var _0x27d1f2=_0x226a09/0x1;if(_0x27d1f2<0x1/2.75){if(_0x36a89d(0x2b9)===_0x36a89d(0x2b9))return 7.5625*_0x27d1f2*_0x27d1f2;else{function _0x5c1f1e(){this['smoothSelect'](0x0);}}}else{if(_0x27d1f2<0x2/2.75){if(_0x36a89d(0x781)!==_0x36a89d(0x781)){function _0x4ca351(){_0x3ffaa4(_0x45d068);}}else{var _0x2dae7b=_0x27d1f2-1.5/2.75;return 7.5625*_0x2dae7b*_0x2dae7b+0.75;}}else{if(_0x27d1f2<2.5/2.75){var _0x2dae7b=_0x27d1f2-2.25/2.75;return 7.5625*_0x2dae7b*_0x2dae7b+0.9375;}else{if(_0x36a89d(0x511)!==_0x36a89d(0x554)){var _0x2dae7b=_0x27d1f2-2.625/2.75;return 7.5625*_0x2dae7b*_0x2dae7b+0.984375;}else{function _0x32446d(){const _0x485d3c=_0x36a89d;_0x42f0cc[_0x485d3c(0xf5)](_0x2e8b19,_0x2ef5d2);}}}}}case _0x36a89d(0x676):var _0x27f97a=0x1-VisuMZ[_0x36a89d(0x3a3)](0x1-_0x226a09,_0x36a89d(0x183));return _0x27f97a;case'INOUTBOUNCE':if(_0x226a09<0.5)var _0x27f97a=VisuMZ['ApplyEasing'](_0x226a09*0x2,_0x36a89d(0x3b8))*0.5;else{if(_0x36a89d(0x3af)!==_0x36a89d(0x3af)){function _0x3ba5f3(){const _0x44be40=_0x36a89d;this[_0x44be40(0x5eb)]['x']=_0x38ed37[_0x44be40(0x30f)]+0x4,this[_0x44be40(0x460)]()?this[_0x44be40(0x5eb)]['y']=_0x1ce4b2[_0x44be40(0x7f7)]-this[_0x44be40(0x7ac)]():this[_0x44be40(0x5eb)]['y']=0x0;}}else var _0x27f97a=VisuMZ[_0x36a89d(0x3a3)](_0x226a09*0x2-0x1,_0x36a89d(0x183))*0.5+0.5;}return _0x27f97a;default:return _0x226a09;}},VisuMZ[_0x2805a3(0x27f)]=function(_0x24d7ea){const _0xe8d57c=_0x2805a3;_0x24d7ea=String(_0x24d7ea)[_0xe8d57c(0x599)]();const _0x42fe93=VisuMZ[_0xe8d57c(0x284)][_0xe8d57c(0x779)][_0xe8d57c(0x303)];if(_0x24d7ea===_0xe8d57c(0x43c))return _0x42fe93[_0xe8d57c(0x569)];if(_0x24d7ea===_0xe8d57c(0x294))return _0x42fe93['IconParam1'];if(_0x24d7ea==='ATK')return _0x42fe93[_0xe8d57c(0x2ff)];if(_0x24d7ea===_0xe8d57c(0x21f))return _0x42fe93[_0xe8d57c(0x1f7)];if(_0x24d7ea===_0xe8d57c(0x198))return _0x42fe93[_0xe8d57c(0x542)];if(_0x24d7ea===_0xe8d57c(0x22c))return _0x42fe93[_0xe8d57c(0x3cd)];if(_0x24d7ea===_0xe8d57c(0x811))return _0x42fe93['IconParam6'];if(_0x24d7ea===_0xe8d57c(0x7cd))return _0x42fe93[_0xe8d57c(0x588)];if(_0x24d7ea===_0xe8d57c(0x297))return _0x42fe93['IconXParam0'];if(_0x24d7ea===_0xe8d57c(0x7de))return _0x42fe93[_0xe8d57c(0x7db)];if(_0x24d7ea===_0xe8d57c(0x29c))return _0x42fe93[_0xe8d57c(0x257)];if(_0x24d7ea===_0xe8d57c(0x643))return _0x42fe93[_0xe8d57c(0xd8)];if(_0x24d7ea===_0xe8d57c(0x2c9))return _0x42fe93[_0xe8d57c(0x35e)];if(_0x24d7ea===_0xe8d57c(0x118))return _0x42fe93[_0xe8d57c(0x2ce)];if(_0x24d7ea===_0xe8d57c(0x377))return _0x42fe93[_0xe8d57c(0x6e3)];if(_0x24d7ea===_0xe8d57c(0x778))return _0x42fe93[_0xe8d57c(0x2c3)];if(_0x24d7ea===_0xe8d57c(0x12c))return _0x42fe93[_0xe8d57c(0x7e2)];if(_0x24d7ea==='TRG')return _0x42fe93[_0xe8d57c(0x346)];if(_0x24d7ea===_0xe8d57c(0x468))return _0x42fe93[_0xe8d57c(0x4e1)];if(_0x24d7ea===_0xe8d57c(0x61f))return _0x42fe93['IconSParam1'];if(_0x24d7ea==='REC')return _0x42fe93[_0xe8d57c(0x62e)];if(_0x24d7ea===_0xe8d57c(0x6a7))return _0x42fe93[_0xe8d57c(0x61d)];if(_0x24d7ea==='MCR')return _0x42fe93['IconSParam4'];if(_0x24d7ea===_0xe8d57c(0x4af))return _0x42fe93[_0xe8d57c(0x669)];if(_0x24d7ea==='PDR')return _0x42fe93[_0xe8d57c(0x369)];if(_0x24d7ea===_0xe8d57c(0xb4))return _0x42fe93[_0xe8d57c(0x4a8)];if(_0x24d7ea===_0xe8d57c(0x487))return _0x42fe93['IconSParam8'];if(_0x24d7ea===_0xe8d57c(0x514))return _0x42fe93[_0xe8d57c(0x605)];if(VisuMZ[_0xe8d57c(0x284)][_0xe8d57c(0x3f7)][_0x24d7ea])return VisuMZ[_0xe8d57c(0x284)][_0xe8d57c(0x3f7)][_0x24d7ea]||0x0;return 0x0;},VisuMZ['ConvertNumberToString']=function(_0x38f484,_0x2e8534,_0x578217){const _0x4c33bd=_0x2805a3;if(_0x578217===undefined&&_0x38f484%0x1===0x0)return _0x38f484;if(_0x578217!==undefined&&['MAXHP',_0x4c33bd(0x294),_0x4c33bd(0x753),'DEF','MAT',_0x4c33bd(0x22c),_0x4c33bd(0x811),_0x4c33bd(0x7cd)][_0x4c33bd(0x5ea)](String(_0x578217)[_0x4c33bd(0x599)]()[_0x4c33bd(0xe2)]()))return _0x38f484;_0x2e8534=_0x2e8534||0x0;if(VisuMZ[_0x4c33bd(0x284)][_0x4c33bd(0x221)][_0x578217]){if(VisuMZ['CoreEngine'][_0x4c33bd(0x9b)][_0x578217]===_0x4c33bd(0x527)){if('hSwjw'!=='MKAvl')return _0x38f484;else{function _0x18e61c(){const _0x1d7268=_0x4c33bd;return _0x4b41da[_0x1d7268(0x4b9)];}}}else return String((_0x38f484*0x64)[_0x4c33bd(0x253)](_0x2e8534))+'%';}return String((_0x38f484*0x64)[_0x4c33bd(0x253)](_0x2e8534))+'%';},VisuMZ[_0x2805a3(0x53d)]=function(_0x26fa1c){const _0x40836f=_0x2805a3;_0x26fa1c=String(_0x26fa1c);if(!_0x26fa1c)return _0x26fa1c;if(typeof _0x26fa1c!==_0x40836f(0x743))return _0x26fa1c;const _0x591628=VisuMZ['CoreEngine']['Settings']['QoL'][_0x40836f(0x3e4)]||_0x40836f(0x561),_0x42c9ad={'maximumFractionDigits':0x6};_0x26fa1c=_0x26fa1c[_0x40836f(0x7c6)](/\[(.*?)\]/g,(_0xad4d0b,_0x2904b0)=>{const _0x4311b5=_0x40836f;return VisuMZ[_0x4311b5(0x325)](_0x2904b0,'[',']');}),_0x26fa1c=_0x26fa1c[_0x40836f(0x7c6)](/<(.*?)>/g,(_0xc6e28b,_0xc8c7ff)=>{const _0x2b1130=_0x40836f;if(_0x2b1130(0x3d0)!==_0x2b1130(0x7f4))return VisuMZ[_0x2b1130(0x325)](_0xc8c7ff,'<','>');else{function _0x3ed039(){const _0x57e7e8=_0x2b1130;return _0x5837b6[_0x57e7e8(0x284)][_0x57e7e8(0x779)][_0x57e7e8(0x46b)]['ItemPadding'];}}}),_0x26fa1c=_0x26fa1c[_0x40836f(0x7c6)](/\{\{(.*?)\}\}/g,(_0x5e25e1,_0x1cb6a2)=>{const _0x5cdf95=_0x40836f;return VisuMZ[_0x5cdf95(0x325)](_0x1cb6a2,'','');}),_0x26fa1c=_0x26fa1c[_0x40836f(0x7c6)](/(\d+\.?\d*)/g,(_0x26b236,_0x45ada9)=>{const _0x447f18=_0x40836f;let _0x3377d6=_0x45ada9;if(_0x3377d6[0x0]==='0')return _0x3377d6;if(_0x3377d6[_0x3377d6['length']-0x1]==='.'){if(_0x447f18(0x2fc)===_0x447f18(0x2fc))return Number(_0x3377d6)[_0x447f18(0x623)](_0x591628,_0x42c9ad)+'.';else{function _0x1a0ca0(){const _0x34af31=_0x447f18;this[_0x34af31(0x35f)](_0x34af31(0x5d2));}}}else return _0x3377d6[_0x3377d6[_0x447f18(0x5ab)]-0x1]===','?Number(_0x3377d6)['toLocaleString'](_0x591628,_0x42c9ad)+',':Number(_0x3377d6)[_0x447f18(0x623)](_0x591628,_0x42c9ad);});let _0x32f535=0x3;while(_0x32f535--){_0x26fa1c=VisuMZ[_0x40836f(0x6f3)](_0x26fa1c);}return _0x26fa1c;},VisuMZ[_0x2805a3(0x325)]=function(_0xbc362,_0x247678,_0x5455ac){const _0x176140=_0x2805a3;return _0xbc362=_0xbc362[_0x176140(0x7c6)](/(\d)/gi,(_0xf44a4e,_0x5472c9)=>_0x176140(0x7bf)['format'](Number(_0x5472c9))),'%2%1%3'[_0x176140(0x2fb)](_0xbc362,_0x247678,_0x5455ac);},VisuMZ[_0x2805a3(0x6f3)]=function(_0x46b972){const _0x5daec5=_0x2805a3;return _0x46b972=_0x46b972[_0x5daec5(0x7c6)](/PRESERVCONVERSION\((\d+)\)/gi,(_0xcc3226,_0x3bbdd4)=>Number(parseInt(_0x3bbdd4))),_0x46b972;},VisuMZ[_0x2805a3(0x21b)]=function(_0x574984){const _0x2fb237=_0x2805a3;SoundManager['playOk']();if(!Utils[_0x2fb237(0x510)]()){if('sLEND'!==_0x2fb237(0x78d)){function _0x84e32c(){const _0x595ea5=_0x2fb237;if(!this[_0x595ea5(0x27e)])return _0x174870;const _0x349ff1=this[_0x595ea5(0x27e)][_0x595ea5(0x529)],_0xa5964f=this[_0x595ea5(0x27e)][_0x595ea5(0x705)],_0x31bf71=this[_0x595ea5(0x636)]((_0xa5964f-_0x349ff1)/_0xa5964f),_0x7b70d3=this[_0x595ea5(0x636)]((_0xa5964f-_0x349ff1+0x1)/_0xa5964f),_0x1e31a6=(_0x39c01a-_0x11dc94*_0x31bf71)/(0x1-_0x31bf71);return _0x1e31a6+(_0x134d15-_0x1e31a6)*_0x7b70d3;}}else{const _0x316b0e=window[_0x2fb237(0x471)](_0x574984,_0x2fb237(0xbb));}}else{const _0x5a538d=process[_0x2fb237(0x537)]==_0x2fb237(0x767)?_0x2fb237(0x471):process[_0x2fb237(0x537)]==_0x2fb237(0xc1)?_0x2fb237(0x386):_0x2fb237(0x518);require(_0x2fb237(0x58f))['exec'](_0x5a538d+'\x20'+_0x574984);}},Game_Picture['prototype'][_0x2805a3(0x6d9)]=function(){const _0x5947c3=_0x2805a3;return this[_0x5947c3(0x74b)];},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x3d5)]=Game_Picture[_0x2805a3(0x6ac)]['initBasic'],Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x717)]=function(){const _0x2cdd1d=_0x2805a3;VisuMZ[_0x2cdd1d(0x284)][_0x2cdd1d(0x3d5)][_0x2cdd1d(0x5a2)](this),this[_0x2cdd1d(0x74b)]={'x':0x0,'y':0x0},this[_0x2cdd1d(0x169)]={'x':0x0,'y':0x0};},VisuMZ['CoreEngine']['Game_Picture_updateMove']=Game_Picture['prototype'][_0x2805a3(0x7bc)],Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x7bc)]=function(){const _0x4c02a1=_0x2805a3;this[_0x4c02a1(0x94)](),VisuMZ[_0x4c02a1(0x284)]['Game_Picture_updateMove'][_0x4c02a1(0x5a2)](this);},VisuMZ['CoreEngine'][_0x2805a3(0x222)]=Game_Picture['prototype'][_0x2805a3(0x140)],Game_Picture['prototype']['show']=function(_0x38d1e0,_0x42e627,_0x22356b,_0x5c828a,_0x32475f,_0x31b861,_0x58280b,_0x3d2c70){const _0xf92654=_0x2805a3;VisuMZ[_0xf92654(0x284)][_0xf92654(0x222)][_0xf92654(0x5a2)](this,_0x38d1e0,_0x42e627,_0x22356b,_0x5c828a,_0x32475f,_0x31b861,_0x58280b,_0x3d2c70),this[_0xf92654(0x78a)]([{'x':0x0,'y':0x0},{'x':0.5,'y':0.5}][_0x42e627]||{'x':0x0,'y':0x0});},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x570)]=Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x501)],Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x501)]=function(_0x407df8,_0x4c35f2,_0x19639b,_0x3087ae,_0x34ac59,_0xd64abf,_0x5aadf2,_0x2c0a1f,_0x33d8ce){const _0x35005f=_0x2805a3;VisuMZ['CoreEngine'][_0x35005f(0x570)][_0x35005f(0x5a2)](this,_0x407df8,_0x4c35f2,_0x19639b,_0x3087ae,_0x34ac59,_0xd64abf,_0x5aadf2,_0x2c0a1f,_0x33d8ce),this[_0x35005f(0x584)]([{'x':0x0,'y':0x0},{'x':0.5,'y':0.5}][_0x407df8]||{'x':0x0,'y':0x0});},Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x94)]=function(){const _0x4133ea=_0x2805a3;if(this[_0x4133ea(0x432)]>0x0){if(_0x4133ea(0xac)!==_0x4133ea(0xac)){function _0x265eb1(){const _0x51326b=_0x4133ea;_0x10bb50[_0x51326b(0x48f)]=![],_0x30f574[_0x51326b(0x7e6)]=!![];}}else this['_anchor']['x']=this[_0x4133ea(0x490)](this[_0x4133ea(0x74b)]['x'],this[_0x4133ea(0x169)]['x']),this[_0x4133ea(0x74b)]['y']=this[_0x4133ea(0x490)](this[_0x4133ea(0x74b)]['y'],this[_0x4133ea(0x169)]['y']);}},Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x78a)]=function(_0xa2a53){const _0x1ef0cf=_0x2805a3;this[_0x1ef0cf(0x74b)]=_0xa2a53,this[_0x1ef0cf(0x169)]=JsonEx[_0x1ef0cf(0x631)](this[_0x1ef0cf(0x74b)]);},Game_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x584)]=function(_0x49d8b9){const _0x41e633=_0x2805a3;this[_0x41e633(0x169)]=_0x49d8b9;},VisuMZ['CoreEngine'][_0x2805a3(0x78f)]=Sprite_Picture[_0x2805a3(0x6ac)][_0x2805a3(0x128)],Sprite_Picture['prototype'][_0x2805a3(0x128)]=function(){const _0x425808=_0x2805a3,_0x330d0c=this[_0x425808(0x6f9)]();if(!_0x330d0c[_0x425808(0x6d9)]()){if(_0x425808(0x5cc)==='UgfMN'){function _0x2e9a6e(){const _0xfb0e0=_0x425808;_0x1c59a2[_0xfb0e0(0x284)][_0xfb0e0(0x779)][_0xfb0e0(0x5f9)][_0xfb0e0(0x804)]&&(_0x38651c[_0xfb0e0(0x680)][_0xfb0e0(0x1c8)]=_0xfb0e0(0x3ee));_0x242da5[_0xfb0e0(0x284)][_0xfb0e0(0x779)][_0xfb0e0(0x5f9)][_0xfb0e0(0x107)]&&(_0x3ed190[_0xfb0e0(0x680)][_0xfb0e0(0x4bf)]='pixelated');const _0x4a6495=_0x1d856e[_0xfb0e0(0x2dd)](0x0,_0x39b756[_0xfb0e0(0x4cb)](_0x3f8cd1[_0xfb0e0(0x42c)]*this['_realScale'])),_0x328ff7=_0x248bfb[_0xfb0e0(0x2dd)](0x0,_0x272906['floor'](_0x8906e7[_0xfb0e0(0x80a)]*this['_realScale']));_0x975c19[_0xfb0e0(0x680)]['width']=_0x4a6495+'px',_0x2a22d7['style'][_0xfb0e0(0x80a)]=_0x328ff7+'px';}}else VisuMZ[_0x425808(0x284)][_0x425808(0x78f)][_0x425808(0x5a2)](this);}else this[_0x425808(0x6d9)]['x']=_0x330d0c[_0x425808(0x6d9)]()['x'],this[_0x425808(0x6d9)]['y']=_0x330d0c[_0x425808(0x6d9)]()['y'];},Game_Action[_0x2805a3(0x6ac)][_0x2805a3(0x4c8)]=function(_0x4e47f6){const _0x2f7b38=_0x2805a3;if(_0x4e47f6){if(_0x2f7b38(0xa2)===_0x2f7b38(0xa2)){const _0x5a6756=_0x4e47f6[_0x2f7b38(0x2ad)];if(_0x5a6756===0x1&&this[_0x2f7b38(0x6e7)]()[_0x2f7b38(0x391)]()!==0x1)this[_0x2f7b38(0x7ed)]();else _0x5a6756===0x2&&this[_0x2f7b38(0x6e7)]()[_0x2f7b38(0x6b6)]()!==0x2?this[_0x2f7b38(0x7d8)]():this[_0x2f7b38(0x7b5)](_0x5a6756);}else{function _0xd02af3(){const _0x51eb82=_0x2f7b38;_0x69c697['CoreEngine'][_0x51eb82(0xcc)][_0x51eb82(0x5a2)](this,_0x513640);}}}else{if('ouLmw'!==_0x2f7b38(0x2e9)){function _0x223862(){const _0x1d826f=_0x2f7b38;this['bitmap']=_0x353722[_0x1d826f(0x392)](this[_0x1d826f(0x695)][_0x1d826f(0x792)]),this[_0x1d826f(0x639)]['addLoadListener'](this[_0x1d826f(0x2df)][_0x1d826f(0x472)](this));}}else this[_0x2f7b38(0x3fa)]();}},Game_Actor[_0x2805a3(0x6ac)]['usableSkills']=function(){const _0x48f471=_0x2805a3;return this[_0x48f471(0x5d5)]()[_0x48f471(0x25c)](_0x420a62=>this['canUse'](_0x420a62)&&this[_0x48f471(0x3be)]()[_0x48f471(0x5ea)](_0x420a62[_0x48f471(0x334)]));},Window_Base[_0x2805a3(0x6ac)][_0x2805a3(0x656)]=function(){const _0xb1613d=_0x2805a3;this[_0xb1613d(0x57b)]=new Sprite(),this[_0xb1613d(0x57b)][_0xb1613d(0x639)]=new Bitmap(0x0,0x0),this[_0xb1613d(0x57b)]['x']=0x0,this[_0xb1613d(0x2b4)](this[_0xb1613d(0x57b)]);},Window_Base['prototype'][_0x2805a3(0x218)]=function(){const _0x1eb507=_0x2805a3;if(this['_dimmerSprite']){const _0x13a57b=this[_0x1eb507(0x57b)][_0x1eb507(0x639)],_0x653ed1=this['width'],_0x4f9fa6=this[_0x1eb507(0x80a)],_0x5daf97=this[_0x1eb507(0x30b)],_0x3e600c=ColorManager[_0x1eb507(0x40c)](),_0x433ecd=ColorManager[_0x1eb507(0x67b)]();_0x13a57b[_0x1eb507(0x60c)](_0x653ed1,_0x4f9fa6),_0x13a57b[_0x1eb507(0x177)](0x0,0x0,_0x653ed1,_0x5daf97,_0x433ecd,_0x3e600c,!![]),_0x13a57b[_0x1eb507(0x7b9)](0x0,_0x5daf97,_0x653ed1,_0x4f9fa6-_0x5daf97*0x2,_0x3e600c),_0x13a57b[_0x1eb507(0x177)](0x0,_0x4f9fa6-_0x5daf97,_0x653ed1,_0x5daf97,_0x3e600c,_0x433ecd,!![]),this['_dimmerSprite']['setFrame'](0x0,0x0,_0x653ed1,_0x4f9fa6);}},Game_Actor[_0x2805a3(0x6ac)][_0x2805a3(0x351)]=function(){const _0x250bcf=_0x2805a3;for(let _0x247472=0x0;_0x247472<this[_0x250bcf(0x7ff)]();_0x247472++){if(_0x250bcf(0x33d)!==_0x250bcf(0x33d)){function _0xaf4b89(){const _0x25848a=_0x250bcf;if(this['_mode']===_0x25848a(0x57c))return;if(_0xcb9ec8[_0x25848a(0x4f7)]())return;_0x25907d[_0x25848a(0x284)][_0x25848a(0x180)][_0x25848a(0x5a2)](this),this[_0x25848a(0x35f)](_0x25848a(0x5d2));}}else{const _0x36c273=this[_0x250bcf(0x77f)]();let _0x15e31c=Number[_0x250bcf(0x4c1)];this[_0x250bcf(0x225)](_0x247472,_0x36c273[0x0]);for(const _0x2d30c1 of _0x36c273){const _0x2bc020=_0x2d30c1[_0x250bcf(0x10a)]();_0x2bc020>_0x15e31c&&(_0x15e31c=_0x2bc020,this[_0x250bcf(0x225)](_0x247472,_0x2d30c1));}}}this['setActionState'](_0x250bcf(0x7b1));},Window_BattleItem[_0x2805a3(0x6ac)][_0x2805a3(0x72e)]=function(_0x13b59f){const _0x4bd8fe=_0x2805a3;if(BattleManager['actor']()){if(_0x4bd8fe(0x2ba)!==_0x4bd8fe(0x249))return BattleManager['actor']()[_0x4bd8fe(0x4dd)](_0x13b59f);else{function _0xe4562d(){const _0x3d332d=_0x4bd8fe;return _0x296540[_0x3d332d(0x284)]['Settings'][_0x3d332d(0x46b)]['RowSpacing'];}}}else return Window_ItemList[_0x4bd8fe(0x6ac)]['isEnabled'][_0x4bd8fe(0x5a2)](this,_0x13b59f);},VisuMZ[_0x2805a3(0x284)]['Scene_Map_createSpriteset']=Scene_Map[_0x2805a3(0x6ac)]['createSpriteset'],Scene_Map[_0x2805a3(0x6ac)][_0x2805a3(0x1b6)]=function(){const _0xff2c38=_0x2805a3;VisuMZ['CoreEngine'][_0xff2c38(0x6d7)][_0xff2c38(0x5a2)](this);const _0x1d0b3e=this[_0xff2c38(0x72d)][_0xff2c38(0x525)];if(_0x1d0b3e)this[_0xff2c38(0x579)](_0x1d0b3e);},VisuMZ[_0x2805a3(0x284)][_0x2805a3(0x121)]=Scene_Battle[_0x2805a3(0x6ac)]['createSpriteset'],Scene_Battle['prototype'][_0x2805a3(0x1b6)]=function(){const _0x417b59=_0x2805a3;VisuMZ[_0x417b59(0x284)][_0x417b59(0x121)]['call'](this);const _0x913a3c=this[_0x417b59(0x72d)][_0x417b59(0x525)];if(_0x913a3c)this[_0x417b59(0x579)](_0x913a3c);},Sprite_Actor['prototype'][_0x2805a3(0x1d5)]=function(){const _0x493488=_0x2805a3;Sprite_Battler[_0x493488(0x6ac)][_0x493488(0x1d5)][_0x493488(0x5a2)](this),this['updateShadow']();if(this[_0x493488(0x772)])this[_0x493488(0x50b)]();else this[_0x493488(0x4d8)]!==''&&(this[_0x493488(0x4d8)]='');},Window['prototype']['_refreshArrows']=function(){const _0x410037=_0x2805a3,_0x30e0eb=this[_0x410037(0x2c0)],_0x45a376=this['_height'],_0x42f45c=0x18,_0x5cdcb0=_0x42f45c/0x2,_0x52afcd=0x60+_0x42f45c,_0x1037a2=0x0+_0x42f45c;this[_0x410037(0x5cf)][_0x410037(0x639)]=this['_windowskin'],this[_0x410037(0x5cf)][_0x410037(0x6d9)]['x']=0.5,this[_0x410037(0x5cf)][_0x410037(0x6d9)]['y']=0.5,this['_downArrowSprite'][_0x410037(0x7d9)](_0x52afcd+_0x5cdcb0,_0x1037a2+_0x5cdcb0+_0x42f45c,_0x42f45c,_0x5cdcb0),this[_0x410037(0x5cf)][_0x410037(0x501)](Math[_0x410037(0x72b)](_0x30e0eb/0x2),Math[_0x410037(0x72b)](_0x45a376-_0x5cdcb0)),this['_upArrowSprite']['bitmap']=this['_windowskin'],this[_0x410037(0x200)][_0x410037(0x6d9)]['x']=0.5,this[_0x410037(0x200)][_0x410037(0x6d9)]['y']=0.5,this[_0x410037(0x200)][_0x410037(0x7d9)](_0x52afcd+_0x5cdcb0,_0x1037a2,_0x42f45c,_0x5cdcb0),this[_0x410037(0x200)][_0x410037(0x501)](Math[_0x410037(0x72b)](_0x30e0eb/0x2),Math[_0x410037(0x72b)](_0x5cdcb0));},Window[_0x2805a3(0x6ac)]['_refreshPauseSign']=function(){const _0x383752=_0x2805a3,_0x21ddd8=0x90,_0x1337e5=0x60,_0x5c3cb5=0x18;this[_0x383752(0x550)][_0x383752(0x639)]=this[_0x383752(0x3b0)],this[_0x383752(0x550)]['anchor']['x']=0.5,this[_0x383752(0x550)]['anchor']['y']=0x1,this['_pauseSignSprite'][_0x383752(0x501)](Math[_0x383752(0x72b)](this[_0x383752(0x2c0)]/0x2),this[_0x383752(0xba)]),this[_0x383752(0x550)][_0x383752(0x7d9)](_0x21ddd8,_0x1337e5,_0x5c3cb5,_0x5c3cb5),this[_0x383752(0x550)]['alpha']=0xff;},Window[_0x2805a3(0x6ac)][_0x2805a3(0x2b2)]=function(){const _0x59ce88=_0x2805a3,_0x5f139c=this[_0x59ce88(0x36a)][_0x59ce88(0x1c6)][_0x59ce88(0x40a)](new Point(0x0,0x0)),_0xd780df=this[_0x59ce88(0x36a)][_0x59ce88(0x192)];_0xd780df['x']=_0x5f139c['x']+this[_0x59ce88(0xa7)]['x'],_0xd780df['y']=_0x5f139c['y']+this[_0x59ce88(0xa7)]['y'],_0xd780df[_0x59ce88(0x42c)]=Math[_0x59ce88(0x515)](this[_0x59ce88(0xe0)]*this[_0x59ce88(0x739)]['x']),_0xd780df['height']=Math[_0x59ce88(0x515)](this[_0x59ce88(0x46a)]*this['scale']['y']);},Window[_0x2805a3(0x6ac)][_0x2805a3(0x170)]=function(){const _0x4f0e70=_0x2805a3,_0x436d36=this[_0x4f0e70(0x2e4)],_0x41148e=Math[_0x4f0e70(0x2dd)](0x0,this['_width']-_0x436d36*0x2),_0x434836=Math['max'](0x0,this['_height']-_0x436d36*0x2),_0x4afd13=this[_0x4f0e70(0x50d)],_0x3171a0=_0x4afd13[_0x4f0e70(0x730)][0x0];_0x4afd13[_0x4f0e70(0x639)]=this[_0x4f0e70(0x3b0)],_0x4afd13[_0x4f0e70(0x7d9)](0x0,0x0,0x60,0x60),_0x4afd13[_0x4f0e70(0x501)](_0x436d36,_0x436d36),_0x4afd13[_0x4f0e70(0x739)]['x']=_0x41148e/0x60,_0x4afd13[_0x4f0e70(0x739)]['y']=_0x434836/0x60,_0x3171a0[_0x4f0e70(0x639)]=this[_0x4f0e70(0x3b0)],_0x3171a0[_0x4f0e70(0x7d9)](0x0,0x60,0x60,0x60),_0x3171a0[_0x4f0e70(0x501)](0x0,0x0,_0x41148e,_0x434836),_0x3171a0[_0x4f0e70(0x739)]['x']=0x60/_0x41148e,_0x3171a0[_0x4f0e70(0x739)]['y']=0x60/_0x434836,_0x4afd13[_0x4f0e70(0x92)](this['_colorTone']);};